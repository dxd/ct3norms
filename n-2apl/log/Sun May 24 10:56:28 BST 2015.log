2015-05-24 10:56:29,630 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/gigaspaces-xap-premium-9.5.1-ga/logs/2015-05-24~10.56-gigaspaces-service-192.168.1.100-15062.log
-------------------------last log tuples start--------------------------------
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-24 10:56:38.161, clock=0]
org notified sent tile(cell(0,0),brown,0).
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-24 10:56:38.161, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-24 10:56:38.161, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-24 10:56:38.161, clock=0]
Event sent to agent      a10 tile(brown, 0, 0, 0)
Event sent to agent      a40 tile(brown, 0, 0, 0)
Event sent to agent      a30 tile(brown, 0, 0, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-24 10:56:38.197, clock=0]
Event sent to agent      a30 tile(brown, 0, 1, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-24 10:56:38.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-24 10:56:38.197, clock=0]
Event sent to agent      a10 tile(brown, 0, 1, 0)
Event sent to agent      a40 tile(brown, 0, 1, 0)
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-24 10:56:38.197, clock=0]
org notified sent tile(cell(0,1),brown,0).
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-24 10:56:38.205, clock=0]
Event sent to agent      a30 tile(white, 0, 2, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-24 10:56:38.205, clock=0]
Event sent to agent      a10 tile(white, 0, 2, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-24 10:56:38.205, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-24 10:56:38.205, clock=0]
org notified sent tile(cell(0,2),white,0).
Event sent to agent      a40 tile(white, 0, 2, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-24 10:56:38.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-24 10:56:38.212, clock=0]
Event sent to agent      a30 tile(yellow, 0, 3, 0)
Event sent to agent      a10 tile(yellow, 0, 3, 0)
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-24 10:56:38.212, clock=0]
org notified sent tile(cell(0,3),yellow,0).
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-24 10:56:38.212, clock=0]
Event sent to agent      a40 tile(yellow, 0, 3, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-24 10:56:38.219, clock=0]
Event sent to agent      a30 tile(brown, 0, 4, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-24 10:56:38.219, clock=0]
Event sent to agent      a40 tile(brown, 0, 4, 0)
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-24 10:56:38.219, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-24 10:56:38.219, clock=0]
org notified sent tile(cell(0,4),brown,0).
Event sent to agent      a10 tile(brown, 0, 4, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-24 10:56:38.224, clock=0]
Event sent to agent      a30 tile(blue, 0, 5, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-24 10:56:38.224, clock=0]
Event sent to agent      a10 tile(blue, 0, 5, 0)
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-24 10:56:38.224, clock=0]
org notified sent tile(cell(0,5),blue,0).
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-24 10:56:38.224, clock=0]
Event sent to agent      a40 tile(blue, 0, 5, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-24 10:56:38.23, clock=0]
Event sent to agent      a30 tile(brown, 0, 6, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-24 10:56:38.23, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-24 10:56:38.23, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-24 10:56:38.23, clock=0]
Event sent to agent      a10 tile(brown, 0, 6, 0)
org notified sent tile(cell(0,6),brown,0).
Event sent to agent      a40 tile(brown, 0, 6, 0)
#########################Game Initialized
AGENT Thread-15: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-13: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Scheduled]:{	initialize
}


[Scheduled]:{	initialize
}


[Scheduled]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 0, 6)
[Scheduled]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@34d4b411
[CTAH] The created APLList : [game_initialized]
[Scheduled]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2ad1223d
[CTAH] The created APLList : [game_initialized]
[Scheduled]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3da9c737
[CTAH] The created APLList : [game_initialized]
[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID)
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	getId;
	B(agentId(ID));
	getRole(ID)
},
{	ReceivedEvent(game_initialized)
}


[Scheduled]:{	getId;
	B(agentId(ID));
	getRole(ID)
},
{	ReceivedEvent(game_initialized)
}


[Scheduled]:{	getId;
	B(agentId(ID));
	getRole(ID)
},
{	ReceivedEvent(game_initialized)
}


[Scheduled]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID)
},
{	Initialize
}


[Scheduled]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID)
},
{	Initialize
}


[Scheduled]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID)
},
{	Initialize
}


[Scheduled]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	getRole(3)
}


[Scheduled]:{	B(agentId(ID));
	getRole(ID)
}


[Scheduled]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X)
}


[Scheduled]:{	getRole(0)
}


[Scheduled]:{	getRole(2)
}


[Scheduled]:{	GetRole(3, none)
}


[Scheduled]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X)
}


[Scheduled]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X)
}


[Scheduled]:


[Scheduled]:{	GetRole(0, ra)
}


[Scheduled]:{	GetRole(2, none)
}


[Scheduled]:


[Scheduled]:


object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-24 10:56:38.233, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-24 10:56:38.233, clock=0]
Event sent to agent      a30 tile(brown, 1, 0, 0)
Event sent to agent      a10 tile(brown, 1, 0, 0)
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-24 10:56:38.233, clock=0]
org notified sent tile(cell(1,0),brown,0).
[Scheduled]:


[Scheduled]:


Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 0)
[Scheduled]:{	UpdateTile(brown, 1, 0)
}


[Scheduled]:{	UpdateTile(brown, 1, 0)
}


[Scheduled]:


[Scheduled]:


object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-24 10:56:38.233, clock=0]
Event sent to agent      a40 tile(brown, 1, 0, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-24 10:56:38.236, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-24 10:56:38.236, clock=0]
Event sent to agent      a30 tile(yellow, 1, 1, 0)
Event sent to agent      a10 tile(yellow, 1, 1, 0)
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-24 10:56:38.236, clock=0]
org notified sent tile(cell(1,1),yellow,0).
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-24 10:56:38.236, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-24 10:56:38.238, clock=0]
Event sent to agent      a40 tile(yellow, 1, 1, 0)
Event sent to agent      a10 tile(white, 1, 2, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-24 10:56:38.238, clock=0]
Event sent to agent      a30 tile(white, 1, 2, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-24 10:56:38.238, clock=0]
Event sent to agent      a40 tile(white, 1, 2, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-24 10:56:38.24, clock=0]
Event sent to agent      a10 tile(white, 1, 3, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-24 10:56:38.24, clock=0]
Event sent to agent      a30 tile(white, 1, 3, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-24 10:56:38.24, clock=0]
Event sent to agent      a40 tile(white, 1, 3, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-24 10:56:38.241, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-24 10:56:38.241, clock=0]
Event sent to agent      a30 tile(blue, 1, 4, 0)
Event sent to agent      a10 tile(blue, 1, 4, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-24 10:56:38.241, clock=0]
Event sent to agent      a40 tile(blue, 1, 4, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-24 10:56:38.243, clock=0]
Event sent to agent      a30 tile(brown, 1, 5, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-24 10:56:38.243, clock=0]
Event sent to agent      a10 tile(brown, 1, 5, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-24 10:56:38.243, clock=0]
Event sent to agent      a40 tile(brown, 1, 5, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-24 10:56:38.244, clock=0]
Event sent to agent      a30 tile(yellow, 1, 6, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-24 10:56:38.244, clock=0]
Event sent to agent      a10 tile(yellow, 1, 6, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-24 10:56:38.244, clock=0]
Event sent to agent      a40 tile(yellow, 1, 6, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-24 10:56:38.245, clock=0]
Event sent to agent      a30 tile(white, 2, 0, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-24 10:56:38.245, clock=0]
Event sent to agent      a10 tile(white, 2, 0, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-24 10:56:38.245, clock=0]
Event sent to agent      a40 tile(white, 2, 0, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-24 10:56:38.246, clock=0]
Event sent to agent      a30 tile(white, 2, 1, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-24 10:56:38.246, clock=0]
Event sent to agent      a10 tile(white, 2, 1, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-24 10:56:38.246, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-24 10:56:38.248, clock=0]
Event sent to agent      a40 tile(white, 2, 1, 0)
Event sent to agent      a30 tile(brown, 2, 2, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-24 10:56:38.248, clock=0]
Event sent to agent      a10 tile(brown, 2, 2, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-24 10:56:38.249, clock=0]
Event sent to agent      a30 tile(blue, 2, 3, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-24 10:56:38.25, clock=0]
Event sent to agent      a30 tile(white, 2, 4, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-24 10:56:38.251, clock=0]
Event sent to agent      a30 tile(brown, 2, 5, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-24 10:56:38.252, clock=0]
Event sent to agent      a30 tile(brown, 2, 6, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-24 10:56:38.253, clock=0]
Event sent to agent      a30 tile(white, 3, 0, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-24 10:56:38.254, clock=0]
Event sent to agent      a30 tile(yellow, 3, 1, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-24 10:56:38.255, clock=0]
Event sent to agent      a30 tile(blue, 3, 2, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-24 10:56:38.257, clock=0]
Event sent to agent      a30 tile(blue, 3, 3, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-24 10:56:38.26, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-24 10:56:38.248, clock=0]
Event sent to agent      a30 tile(yellow, 3, 4, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-24 10:56:38.263, clock=0]
Event sent to agent      a30 tile(yellow, 3, 5, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-24 10:56:38.264, clock=0]
Event sent to agent      a30 tile(white, 3, 6, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-24 10:56:38.265, clock=0]
Event sent to agent      a30 tile(brown, 4, 0, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-24 10:56:38.266, clock=0]
Event sent to agent      a30 tile(blue, 4, 1, 0)
Event sent to agent      a40 tile(brown, 2, 2, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-24 10:56:38.249, clock=0]
Event sent to agent      a40 tile(blue, 2, 3, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-24 10:56:38.25, clock=0]
Event sent to agent      a40 tile(white, 2, 4, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-24 10:56:38.251, clock=0]
Event sent to agent      a40 tile(brown, 2, 5, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-24 10:56:38.252, clock=0]
Event sent to agent      a40 tile(brown, 2, 6, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-24 10:56:38.253, clock=0]
Event sent to agent      a40 tile(white, 3, 0, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-24 10:56:38.254, clock=0]
Event sent to agent      a40 tile(yellow, 3, 1, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-24 10:56:38.255, clock=0]
Event sent to agent      a40 tile(blue, 3, 2, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-24 10:56:38.257, clock=0]
Event sent to agent      a40 tile(blue, 3, 3, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-24 10:56:38.26, clock=0]
Event sent to agent      a40 tile(yellow, 3, 4, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-24 10:56:38.263, clock=0]
Event sent to agent      a40 tile(yellow, 3, 5, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-24 10:56:38.264, clock=0]
Event sent to agent      a40 tile(white, 3, 6, 0)
[Scheduled]:


object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-24 10:56:38.267, clock=0]
Event sent to agent      a30 tile(yellow, 4, 2, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-24 10:56:38.265, clock=0]
Event sent to agent      a40 tile(brown, 4, 0, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-24 10:56:38.249, clock=0]
Event sent to agent      a10 tile(blue, 2, 3, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-24 10:56:38.25, clock=0]
Event sent to agent      a10 tile(white, 2, 4, 0)
object notification: Time [clock=1, time=2015-05-24 10:56:40.421]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-24 10:56:38.251, clock=0]
Event sent to agent      a40 clock(1)
Event sent to agent      a10 tile(brown, 2, 5, 0)
object notification: Time [clock=2, time=2015-05-24 10:56:50.493]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-24 10:56:38.252, clock=0]
Event sent to agent      a40 clock(2)
Event sent to agent      a10 tile(brown, 2, 6, 0)
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-24 10:56:38.238, clock=0]
org notified sent tile(cell(1,2),white,0).
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-24 10:56:38.253, clock=0]
Event sent to agent      a10 tile(white, 3, 0, 0)
object notification: Time [clock=1, time=2015-05-24 10:56:40.421]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-24 10:56:38.254, clock=0]
Event sent to agent      a10 clock(1)
Event sent to agent      a10 tile(yellow, 3, 1, 0)
org notification: Time [clock=1, time=2015-05-24 10:56:40.421]
org notified sent time(1).
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-24 10:56:38.24, clock=0]
org notified sent tile(cell(1,3),white,0).
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-24 10:56:38.268, clock=0]
Event sent to agent      a30 tile(blue, 4, 3, 0)
Event processed UpdateTile(brown, 1, 5)
org notification: Time [clock=2, time=2015-05-24 10:56:50.493]
org notified sent time(2).
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-24 10:56:38.241, clock=0]
org notified sent tile(cell(1,4),blue,0).
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-24 10:56:38.243, clock=0]
org notified sent tile(cell(1,5),brown,0).
Event processed UpdateTile(white, 3, 6)
org notification: Time [clock=3, time=2015-05-24 10:57:00.495]
org notified sent time(3).
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-24 10:56:38.244, clock=0]
org notified sent tile(cell(1,6),yellow,0).
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-24 10:56:38.266, clock=0]
Event sent to agent      a40 tile(blue, 4, 1, 0)
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-24 10:56:38.381]
org notified sent group(g,a10,0).
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-24 10:56:38.319, clock=0]
org notified sent goal(cell(3,3),null,0).
Error while procession organization notification
java.lang.ArrayIndexOutOfBoundsException: 33554431
	at aplprolog.Parsing.IntPrologTokenManager.getNextToken(IntPrologTokenManager.java:1085)
	at aplprolog.Parsing.IntProlog.jj_scan_token(IntProlog.java:1294)
	at aplprolog.Parsing.IntProlog.jj_3R_16(IntProlog.java:734)
	at aplprolog.Parsing.IntProlog.jj_3R_6(IntProlog.java:786)
	at aplprolog.Parsing.IntProlog.jj_3R_5(IntProlog.java:810)
	at aplprolog.Parsing.IntProlog.jj_3_2(IntProlog.java:1150)
	at aplprolog.Parsing.IntProlog.jj_2_2(IntProlog.java:723)
	at aplprolog.Parsing.IntProlog.Argument(IntProlog.java:381)
	at aplprolog.Parsing.IntProlog.Arguments(IntProlog.java:372)
	at aplprolog.Parsing.IntProlog.PosLiteral(IntProlog.java:317)
	at aplprolog.Parsing.IntProlog.Rule(IntProlog.java:250)
	at aplprolog.Parsing.IntProlog.parseFact(IntProlog.java:80)
	at ctMW.EnvCT.notifyOrg(EnvCT.java:692)
	at ctMW.OrgHandler.notify(OrgHandler.java:31)
	at com.j_spaces.core.client.NotifyDelegator.notify(NotifyDelegator.java:142)
	at com.gigaspaces.events.fifo.BlockedOrderedQueue$NotifyFifoTask.dequeueAndTrigger(BlockedOrderedQueue.java:319)
	at com.gigaspaces.events.fifo.BlockedOrderedQueue$NotifyFifoTask.run(BlockedOrderedQueue.java:290)
	at com.gigaspaces.internal.utils.concurrent.RunnableContextClassLoaderDecorator.run(RunnableContextClassLoaderDecorator.java:40)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:695)
aplprolog.Parsing.ParseException: Encountered " "(" "( "" at line 1, column 3.
Was expecting one of:
    <CHARACTER_LITERAL> ...
    <STD_IDENTIFIER> ...
    ";" ...
    "." ...
    "->" ...
    ":-" ...
    "|" ...
    
Error while procession organization notification
java.lang.NullPointerException
	at oopl.DistributedOOPL.handleEvent(DistributedOOPL.java:49)
	at ctMW.EnvCT.notifyOrg(EnvCT.java:692)
	at ctMW.OrgHandler.notify(OrgHandler.java:31)
	at com.j_spaces.core.client.NotifyDelegator.notify(NotifyDelegator.java:142)
	at com.gigaspaces.events.fifo.BlockedOrderedQueue$NotifyFifoTask.dequeueAndTrigger(BlockedOrderedQueue.java:319)
	at com.gigaspaces.events.fifo.BlockedOrderedQueue$NotifyFifoTask.run(BlockedOrderedQueue.java:290)
	at com.gigaspaces.internal.utils.concurrent.RunnableContextClassLoaderDecorator.run(RunnableContextClassLoaderDecorator.java:40)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:695)
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-24 10:56:38.267, clock=0]
Event sent to agent      a40 tile(yellow, 4, 2, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-24 10:56:38.268, clock=0]
Event sent to agent      a40 tile(blue, 4, 3, 0)
object notification: Time [clock=3, time=2015-05-24 10:57:00.495]
Event sent to agent      a40 clock(3)
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-24 10:56:38.255, clock=0]
Event sent to agent      a10 tile(blue, 3, 2, 0)
object notification: Time [clock=1, time=2015-05-24 10:56:40.421]
Event sent to agent      a30 clock(1)
object notification: Time [clock=2, time=2015-05-24 10:56:50.493]
Event sent to agent      a10 clock(2)
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-24 10:56:38.257, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-24 10:56:38.269, clock=0]
Event sent to agent      a10 tile(blue, 3, 3, 0)
Event sent to agent      a40 tile(brown, 4, 4, 0)
object notification: Time [clock=2, time=2015-05-24 10:56:50.493]
object notification: Time [clock=3, time=2015-05-24 10:57:00.495]
Event sent to agent      a30 clock(2)
Event sent to agent      a10 clock(3)
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-24 10:56:38.26, clock=0]
object notification: Time [clock=3, time=2015-05-24 10:57:00.495]
Event sent to agent      a10 tile(yellow, 3, 4, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-24 10:56:38.263, clock=0]
Event sent to agent      a10 tile(yellow, 3, 5, 0)
Event sent to agent      a30 clock(3)
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-24 10:56:38.264, clock=0]
Event sent to agent      a10 tile(white, 3, 6, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-24 10:56:38.265, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-24 10:56:38.27, clock=0]
Event sent to agent      a10 tile(brown, 4, 0, 0)
Event sent to agent      a40 tile(yellow, 4, 5, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-24 10:56:38.266, clock=0]
Event sent to agent      a10 tile(blue, 4, 1, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-24 10:56:38.267, clock=0]
Event sent to agent      a10 tile(yellow, 4, 2, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-24 10:56:38.271, clock=0]
Event sent to agent      a40 tile(brown, 4, 6, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-24 10:56:38.268, clock=0]
Event sent to agent      a10 tile(blue, 4, 3, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-24 10:56:38.269, clock=0]
Event sent to agent      a10 tile(brown, 4, 4, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-24 10:56:38.27, clock=0]
Event sent to agent      a10 tile(yellow, 4, 5, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-24 10:56:38.269, clock=0]
Event sent to agent      a30 tile(brown, 4, 4, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-24 10:56:38.245, clock=0]
org notified sent tile(cell(2,0),white,0).
[Scheduled]:


object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-24 10:56:38.272, clock=0]
Event sent to agent      a40 tile(yellow, 5, 0, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-24 10:56:38.271, clock=0]
Event sent to agent      a10 tile(brown, 4, 6, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-24 10:56:38.27, clock=0]
Event sent to agent      a30 tile(yellow, 4, 5, 0)
[Scheduled]:


object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-24 10:56:38.273, clock=0]
Event sent to agent      a40 tile(white, 5, 1, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-24 10:56:38.272, clock=0]
Event sent to agent      a10 tile(yellow, 5, 0, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-24 10:56:38.271, clock=0]
Event sent to agent      a30 tile(brown, 4, 6, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-24 10:56:38.272, clock=0]
Event sent to agent      a30 tile(yellow, 5, 0, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-24 10:56:38.246, clock=0]
org notified sent tile(cell(2,1),white,0).
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-24 10:56:38.275, clock=0]
Event sent to agent      a40 tile(brown, 5, 2, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-24 10:56:38.273, clock=0]
Event sent to agent      a10 tile(white, 5, 1, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-24 10:56:38.273, clock=0]
Event sent to agent      a30 tile(white, 5, 1, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-24 10:56:38.276, clock=0]
Event sent to agent      a40 tile(yellow, 5, 3, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-24 10:56:38.275, clock=0]
Event sent to agent      a10 tile(brown, 5, 2, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-24 10:56:38.275, clock=0]
Event sent to agent      a30 tile(brown, 5, 2, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-24 10:56:38.276, clock=0]
Event sent to agent      a30 tile(yellow, 5, 3, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-24 10:56:38.277, clock=0]
Event sent to agent      a40 tile(blue, 5, 4, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-24 10:56:38.276, clock=0]
Event sent to agent      a10 tile(yellow, 5, 3, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-24 10:56:38.277, clock=0]
Event sent to agent      a30 tile(blue, 5, 4, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-24 10:56:38.279, clock=0]
Event sent to agent      a40 tile(brown, 5, 5, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-24 10:56:38.277, clock=0]
Event sent to agent      a10 tile(blue, 5, 4, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-24 10:56:38.248, clock=0]
org notified sent tile(cell(2,2),brown,0).
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-24 10:56:38.249, clock=0]
org notified sent tile(cell(2,3),blue,0).
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a40 tile(white, 5, 6, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-24 10:56:38.279, clock=0]
Event sent to agent      a10 tile(brown, 5, 5, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-24 10:56:38.279, clock=0]
Event sent to agent      a30 tile(brown, 5, 5, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-24 10:56:38.25, clock=0]
org notified sent tile(cell(2,4),white,0).
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a10 tile(white, 5, 6, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a30 tile(white, 5, 6, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-24 10:56:38.251, clock=0]
org notified sent tile(cell(2,5),brown,0).
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a30 tile(blue, 6, 0, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a40 tile(blue, 6, 0, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-24 10:56:38.281, clock=0]
Event sent to agent      a30 tile(brown, 6, 1, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-24 10:56:38.281, clock=0]
Event sent to agent      a40 tile(brown, 6, 1, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-24 10:56:38.282, clock=0]
Event sent to agent      a40 tile(white, 6, 2, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-24 10:56:38.282, clock=0]
Event sent to agent      a30 tile(white, 6, 2, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-24 10:56:38.283, clock=0]
Event sent to agent      a40 tile(brown, 6, 3, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-24 10:56:38.283, clock=0]
Event sent to agent      a30 tile(brown, 6, 3, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-24 10:56:38.284, clock=0]
Event sent to agent      a40 tile(white, 6, 4, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-24 10:56:38.284, clock=0]
Event sent to agent      a30 tile(white, 6, 4, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-24 10:56:38.28, clock=0]
Event sent to agent      a10 tile(blue, 6, 0, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-24 10:56:38.285, clock=0]
Event sent to agent      a30 tile(brown, 6, 5, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-24 10:56:38.281, clock=0]
Event sent to agent      a10 tile(brown, 6, 1, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-24 10:56:38.282, clock=0]
Event sent to agent      a10 tile(white, 6, 2, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-24 10:56:38.286, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-24 10:56:38.283, clock=0]
Event sent to agent      a30 tile(white, 6, 6, 0)
Event sent to agent      a10 tile(brown, 6, 3, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-24 10:56:38.284, clock=0]
Event sent to agent      a10 tile(white, 6, 4, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-24 10:56:38.285, clock=0]
Event sent to agent      a10 tile(brown, 6, 5, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-24 10:56:38.286, clock=0]
Event sent to agent      a10 tile(white, 6, 6, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-24 10:56:38.285, clock=0]
Event sent to agent      a40 tile(brown, 6, 5, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-24 10:56:38.286, clock=0]
Event sent to agent      a40 tile(white, 6, 6, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-24 10:56:38.252, clock=0]
org notified sent tile(cell(2,6),brown,0).
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-24 10:56:38.253, clock=0]
org notified sent tile(cell(3,0),white,0).
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-24 10:56:38.254, clock=0]
org notified sent tile(cell(3,1),yellow,0).
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-24 10:56:38.255, clock=0]
org notified sent tile(cell(3,2),blue,0).
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-24 10:56:38.257, clock=0]
org notified sent tile(cell(3,3),blue,0).
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-24 10:56:38.26, clock=0]
org notified sent tile(cell(3,4),yellow,0).
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-24 10:56:38.263, clock=0]
org notified sent tile(cell(3,5),yellow,0).
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-24 10:56:38.264, clock=0]
org notified sent tile(cell(3,6),white,0).
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-24 10:56:38.265, clock=0]
org notified sent tile(cell(4,0),brown,0).
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-24 10:56:38.266, clock=0]
org notified sent tile(cell(4,1),blue,0).
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
[Scheduled]:{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateClock(1)
},
{	UpdateClock(2)
}


Event processed UpdateTile(white, 6, 6)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-24 10:56:38.267, clock=0]
org notified sent tile(cell(4,2),yellow,0).
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-24 10:56:38.268, clock=0]
org notified sent tile(cell(4,3),blue,0).
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-24 10:56:38.269, clock=0]
org notified sent tile(cell(4,4),brown,0).
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-24 10:56:38.27, clock=0]
org notified sent tile(cell(4,5),yellow,0).
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateClock(1)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-24 10:56:38.271, clock=0]
org notified sent tile(cell(4,6),brown,0).
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateClock(2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateClock(3)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-24 10:56:38.272, clock=0]
org notified sent tile(cell(5,0),yellow,0).
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-24 10:56:38.273, clock=0]
org notified sent tile(cell(5,1),white,0).
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-24 10:56:38.275, clock=0]
org notified sent tile(cell(5,2),brown,0).
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-24 10:56:38.276, clock=0]
org notified sent tile(cell(5,3),yellow,0).
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-24 10:56:38.277, clock=0]
org notified sent tile(cell(5,4),blue,0).
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-24 10:56:38.279, clock=0]
org notified sent tile(cell(5,5),brown,0).
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-24 10:56:38.28, clock=0]
org notified sent tile(cell(5,6),white,0).
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-24 10:56:38.28, clock=0]
org notified sent tile(cell(6,0),blue,0).
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-24 10:56:38.281, clock=0]
org notified sent tile(cell(6,1),brown,0).
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-24 10:56:38.282, clock=0]
org notified sent tile(cell(6,2),white,0).
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-24 10:56:38.283, clock=0]
org notified sent tile(cell(6,3),brown,0).
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-24 10:56:38.284, clock=0]
org notified sent tile(cell(6,4),white,0).
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-24 10:56:38.285, clock=0]
org notified sent tile(cell(6,5),brown,0).
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-24 10:56:38.286, clock=0]
org notified sent tile(cell(6,6),white,0).
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateClock(3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
[Scheduled]:{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[Scheduled]:{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateClock(1)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateClock(2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[Scheduled]:{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateClock(3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[Scheduled]:


[Scheduled]:


object notification: Time [clock=4, time=2015-05-24 10:57:10.497]
Event sent to agent      a10 clock(4)
object notification: Time [clock=4, time=2015-05-24 10:57:10.497]
object notification: Time [clock=4, time=2015-05-24 10:57:10.497]
Event sent to agent      a40 clock(4)
Event sent to agent      a30 clock(4)
org notification: Time [clock=4, time=2015-05-24 10:57:10.497]
org notified sent time(4).
[Scheduled]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Scheduled]:{	UpdateClock(4)
}


[Scheduled]:{	UpdateClock(4)
}


[Scheduled]:{	UpdateClock(4)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=5, time=2015-05-24 10:57:20.5]
Event sent to agent      a10 clock(5)
object notification: Time [clock=5, time=2015-05-24 10:57:20.5]
Event sent to agent      a40 clock(5)
object notification: Time [clock=5, time=2015-05-24 10:57:20.5]
Event sent to agent      a30 clock(5)
org notification: Time [clock=5, time=2015-05-24 10:57:20.5]
org notified sent time(5).
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Scheduled]:{	UpdateClock(5)
}


[Scheduled]:{	UpdateClock(5)
}


[Scheduled]:{	UpdateClock(5)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=6, time=2015-05-24 10:57:30.502]
Event sent to agent      a10 clock(6)
object notification: Time [clock=6, time=2015-05-24 10:57:30.502]
Event sent to agent      a40 clock(6)
org notification: Time [clock=6, time=2015-05-24 10:57:30.502]
org notified sent time(6).
object notification: Time [clock=6, time=2015-05-24 10:57:30.502]
Event sent to agent      a30 clock(6)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Scheduled]:{	UpdateClock(6)
}


[Scheduled]:{	UpdateClock(6)
}


[Scheduled]:{	UpdateClock(6)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=7, time=2015-05-24 10:57:40.503]
Event sent to agent      a10 clock(7)
object notification: Time [clock=7, time=2015-05-24 10:57:40.503]
Event sent to agent      a40 clock(7)
org notification: Time [clock=7, time=2015-05-24 10:57:40.503]
org notified sent time(7).
object notification: Time [clock=7, time=2015-05-24 10:57:40.503]
Event sent to agent      a30 clock(7)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Scheduled]:{	UpdateClock(7)
}


[Scheduled]:{	UpdateClock(7)
}


[Scheduled]:{	UpdateClock(7)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=8, time=2015-05-24 10:57:50.507]
object notification: Time [clock=8, time=2015-05-24 10:57:50.507]
object notification: Time [clock=8, time=2015-05-24 10:57:50.507]
object notification: Time [clock=8, time=2015-05-24 10:57:50.507]
Event sent to agent      a30 clock(8)
Event sent to agent      a10 clock(8)
org notified sent time(8).
Event sent to agent      a40 clock(8)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Scheduled]:{	UpdateClock(8)
}


[Scheduled]:{	UpdateClock(8)
}


[Scheduled]:{	UpdateClock(8)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=9, time=2015-05-24 10:58:00.51]
org notification: Time [clock=9, time=2015-05-24 10:58:00.51]
org notified sent time(9).
Event sent to agent      a10 clock(9)
object notification: Time [clock=9, time=2015-05-24 10:58:00.51]
Event sent to agent      a40 clock(9)
object notification: Time [clock=9, time=2015-05-24 10:58:00.51]
Event sent to agent      a30 clock(9)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Scheduled]:{	UpdateClock(9)
}


[Scheduled]:{	UpdateClock(9)
}


[Scheduled]:{	UpdateClock(9)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=10, time=2015-05-24 10:58:10.513]
org notified sent time(10).
object notification: Time [clock=10, time=2015-05-24 10:58:10.513]
object notification: Time [clock=10, time=2015-05-24 10:58:10.513]
object notification: Time [clock=10, time=2015-05-24 10:58:10.513]
Event sent to agent      a30 clock(10)
Event sent to agent      a10 clock(10)
Event sent to agent      a40 clock(10)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Scheduled]:{	UpdateClock(10)
}


[Scheduled]:{	UpdateClock(10)
}


[Scheduled]:{	UpdateClock(10)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=11, time=2015-05-24 10:58:20.516]
object notification: Time [clock=11, time=2015-05-24 10:58:20.516]
Event sent to agent      a30 clock(11)
Event sent to agent      a40 clock(11)
object notification: Time [clock=11, time=2015-05-24 10:58:20.516]
Event sent to agent      a10 clock(11)
org notification: Time [clock=11, time=2015-05-24 10:58:20.516]
org notified sent time(11).
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(11)
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Scheduled]:{	UpdateClock(11)
}


[Scheduled]:{	UpdateClock(11)
}


[Scheduled]:{	UpdateClock(11)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=12, time=2015-05-24 10:58:30.519]
org notified sent time(12).
object notification: Time [clock=12, time=2015-05-24 10:58:30.519]
Event sent to agent      a30 clock(12)
object notification: Time [clock=12, time=2015-05-24 10:58:30.519]
object notification: Time [clock=12, time=2015-05-24 10:58:30.519]
Event sent to agent      a40 clock(12)
Event sent to agent      a10 clock(12)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(12)
Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Scheduled]:{	UpdateClock(12)
}


[Scheduled]:{	UpdateClock(12)
}


[Scheduled]:{	UpdateClock(12)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2940943
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@a7907a0
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@11948f9
[CTAH] The created APLList : [phasechange]
[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	update
}


[Scheduled]:{	update
}


[Scheduled]:{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=13, time=2015-05-24 10:58:40.522]
object notification: Time [clock=13, time=2015-05-24 10:58:40.522]
Event sent to agent      a40 clock(13)
org notification: Time [clock=13, time=2015-05-24 10:58:40.522]
org notified sent time(13).
Event sent to agent      a10 clock(13)
object notification: Time [clock=13, time=2015-05-24 10:58:40.522]
Event sent to agent      a30 clock(13)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(13)
Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Scheduled]:{	UpdateClock(13)
}


[Scheduled]:{	UpdateClock(13)
}


[Scheduled]:{	UpdateClock(13)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=14, time=2015-05-24 10:58:50.524]
org notified sent time(14).
object notification: Time [clock=14, time=2015-05-24 10:58:50.524]
Event sent to agent      a10 clock(14)
object notification: Time [clock=14, time=2015-05-24 10:58:50.524]
Event sent to agent      a40 clock(14)
object notification: Time [clock=14, time=2015-05-24 10:58:50.524]
Event sent to agent      a30 clock(14)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(14)
Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Scheduled]:{	UpdateClock(14)
}


[Scheduled]:{	UpdateClock(14)
}


[Scheduled]:{	UpdateClock(14)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=15, time=2015-05-24 10:59:00.527]
Event sent to agent      a10 clock(15)
org notification: Time [clock=15, time=2015-05-24 10:59:00.527]
object notification: Time [clock=15, time=2015-05-24 10:59:00.527]
Event sent to agent      a30 clock(15)
object notification: Time [clock=15, time=2015-05-24 10:59:00.527]
Event sent to agent      a40 clock(15)
org notified sent time(15).
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(15)
Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Scheduled]:{	UpdateClock(15)
}


[Scheduled]:{	UpdateClock(15)
}


[Scheduled]:{	UpdateClock(15)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=16, time=2015-05-24 10:59:10.531]
org notified sent time(16).
object notification: Time [clock=16, time=2015-05-24 10:59:10.531]
object notification: Time [clock=16, time=2015-05-24 10:59:10.531]
Event sent to agent      a10 clock(16)
object notification: Time [clock=16, time=2015-05-24 10:59:10.531]
Event sent to agent      a30 clock(16)
Event sent to agent      a40 clock(16)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Scheduled]:{	UpdateClock(16)
}


[Scheduled]:{	UpdateClock(16)
}


[Scheduled]:{	UpdateClock(16)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=17, time=2015-05-24 10:59:20.536]
org notification: Time [clock=17, time=2015-05-24 10:59:20.536]
org notified sent time(17).
Event sent to agent      a10 clock(17)
object notification: Time [clock=17, time=2015-05-24 10:59:20.536]
Event sent to agent      a30 clock(17)
object notification: Time [clock=17, time=2015-05-24 10:59:20.536]
Event sent to agent      a40 clock(17)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Scheduled]:{	UpdateClock(17)
}


[Scheduled]:{	UpdateClock(17)
}


[Scheduled]:{	UpdateClock(17)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=18, time=2015-05-24 10:59:30.54]
object notification: Time [clock=18, time=2015-05-24 10:59:30.54]
org notification: Time [clock=18, time=2015-05-24 10:59:30.54]
org notified sent time(18).
Event sent to agent      a30 clock(18)
Event sent to agent      a10 clock(18)
object notification: Time [clock=18, time=2015-05-24 10:59:30.54]
Event sent to agent      a40 clock(18)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Scheduled]:{	UpdateClock(18)
}


[Scheduled]:{	UpdateClock(18)
}


[Scheduled]:{	UpdateClock(18)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 1)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5fd2b733
[CTAH] The created APLList : [phasechange]
[Scheduled]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 1)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@a8af4b4
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@78fd4889
[CTAH] The created APLList : [phasechange]
[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	ReceivedEvent(phasechange)
}


[Scheduled]:{	update
}


[Scheduled]:{	update
}


[Scheduled]:{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	Updated
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	update
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=19, time=2015-05-24 10:59:40.544]
org notified sent time(19).
object notification: Time [clock=19, time=2015-05-24 10:59:40.544]
Event sent to agent      a30 clock(19)
object notification: Time [clock=19, time=2015-05-24 10:59:40.544]
Event sent to agent      a40 clock(19)
object notification: Time [clock=19, time=2015-05-24 10:59:40.544]
Event sent to agent      a10 clock(19)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Scheduled]:{	UpdateClock(19)
}


[Scheduled]:{	UpdateClock(19)
}


[Scheduled]:{	UpdateClock(19)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


object notification: Time [clock=20, time=2015-05-24 10:59:50.547]
object notification: Time [clock=20, time=2015-05-24 10:59:50.547]
object notification: Time [clock=20, time=2015-05-24 10:59:50.547]
Event sent to agent      a10 clock(20)
org notification: Time [clock=20, time=2015-05-24 10:59:50.547]
Event sent to agent      a40 clock(20)
Event sent to agent      a30 clock(20)
org notified sent time(20).
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Scheduled]:{	UpdateClock(20)
}


[Scheduled]:{	UpdateClock(20)
}


[Scheduled]:{	UpdateClock(20)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=21, time=2015-05-24 11:00:00.55]
org notified sent time(21).
object notification: Time [clock=21, time=2015-05-24 11:00:00.55]
object notification: Time [clock=21, time=2015-05-24 11:00:00.55]
Event sent to agent      a30 clock(21)
object notification: Time [clock=21, time=2015-05-24 11:00:00.55]
Event sent to agent      a40 clock(21)
Event sent to agent      a10 clock(21)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Scheduled]:{	UpdateClock(21)
}


[Scheduled]:{	UpdateClock(21)
}


[Scheduled]:{	UpdateClock(21)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=22, time=2015-05-24 11:00:10.553]
org notified sent time(22).
object notification: Time [clock=22, time=2015-05-24 11:00:10.553]
object notification: Time [clock=22, time=2015-05-24 11:00:10.553]
Event sent to agent      a10 clock(22)
Event sent to agent      a30 clock(22)
object notification: Time [clock=22, time=2015-05-24 11:00:10.553]
Event sent to agent      a40 clock(22)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Scheduled]:{	UpdateClock(22)
}


[Scheduled]:{	UpdateClock(22)
}


[Scheduled]:{	UpdateClock(22)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


org notification: Time [clock=23, time=2015-05-24 11:00:20.556]
object notification: Time [clock=23, time=2015-05-24 11:00:20.556]
org notified sent time(23).
object notification: Time [clock=23, time=2015-05-24 11:00:20.556]
object notification: Time [clock=23, time=2015-05-24 11:00:20.556]
Event sent to agent      a40 clock(23)
Event sent to agent      a30 clock(23)
Event sent to agent      a10 clock(23)
[Scheduled]:


[Scheduled]:


[Scheduled]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Scheduled]:{	UpdateClock(23)
}


[Scheduled]:{	UpdateClock(23)
}


[Scheduled]:{	UpdateClock(23)
}


[Scheduled]:


[Scheduled]:


[Scheduled]:


