2015-05-26 12:10:59,471 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-05-26~12.10-gigaspaces-service-192.168.1.102-26670.log
-------------------------last log tuples start--------------------------------
Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-26 11:48:07.254, clock=3]
Time [clock=21, time=2015-05-26 11:51:00.635]
Group [name=g, ra=a10, clock=0, time=2015-05-26 11:47:48.438]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-26 11:47:48.34, clock=0]
Obligation [subject=a20, obligation=[at(2, 3, a20)], sanction=[reduce(a20, 700)], deadline=29, time=2015-05-26 11:48:06.167, clock=3]
Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=29, time=2015-05-26 11:48:06.241, clock=3]
Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-26 11:47:48.395, clock=0]
Response [id=2952, response=accepted, clock=7, time=2015-05-26 11:48:48.036]
Proposal [id=3315, agent=a10, agent2=a20, clock=5, time=2015-05-26 11:48:27.848]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:50.124, clock=13]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 11:48:06.236]
Response [id=9643, response=accepted, clock=8, time=2015-05-26 11:49:00.484]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:56.579, clock=14]
Time [clock=13, time=2015-05-26 11:49:40.62]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-26 11:47:48.344, clock=0]
Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=3, time=2015-05-26 11:48:07.119]
Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=33, time=2015-05-26 11:48:04.7, clock=3]
Color [id=null, color=white, agent=a10, type=yes, sanction=200, time=2015-05-26 11:48:06.471, clock=3]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-26 11:47:48.338, clock=0]
Time [clock=14, time=2015-05-26 11:49:50.622]
Time [clock=9, time=2015-05-26 11:49:00.603]
Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-26 11:49:13.736, clock=10]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:08.016, clock=15]
Response [id=620, response=accepted, clock=7, time=2015-05-26 11:48:43.07]
Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-05-26 11:48:46.096, clock=7]
Proposal [id=2257, agent=a30, agent2=a40, clock=9, time=2015-05-26 11:49:01.136]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:38.693, clock=12]
Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-05-26 11:49:18.499, clock=10]
Time [clock=19, time=2015-05-26 11:50:40.631]
Proposal [id=3521, agent=a40, agent2=a30, clock=9, time=2015-05-26 11:49:07.482]
Response [id=2257, response=accepted, clock=9, time=2015-05-26 11:49:01.147]
Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 200)], deadline=23, time=2015-05-26 11:48:06.796, clock=3]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:49.952, clock=19]
Time [clock=11, time=2015-05-26 11:49:20.61]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:44.467, clock=13]
Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=3, time=2015-05-26 11:48:06.894]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-26 11:47:48.33, clock=0]
Obligation [subject=a20, obligation=[color(white, a20)], sanction=[reduce(a20, 200)], deadline=23, time=2015-05-26 11:48:06.595, clock=3]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 11:48:06.163]
Response [id=4534, response=accepted, clock=5, time=2015-05-26 11:48:28.215]
Time [clock=17, time=2015-05-26 11:50:20.627]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-26 11:47:48.352, clock=0]
Color [id=null, color=white, agent=a40, type=yes, sanction=200, time=2015-05-26 11:48:06.794, clock=3]
Time [clock=10, time=2015-05-26 11:49:10.607]
Time [clock=7, time=2015-05-26 11:48:40.598]
Response [id=2143, response=accepted, clock=7, time=2015-05-26 11:48:43.786]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:20.104, clock=10]
Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-26 11:47:48.353, clock=0]
Time [clock=6, time=2015-05-26 11:48:30.594]
Proposal [id=9643, agent=a40, agent2=a30, clock=8, time=2015-05-26 11:49:00.479]
Time [clock=20, time=2015-05-26 11:50:50.634]
Time [clock=4, time=2015-05-26 11:48:10.591]
Color [id=null, color=white, agent=a30, type=yes, sanction=200, time=2015-05-26 11:48:06.702, clock=3]
Proposal [id=2952, agent=a40, agent2=a20, clock=7, time=2015-05-26 11:48:45.947]
Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-26 11:48:06.892, clock=3]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:12.487, clock=10]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 11:48:06.028]
Prohibition [subject=a20, prohibition=[color(blue, a20)], sanction=[reduce(a20, 100)], clock=3, time=2015-05-26 11:48:07.025]
Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=3, time=2015-05-26 11:48:07.257]
Time [clock=18, time=2015-05-26 11:50:30.628]
Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-26 11:48:07.113, clock=3]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 11:48:06.347]
Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=29, time=2015-05-26 11:48:06.35, clock=3]
Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-26 11:48:07.02, clock=3]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:21.07, clock=17]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:14.604, clock=16]
Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 200)], deadline=23, time=2015-05-26 11:48:06.479, clock=3]
Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-26 11:48:36.647, clock=6]
Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 200)], deadline=23, time=2015-05-26 11:48:06.704, clock=3]
Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-26 11:47:48.314, clock=0]
Time [clock=5, time=2015-05-26 11:48:20.592]
Response [id=3315, response=accepted, clock=5, time=2015-05-26 11:48:29.074]
Time [clock=22, time=2015-05-26 11:51:10.638]
Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=29, time=2015-05-26 11:48:06.036, clock=3]
Response [id=3521, response=accepted, clock=9, time=2015-05-26 11:49:07.499]
Points [subject=a40, time=2015-05-26 11:49:00.679, clock=9, value=900, id=null]
Points [subject=a30, time=2015-05-26 11:48:53.046, clock=8, value=900, id=null]
Time [clock=3, time=2015-05-26 11:48:00.584]
Color [id=null, color=white, agent=a20, type=yes, sanction=200, time=2015-05-26 11:48:06.592, clock=3]
Time [clock=15, time=2015-05-26 11:50:00.623]
Proposal [id=4700, agent=a40, agent2=a10, clock=7, time=2015-05-26 11:48:42.007]
Proposal [id=620, agent=a10, agent2=a40, clock=7, time=2015-05-26 11:48:43.06]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:02.815, clock=15]
Time [clock=2, time=2015-05-26 11:47:50.58]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:26.378, clock=11]
Response [id=1408, response=accepted, clock=5, time=2015-05-26 11:48:28.687]
Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-26 11:48:28.003, clock=5]
Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-26 11:48:42.26, clock=7]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:50:44.393, clock=19]
Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-26 11:48:51.482, clock=8]
Position [subject=a40, id=null, cell=Cell [x=4, y=2], time=2015-05-26 11:48:55.91, clock=8]
Time [clock=8, time=2015-05-26 11:48:50.602]
Time [clock=1, time=2015-05-26 11:47:40.57]
Response [id=4700, response=accepted, clock=7, time=2015-05-26 11:48:42.029]
Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-26 11:48:44.016, clock=7]
Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-05-26 11:48:49.53, clock=7]
Time [clock=16, time=2015-05-26 11:50:10.625]
Proposal [id=4534, agent=a40, agent2=a20, clock=5, time=2015-05-26 11:48:26.917]
Proposal [id=1408, agent=a30, agent2=a20, clock=5, time=2015-05-26 11:48:27.812]
Time [clock=12, time=2015-05-26 11:49:30.612]
Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-26 11:48:35.28, clock=6]
Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-26 11:47:48.347, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-26 11:47:48.333, clock=0]
Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-05-26 11:49:00.67, clock=9]
Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-26 11:48:53.024, clock=8]
Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-26 11:48:35.415, clock=6]
Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-26 11:49:01.337, clock=9]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-26 11:47:48.318, clock=0]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-26 11:49:32.583, clock=12]
Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-05-26 11:49:07.766, clock=9]
Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-26 11:49:04.441, clock=9]
Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-26 11:48:27.139, clock=5]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-26 11:47:48.341, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-26 11:47:48.321, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-26 11:47:48.335, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-26 11:47:48.336, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-26 11:47:48.325, clock=0]
Proposal [id=2143, agent=a30, agent2=a10, clock=7, time=2015-05-26 11:48:43.711]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-26 11:47:48.322, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-26 11:47:48.3, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-26 11:47:48.294, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-26 11:47:48.319, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-26 11:47:48.327, clock=0]
Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-26 11:47:48.354, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-26 11:47:48.304, clock=0]
Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-26 11:47:48.355, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-26 11:47:48.317, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-26 11:47:48.349, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-26 11:47:48.31, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-26 11:47:48.332, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-26 11:47:48.282, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-26 11:47:48.316, clock=0]
Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-26 11:47:48.35, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-26 11:47:48.324, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-26 11:47:48.312, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-26 11:47:48.302, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-26 11:47:48.326, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-26 11:47:48.313, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-26 11:47:48.295, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-26 11:47:48.288, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-26 11:47:48.286, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-26 11:47:48.283, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-26 11:47:48.308, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-26 11:47:48.298, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-26 11:47:48.343, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-26 11:47:48.127, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-26 11:47:48.329, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-26 11:47:48.285, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-26 11:47:48.306, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-26 11:47:48.28, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-26 11:47:48.29, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-26 11:47:48.292, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@b45ad3d
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@18d5e26b
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@37263a93
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


#########################Game Initialized
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
AGENT Thread-16: current phase name: Norm Phase
we have 1 goals
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,0]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,6]
[Planbase]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[Planbase]:{	GetAgentPos(0, 0, 0)
}


[new scheduled]:[GetAgentPos(0, 0, 0)]
[After]:{	GetAgentPos(0, 0, 0)
}


[Planbase]:{	GetAgentPos(0, 6, 0)
}


[new scheduled]:[GetAgentPos(0, 6, 0)]
[After]:{	GetAgentPos(0, 6, 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-26 12:11:14.506, clock=0]
object notification: Time [clock=1, time=2015-05-26 12:11:11.265]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-26 12:11:14.506, clock=0]
object notification: Time [clock=1, time=2015-05-26 12:11:11.265]
object notification: Time [clock=1, time=2015-05-26 12:11:11.265]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-26 12:11:14.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-26 12:11:14.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-26 12:11:14.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-26 12:11:14.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-26 12:11:14.619, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-26 12:11:14.623, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-26 12:11:14.626, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-26 12:11:14.783, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-26 12:11:14.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-26 12:11:14.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-26 12:11:14.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-26 12:11:14.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-26 12:11:14.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-26 12:11:14.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-26 12:11:14.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-26 12:11:14.619, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-26 12:11:14.623, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-26 12:11:14.626, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-26 12:11:14.628, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=1, time=2015-05-26 12:11:11.265]
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-26 12:11:14.868]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-26 12:11:14.615, clock=0]
object notification: Time [clock=2, time=2015-05-26 12:11:21.467]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-26 12:11:14.617, clock=0]
object notification: Time [clock=2, time=2015-05-26 12:11:21.467]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-26 12:11:14.628, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-26 12:11:14.631, clock=0]
object notification: Time [clock=2, time=2015-05-26 12:11:21.467]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-26 12:11:14.619, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-26 12:11:14.623, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-26 12:11:14.634, clock=0]
org notification: Time [clock=2, time=2015-05-26 12:11:21.467]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-26 12:11:14.631, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-26 12:11:14.626, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-26 12:11:14.634, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-26 12:11:14.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-26 12:11:14.628, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-26 12:11:14.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-26 12:11:14.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-26 12:11:14.631, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-26 12:11:14.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-26 12:11:14.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-26 12:11:14.634, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-26 12:11:14.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-26 12:11:14.639, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-26 12:11:14.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-26 12:11:14.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-26 12:11:14.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-26 12:11:14.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-26 12:11:14.651, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-26 12:11:14.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-26 12:11:14.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-26 12:11:14.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-26 12:11:14.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-26 12:11:14.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-26 12:11:14.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-26 12:11:14.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-26 12:11:14.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-26 12:11:14.651, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-26 12:11:14.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-26 12:11:14.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-26 12:11:14.658, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-26 12:11:14.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-26 12:11:14.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-26 12:11:14.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-26 12:11:14.651, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-26 12:11:14.658, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-26 12:11:14.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-26 12:11:14.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-26 12:11:14.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-26 12:11:14.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-26 12:11:14.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-26 12:11:14.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-26 12:11:14.666, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-26 12:11:14.658, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-26 12:11:14.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-26 12:11:14.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-26 12:11:14.668, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-26 12:11:14.666, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-26 12:11:14.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-26 12:11:14.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-26 12:11:14.668, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-26 12:11:14.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-26 12:11:14.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-26 12:11:14.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-26 12:11:14.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-26 12:11:14.666, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-26 12:11:14.674, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-26 12:11:14.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-26 12:11:14.668, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-26 12:11:14.676, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-26 12:11:14.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-26 12:11:14.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-26 12:11:14.674, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-26 12:11:14.679, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-26 12:11:14.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-26 12:11:14.682, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-26 12:11:14.676, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-26 12:11:14.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-26 12:11:14.679, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-26 12:11:14.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-26 12:11:14.674, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-26 12:11:14.682, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-26 12:11:14.676, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-26 12:11:14.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-26 12:11:14.679, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-26 12:11:14.682, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-26 12:11:14.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-26 12:11:14.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-26 12:11:14.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-26 12:11:14.688, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-26 12:11:14.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-26 12:11:14.688, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-26 12:11:14.689, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-26 12:11:14.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-26 12:11:14.689, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-26 12:11:14.693, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-26 12:11:14.688, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-26 12:11:14.695, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-26 12:11:14.689, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-26 12:11:14.696, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-26 12:11:14.698, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-26 12:11:14.7, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-26 12:11:14.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-26 12:11:14.703, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-26 12:11:14.705, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-26 12:11:14.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-26 12:11:14.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-26 12:11:14.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-26 12:11:14.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-26 12:11:14.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-26 12:11:14.714, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-26 12:11:14.693, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-26 12:11:14.693, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-26 12:11:14.695, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-26 12:11:14.696, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-26 12:11:14.695, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-26 12:11:14.698, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-26 12:11:14.7, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-26 12:11:14.696, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-26 12:11:14.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-26 12:11:14.698, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-26 12:11:14.7, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-26 12:11:14.703, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-26 12:11:14.705, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-26 12:11:14.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-26 12:11:14.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-26 12:11:14.703, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-26 12:11:14.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-26 12:11:14.705, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-26 12:11:14.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-26 12:11:14.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-26 12:11:14.714, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-26 12:11:14.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-26 12:11:14.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-26 12:11:14.714, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=32, time=2015-05-26 12:11:31.009, clock=2]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-26 12:11:14.619, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-26 12:11:14.623, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-26 12:11:14.626, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-26 12:11:14.628, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-26 12:11:14.631, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-26 12:11:14.634, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-26 12:11:14.636, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-26 12:11:14.639, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-26 12:11:14.641, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-26 12:11:14.643, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-26 12:11:14.645, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-26 12:11:14.647, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-26 12:11:14.651, clock=0]
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateClock(1)
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-26 12:11:14.654, clock=0]
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateClock(2)
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-26 12:11:14.656, clock=0]
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateClock(1)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 1)
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-26 12:11:14.658, clock=0]
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 0, 3)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-26 12:11:14.66, clock=0]
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 0, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-26 12:11:14.662, clock=0]
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(blue, 1, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-26 12:11:14.664, clock=0]
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateClock(2)
Event processed UpdateTile(brown, 1, 5)
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-26 12:11:14.666, clock=0]
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 1, 2)
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-26 12:11:14.668, clock=0]
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 1, 3)
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-26 12:11:14.669, clock=0]
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(blue, 1, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-26 12:11:14.671, clock=0]
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(yellow, 1, 6)
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-26 12:11:14.673, clock=0]
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(white, 2, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-26 12:11:14.674, clock=0]
Event processed UpdateTile(brown, 2, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-26 12:11:14.676, clock=0]
Event processed UpdateTile(blue, 2, 3)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-26 12:11:14.679, clock=0]
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-26 12:11:14.682, clock=0]
Event processed UpdateTile(brown, 2, 5)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-26 12:11:14.684, clock=0]
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-26 12:11:14.686, clock=0]
Event processed UpdateTile(yellow, 3, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-26 12:11:14.688, clock=0]
Event processed UpdateTile(blue, 3, 2)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-26 12:11:14.689, clock=0]
Event processed UpdateTile(blue, 3, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-26 12:11:14.691, clock=0]
Event processed UpdateTile(yellow, 3, 4)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-26 12:11:14.693, clock=0]
Event processed UpdateTile(yellow, 3, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-26 12:11:14.695, clock=0]
Event processed UpdateTile(white, 3, 6)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-26 12:11:14.696, clock=0]
Event processed UpdateTile(brown, 4, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-26 12:11:14.698, clock=0]
Event processed UpdateTile(blue, 4, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-26 12:11:14.7, clock=0]
Event processed UpdateTile(yellow, 4, 2)
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-26 12:11:14.702, clock=0]
Event processed UpdateTile(blue, 4, 3)
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-26 12:11:14.703, clock=0]
Event processed UpdateTile(brown, 4, 4)
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-26 12:11:14.705, clock=0]
Event processed UpdateTile(yellow, 4, 5)
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-26 12:11:14.707, clock=0]
Event processed UpdateTile(brown, 4, 6)
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-26 12:11:14.709, clock=0]
Event processed UpdateTile(brown, 2, 5)
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-26 12:11:14.712, clock=0]
Event processed UpdateTile(yellow, 5, 0)
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-26 12:11:14.714, clock=0]
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(yellow, 4, 5)
object notification: Time [clock=3, time=2015-05-26 12:11:31.47]
object notification: Time [clock=3, time=2015-05-26 12:11:31.47]
object notification: Time [clock=3, time=2015-05-26 12:11:31.47]
org notification: Time [clock=3, time=2015-05-26 12:11:31.47]
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
[Planbase]:{	UpdateClock(1)
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateClock(2)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[new scheduled]:[UpdateClock(1), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateClock(2), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6)]
Event processed UpdateTile(yellow, 5, 3)
[After]:{	UpdateClock(1)
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateClock(2)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
Event processed adoptObligation(surround(3, 3), 32, reduce(g, 700))
Event processed UpdateClock(3)
[Planbase]:{	UpdateTile(brown, 0, 0)
},
{	UpdateClock(1)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateClock(2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 32, reduce(g, 700))
},
{	UpdateClock(3)
}


[new scheduled]:[UpdateTile(brown, 0, 0), UpdateClock(1), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateClock(2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptObligation(surround(3, 3), 32, reduce(g, 700)), UpdateClock(3)]
[After]:{	UpdateTile(brown, 0, 0)
},
{	UpdateClock(1)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateClock(2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 32, reduce(g, 700))
},
{	UpdateClock(3)
}


Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	adoptz(surround(3, 3, 700) : 26 May 2015 11:28:11 GMT, priority 10)
}


[new scheduled]:[adoptz(surround(3, 3, 700) : 26 May 2015 11:28:11 GMT, priority 10)]
[After]:{	adoptz(surround(3, 3, 700) : 26 May 2015 11:28:11 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[Surround(3, 3); sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	Surround(3, 3);
	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.179]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.179]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=29, time=2015-05-26 12:11:32.184, clock=3]
Event processed adoptObligation(at(3, 2, a10), 29, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a10), 29, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(at(3, 2, a10), 29, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a10), 29, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.227]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.227]
[Planbase]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 26 May 2015 11:28:12 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(at(3, 2, 700) : 26 May 2015 11:28:12 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 26 May 2015 11:28:12 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.286]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.286]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=29, time=2015-05-26 12:11:32.289, clock=3]
[Planbase]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0); color(white, a10, yes, 200); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 200);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.35]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=3, time=2015-05-26 12:11:32.35]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=29, time=2015-05-26 12:11:32.353, clock=3]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, white, yes, 200),L,0);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 200),L,0); color(white, a20, yes, 200); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 200),L,0);
	color(white, a20, yes, 200);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=200, time=2015-05-26 12:11:32.427, clock=3]
org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=200, time=2015-05-26 12:11:32.427, clock=3]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 200)], deadline=23, time=2015-05-26 12:11:32.433, clock=3]
Event processed adoptObligation(at(3, 4, a40), 29, reduce(a40, 700))
[Planbase]:{	adoptObligation(at(3, 4, a40), 29, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a40), 29, reduce(a40, 700))]
[After]:{	adoptObligation(at(3, 4, a40), 29, reduce(a40, 700))
}


Event processed adoptObligation(color(white, a10), 23, reduce(a10, 200))
[Planbase]:{	@ctenv(setColor(a20, white, yes, 200),L,0);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 23, reduce(a10, 200))
}


[new scheduled]:[@ctenv(setColor(a20, white, yes, 200),L,0); color(white, a30, yes, 200); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 23, reduce(a10, 200))]
[After]:{	@ctenv(setColor(a20, white, yes, 200),L,0);
	color(white, a30, yes, 200);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 23, reduce(a10, 200))
}


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=200, time=2015-05-26 12:11:32.57, clock=3]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=200, time=2015-05-26 12:11:32.57, clock=3]
[Planbase]:{	adoptz(at(3, 4, 700) : 26 May 2015 11:28:12 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 26 May 2015 11:28:12 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 26 May 2015 11:28:12 GMT, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, white, yes, 200),L,0);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 200),L,0); color(white, a40, yes, 200); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)]
[After]:{	@ctenv(setColor(a30, white, yes, 200),L,0);
	color(white, a40, yes, 200);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=200, time=2015-05-26 12:11:32.67, clock=3]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=200, time=2015-05-26 12:11:32.67, clock=3]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 200)], deadline=23, time=2015-05-26 12:11:32.673, clock=3]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, white, yes, 200),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 200),L,0); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 200),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=200, time=2015-05-26 12:11:32.761, clock=3]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=200, time=2015-05-26 12:11:32.761, clock=3]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 200)], deadline=23, time=2015-05-26 12:11:32.764, clock=3]
Event processed adoptObligation(color(white, a40), 23, reduce(a40, 200))
[Planbase]:{	adoptObligation(color(white, a40), 23, reduce(a40, 200))
}


[new scheduled]:[adoptObligation(color(white, a40), 23, reduce(a40, 200))]
[After]:{	adoptObligation(color(white, a40), 23, reduce(a40, 200))
}


[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-26 12:11:32.872, clock=3]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-26 12:11:32.872, clock=3]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=3, time=2015-05-26 12:11:32.874]
[Planbase]:{	adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 200) : 26 May 2015 11:28:12 GMT, priority 10)
}


Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptProhibition(color(blue, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-26 12:11:32.967, clock=3]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-26 12:11:32.967, clock=3]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-26 12:11:33.056, clock=3]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-26 12:11:33.056, clock=3]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=3, time=2015-05-26 12:11:33.058]
[Planbase]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(3, 3, 700) : Infinite, priority 10), aprohibition(useColor(blue) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-26 12:11:33.119, clock=3]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-26 12:11:33.119, clock=3]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=3, time=2015-05-26 12:11:33.122]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-05-26 12:11:41.472]
object notification: Time [clock=4, time=2015-05-26 12:11:41.472]
org notification: Time [clock=4, time=2015-05-26 12:11:41.472]
object notification: Time [clock=4, time=2015-05-26 12:11:41.472]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@38beb946
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@70ba8e85
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=5, time=2015-05-26 12:11:51.474]
org notification: Time [clock=5, time=2015-05-26 12:11:51.474]
object notification: Time [clock=5, time=2015-05-26 12:11:51.474]
object notification: Time [clock=5, time=2015-05-26 12:11:51.474]
a40[CTAH] paths: 1000
a10[CTAH] paths: 1000
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(5)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(5)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(5)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(5)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(5)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(5)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=6, time=2015-05-26 12:12:01.479]
object notification: Time [clock=6, time=2015-05-26 12:12:01.479]
object notification: Time [clock=6, time=2015-05-26 12:12:01.479]
org notification: Time [clock=6, time=2015-05-26 12:12:01.479]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
a10[CTAH] paths: 1000
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(6)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(6)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(6)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(6)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] going goal: 3,2 color: neco
org notification: Time [clock=7, time=2015-05-26 12:12:11.48]
object notification: Time [clock=7, time=2015-05-26 12:12:11.48]
object notification: Time [clock=7, time=2015-05-26 12:12:11.48]
object notification: Time [clock=7, time=2015-05-26 12:12:11.48]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=8, time=2015-05-26 12:12:21.483]
org notification: Time [clock=8, time=2015-05-26 12:12:21.483]
object notification: Time [clock=8, time=2015-05-26 12:12:21.483]
object notification: Time [clock=8, time=2015-05-26 12:12:21.483]
a40[CTAH] paths: 1000
Event processed UpdateClock(7)
Event processed UpdateClock(8)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(7)
},
{	UpdateClock(8)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(7), UpdateClock(8)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(7)
},
{	UpdateClock(8)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
Event processed UpdateClock(7)
Event processed UpdateClock(8)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(7)
},
{	UpdateClock(8)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(7), UpdateClock(8)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(7)
},
{	UpdateClock(8)
}


a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=9, time=2015-05-26 12:12:31.485]
object notification: Time [clock=9, time=2015-05-26 12:12:31.485]
object notification: Time [clock=9, time=2015-05-26 12:12:31.485]
org notification: Time [clock=9, time=2015-05-26 12:12:31.485]
a40[CTAH] paths: 1000
a10[CTAH] paths: 1000
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(9)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(9)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(9)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(9)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=10, time=2015-05-26 12:12:41.489]
object notification: Time [clock=10, time=2015-05-26 12:12:41.489]
org notification: Time [clock=10, time=2015-05-26 12:12:41.489]
object notification: Time [clock=10, time=2015-05-26 12:12:41.489]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
a40[CTAH] paths: 1000
a10[CTAH] paths: 1000
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
[CTAH] Array of Terms: [Lapapl.data.Term;@1ecc02d8
[CTAH] The created APLList : [phasechange]
a10[CTAH] going goal: 3,2 color: neco
[CTAH] Array of Terms: [Lapapl.data.Term;@7c3f4d19
[CTAH] The created APLList : [phasechange]
org notification: Time [clock=11, time=2015-05-26 12:12:51.495]
object notification: Time [clock=11, time=2015-05-26 12:12:51.495]
object notification: Time [clock=11, time=2015-05-26 12:12:51.495]
object notification: Time [clock=11, time=2015-05-26 12:12:51.495]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
org notification: Time [clock=12, time=2015-05-26 12:13:01.507]
object notification: Time [clock=12, time=2015-05-26 12:13:01.507]
object notification: Time [clock=12, time=2015-05-26 12:13:01.507]
object notification: Time [clock=12, time=2015-05-26 12:13:01.507]
a40[CTAH] paths: 1000
Event processed UpdateClock(11)
Event processed UpdateClock(12)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
},
{	UpdateClock(12)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11), UpdateClock(12)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
},
{	UpdateClock(12)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
Event processed UpdateClock(11)
Event processed UpdateClock(12)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
},
{	UpdateClock(12)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11), UpdateClock(12)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
},
{	UpdateClock(12)
}


a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=13, time=2015-05-26 12:13:11.512]
object notification: Time [clock=13, time=2015-05-26 12:13:11.512]
object notification: Time [clock=13, time=2015-05-26 12:13:11.512]
org notification: Time [clock=13, time=2015-05-26 12:13:11.512]
a40[CTAH] paths: 1000
Event processed UpdateClock(13)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(13)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(13)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
Event processed UpdateClock(13)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(13)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(13)
}


a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=14, time=2015-05-26 12:13:21.514]
object notification: Time [clock=14, time=2015-05-26 12:13:21.514]
object notification: Time [clock=14, time=2015-05-26 12:13:21.514]
org notification: Time [clock=14, time=2015-05-26 12:13:21.514]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
object notification: Time [clock=15, time=2015-05-26 12:13:31.515]
object notification: Time [clock=15, time=2015-05-26 12:13:31.515]
org notification: Time [clock=15, time=2015-05-26 12:13:31.515]
object notification: Time [clock=15, time=2015-05-26 12:13:31.515]
a10[CTAH] paths: 1000
Event processed UpdateClock(14)
Event processed UpdateClock(15)
Event processed UpdateClock(14)
Event processed UpdateClock(15)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	ReceivedEvent(phasechange)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), ReceivedEvent(phasechange), UpdateClock(14), UpdateClock(15)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	ReceivedEvent(phasechange)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	ReceivedEvent(phasechange)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0); if B(L1=[actionresult([Xa,Ya])]) then if B(tile(neco, Xa, Ya)) then if B(not prohibition(useColor(neco, V2))) then NextStep(Xa, Ya) else NextStep(Xa, Ya), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 200) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>200) then dropgoal(useColor(white, 200) : Infinite, priority 10) else findNextStep(white, 200), ReceivedEvent(phasechange), UpdateClock(14), UpdateClock(15)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2),L1,0);
	if	B(L1=[actionresult([Xa,Ya])])
	then	{	if	B(tile(neco, Xa, Ya))
			then	{	if	B(not prohibition(useColor(neco, V2)))
					then	{	NextStep(Xa, Ya)
						}
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>200)
					then	{	dropgoal(useColor(white, 200) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 200)
				}
		}
},
{	ReceivedEvent(phasechange)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] paths: 1000
a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=16, time=2015-05-26 12:13:41.517]
object notification: Time [clock=16, time=2015-05-26 12:13:41.517]
object notification: Time [clock=16, time=2015-05-26 12:13:41.517]
org notification: Time [clock=16, time=2015-05-26 12:13:41.517]
