2015-05-27 18:54:29,180 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-05-27~18.54-gigaspaces-service-128.243.23.149-41192.log
-------------------------last log tuples start--------------------------------
Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 18:48:44.994, clock=0]
Time [clock=16, time=2015-05-27 18:51:12.204]
Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 18:49:25.246, clock=5]
Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 18:49:24.929, clock=5]
Obligation [subject=a20, obligation=[color(white, a20)], sanction=[reduce(a20, 100)], deadline=25, time=2015-05-27 18:49:24.411, clock=5]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=5, time=2015-05-27 18:49:23.993]
Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 18:48:44.974, clock=0]
Group [name=g, ra=a10, clock=0, time=2015-05-27 18:48:45.165]
Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-05-27 18:49:24.298, clock=5]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:48:44.691, clock=0]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=5, time=2015-05-27 18:49:23.898]
Group [name=g, ra=a10, clock=0, time=2015-05-27 18:48:45.172]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:48:44.835, clock=0]
Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-05-27 18:49:24.679, clock=5]
Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 18:49:24.784, clock=5]
Time [clock=24, time=2015-05-27 18:52:32.245]
Time [clock=5, time=2015-05-27 18:49:22.171]
Time [clock=15, time=2015-05-27 18:51:02.201]
Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=31, time=2015-05-27 18:48:45.201, clock=1]
Time [clock=20, time=2015-05-27 18:51:52.215]
Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-05-27 18:49:24.407, clock=5]
Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-05-27 18:49:24.542, clock=5]
Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 18:49:25.15, clock=5]
Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=25, time=2015-05-27 18:49:24.545, clock=5]
Time [clock=21, time=2015-05-27 18:52:02.218]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=5, time=2015-05-27 18:49:24.096]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=5, time=2015-05-27 18:49:24.189]
Time [clock=26, time=2015-05-27 18:52:52.25]
Time [clock=13, time=2015-05-27 18:50:42.192]
Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=1, time=2015-05-27 18:48:45.364]
Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=1, time=2015-05-27 18:48:45.403]
Time [clock=17, time=2015-05-27 18:51:22.206]
Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=5, time=2015-05-27 18:49:24.794]
Time [clock=18, time=2015-05-27 18:51:32.209]
Time [clock=22, time=2015-05-27 18:52:12.239]
Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=5, time=2015-05-27 18:49:25.25]
Prohibition [subject=a20, prohibition=[moveTooFast], sanction=[reduce(a20, 300)], clock=1, time=2015-05-27 18:48:45.392]
Prohibition [subject=a20, prohibition=[color(blue, a20)], sanction=[reduce(a20, 100)], clock=5, time=2015-05-27 18:49:24.932]
Prohibition [subject=a20, prohibition=[rejectRequests], sanction=[reduce(a20, 500)], clock=1, time=2015-05-27 18:48:45.361]
Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=1, time=2015-05-27 18:48:45.398]
Time [clock=3, time=2015-05-27 18:49:02.164]
Proposal [id=1226, agent=a40, agent2=a20, clock=12, time=2015-05-27 18:50:34.11]
Time [clock=12, time=2015-05-27 18:50:32.189]
Time [clock=6, time=2015-05-27 18:49:32.173]
Obligation [subject=a20, obligation=[at(2, 3, a20)], sanction=[reduce(a20, 700)], deadline=31, time=2015-05-27 18:49:23.997, clock=5]
Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=1, time=2015-05-27 18:48:45.368]
Time [clock=9, time=2015-05-27 18:50:02.181]
Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=31, time=2015-05-27 18:49:24.099, clock=5]
Time [clock=7, time=2015-05-27 18:49:42.176]
Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=25, time=2015-05-27 18:49:24.682, clock=5]
Time [clock=25, time=2015-05-27 18:52:42.248]
Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=31, time=2015-05-27 18:49:24.192, clock=5]
Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=1, time=2015-05-27 18:48:45.211]
Time [clock=11, time=2015-05-27 18:50:22.187]
Time [clock=8, time=2015-05-27 18:49:52.179]
Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=31, time=2015-05-27 18:49:23.905, clock=5]
Time [clock=19, time=2015-05-27 18:51:42.212]
Time [clock=4, time=2015-05-27 18:49:12.167]
Proposal [id=9698, agent=a30, agent2=a20, clock=24, time=2015-05-27 18:52:41.495]
Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=1, time=2015-05-27 18:48:45.379]
Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=5, time=2015-05-27 18:49:25.161]
Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=25, time=2015-05-27 18:49:24.306, clock=5]
Time [clock=1, time=2015-05-27 18:48:42.134]
Time [clock=10, time=2015-05-27 18:50:12.184]
Proposal [id=9943, agent=a40, agent2=a20, clock=24, time=2015-05-27 18:52:36.365]
Time [clock=23, time=2015-05-27 18:52:22.242]
Proposal [id=9743, agent=a40, agent2=a20, clock=18, time=2015-05-27 18:51:36.796]
Time [clock=2, time=2015-05-27 18:48:52.161]
Time [clock=14, time=2015-05-27 18:50:52.195]
Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:48:44.933, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:48:44.891, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:48:44.862, clock=0]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:48:44.921, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:48:44.903, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:48:44.874, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:48:44.906, clock=0]
Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:48:44.917, clock=0]
Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:48:44.798, clock=0]
Proposal [id=3919, agent=a10, agent2=a20, clock=24, time=2015-05-27 18:52:40.602]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:48:44.781, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:48:44.899, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:48:44.787, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:48:44.774, clock=0]
Proposal [id=7068, agent=a10, agent2=a20, clock=18, time=2015-05-27 18:51:41.951]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:48:44.683, clock=0]
Proposal [id=2766, agent=a10, agent2=a20, clock=6, time=2015-05-27 18:49:39.98]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:48:44.809, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:48:44.895, clock=0]
Proposal [id=8338, agent=a40, agent2=a20, clock=6, time=2015-05-27 18:49:35.815]
Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:48:44.924, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:48:44.753, clock=0]
Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:48:44.801, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:48:44.883, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:48:44.75, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:48:44.757, clock=0]
Proposal [id=1002, agent=a30, agent2=a20, clock=12, time=2015-05-27 18:50:37.916]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:48:44.675, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:48:44.767, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:48:44.673, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:48:44.666, clock=0]
Proposal [id=5688, agent=a10, agent2=a20, clock=12, time=2015-05-27 18:50:38.115]
Proposal [id=5436, agent=a30, agent2=a20, clock=6, time=2015-05-27 18:49:39.557]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:48:44.743, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:48:44.774, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:48:44.887, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:48:44.736, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:48:44.746, clock=0]
Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:48:44.8, clock=0]
Proposal [id=1865, agent=a30, agent2=a20, clock=18, time=2015-05-27 18:51:41.849]
Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:48:44.788, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:48:44.657, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:48:44.641, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:48:44.7, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:48:44.64, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:48:44.638, clock=0]
Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:48:44.929, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:48:44.644, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:48:44.637, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:48:44.753, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:48:44.662, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:48:44.732, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:48:44.69, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:48:44.639, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:48:44.661, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:48:44.676, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:48:44.579, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:48:44.914, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:48:44.781, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:48:44.622, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:48:44.806, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:48:44.693, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:48:44.62, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:48:44.871, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:48:44.736, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:48:44.62, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:48:44.817, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:48:44.823, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:48:44.688, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:48:44.705, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:48:44.74, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:48:44.627, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:48:44.768, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:48:44.732, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:48:44.708, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:48:44.642, clock=0]
Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:48:44.794, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:48:44.743, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:48:44.866, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:48:44.855, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:48:44.722, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:48:44.832, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:48:44.859, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:48:44.828, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:48:44.813, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:48:44.804, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:48:44.791, clock=0]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:48:44.791, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:48:44.784, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:48:44.776, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:48:44.77, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:48:44.697, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:48:44.729, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:48:44.761, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:48:44.728, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:48:44.722, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:48:44.716, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:48:44.703, clock=0]
Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:48:44.695, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:48:44.576, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:48:44.677, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:48:44.659, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:48:44.75, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:48:44.624, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1b033c7e
[CTAH] The created APLList : [game_initialized]
object notification: Time [clock=1, time=2015-05-27 18:54:42.05]
org notification: Time [clock=1, time=2015-05-27 18:54:42.05]
object notification: Time [clock=1, time=2015-05-27 18:54:42.05]
object notification: Time [clock=1, time=2015-05-27 18:54:42.05]
[CTAH] Array of Terms: [Lapapl.data.Term;@50d7c5
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@593be416
[CTAH] The created APLList : [game_initialized]
Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateClock(1)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:54:45.083, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:54:45.083, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:54:45.083, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 18:54:45.083, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:54:45.181, clock=0]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:54:45.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:54:45.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:54:45.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:54:45.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:54:45.206, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:54:45.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:54:45.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 18:54:45.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:54:45.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:54:45.216, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 18:54:45.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:54:45.223, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:54:45.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:54:45.239, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:54:45.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:54:45.243, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:54:45.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:54:45.248, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:54:45.216, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:54:45.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:54:45.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:54:45.223, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:54:45.239, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:54:45.243, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:54:45.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:54:45.248, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:54:45.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:54:45.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:54:45.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:54:45.275, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:54:45.275, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:54:45.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:54:45.282, clock=0]
Event processed UpdateTile(brown, 0, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:54:45.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:54:45.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:54:45.21, clock=0]
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 18:54:45.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:54:45.216, clock=0]
Event processed UpdateTile(yellow, 0, 3)
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:54:45.223, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:54:45.239, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:54:45.243, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:54:45.248, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:54:45.251, clock=0]
Event processed UpdateTile(brown, 0, 4)
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:54:45.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:54:45.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:54:45.275, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 18:54:45.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:54:45.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:54:45.304, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:54:45.308, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:54:45.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:54:45.32, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:54:45.325, clock=0]
Event processed UpdateTile(blue, 0, 5)
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:54:45.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:54:45.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:54:45.338, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 18:54:45.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:54:45.344, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:54:45.348, clock=0]
Event processed UpdateTile(brown, 0, 6)
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:54:45.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:54:45.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:54:45.361, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:54:45.365, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:54:45.368, clock=0]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
Event processed UpdateTile(brown, 1, 0)
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:54:45.373, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:54:45.38, clock=0]
Event processed UpdateTile(yellow, 1, 1)
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:54:45.304, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:54:45.304, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:54:45.308, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:54:45.308, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 18:54:45.216, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:54:45.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:54:45.32, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:54:45.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:54:45.32, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:54:45.325, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:54:45.325, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:54:45.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:54:45.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:54:45.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:54:45.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:54:45.338, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:54:45.338, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:54:45.344, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:54:45.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:54:45.352, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 18:54:45.223, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:54:45.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:54:45.361, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:54:45.365, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:54:45.344, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:54:45.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:54:45.368, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:54:45.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:54:45.373, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:54:45.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:54:45.38, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:54:45.361, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:54:45.365, clock=0]
Event processed UpdateTile(white, 1, 2)
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:54:45.368, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:54:45.373, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:54:45.38, clock=0]
Event processed UpdateTile(white, 1, 3)
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 18:54:45.239, clock=0]
Event processed UpdateTile(blue, 1, 4)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:54:45.492, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:54:45.492, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:54:45.492, clock=0]
Event processed UpdateTile(brown, 1, 5)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:54:45.498, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:54:45.498, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:54:45.498, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 18:54:45.243, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:54:45.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:54:45.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:54:45.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:54:45.52, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:54:45.52, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:54:45.52, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:54:45.53, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:54:45.53, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:54:45.53, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 18:54:45.248, clock=0]
Event processed UpdateTile(yellow, 1, 6)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:54:45.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:54:45.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:54:45.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:54:45.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:54:45.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:54:45.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:54:45.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:54:45.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:54:45.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:54:45.567, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:54:45.567, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:54:45.567, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:54:45.573, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:54:45.573, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:54:45.573, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:54:45.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:54:45.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:54:45.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:54:45.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:54:45.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:54:45.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:54:45.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:54:45.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:54:45.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:54:45.589, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:54:45.589, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:54:45.589, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 18:54:45.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:54:45.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:54:45.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:54:45.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:54:45.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:54:45.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:54:45.598, clock=0]
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 1)
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 18:54:45.255, clock=0]
Event processed UpdateTile(brown, 2, 2)
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 18:54:45.268, clock=0]
Event processed UpdateTile(blue, 2, 3)
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 18:54:45.275, clock=0]
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 18:54:45.282, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 18:54:45.304, clock=0]
Event processed UpdateTile(brown, 2, 6)
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 18:54:45.308, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 18:54:45.743, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 18:54:45.313, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 18:54:45.32, clock=0]
Event processed UpdateTile(white, 3, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 18:54:45.325, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 18:54:45.33, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 18:54:45.333, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 18:54:45.338, clock=0]
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 0, 0)
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 18:54:45.344, clock=0]
Event processed UpdateTile(brown, 0, 1)
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 18:54:45.348, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 18:54:45.352, clock=0]
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 0, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 18:54:45.357, clock=0]
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 18:54:45.361, clock=0]
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(brown, 1, 0)
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-27 18:54:45.998]
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(yellow, 1, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 18:54:45.365, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=31, time=2015-05-27 18:54:46.062, clock=1]
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
object notification: Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=1, time=2015-05-27 18:54:46.077]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=1, time=2015-05-27 18:54:46.102]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=1, time=2015-05-27 18:54:46.11]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=1, time=2015-05-27 18:54:46.106]
Event processed UpdateTile(yellow, 1, 6)
object notification: Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=1, time=2015-05-27 18:54:46.132]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=1, time=2015-05-27 18:54:46.136]
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 18:54:45.368, clock=0]
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(blue, 4, 3)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 18:54:45.373, clock=0]
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(yellow, 4, 5)
Event processed adoptObligation(surround(3, 3), 31, reduce(g, 700))
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 4, 5)
Event processed adoptProhibition(rejectRequests, reduce(a10, 500))
Event processed UpdateTile(yellow, 5, 0)
Event processed adoptProhibition(moveTooFast, reduce(a10, 300))
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 4, 6)
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 5, 2)
#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptObligation(surround(3, 3), 31, reduce(g, 700)), adoptProhibition(rejectRequests, reduce(a10, 500)), adoptProhibition(moveTooFast, reduce(a10, 300))]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 5, 5)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 18:54:45.38, clock=0]
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed adoptProhibition(rejectRequests, reduce(a40, 500))
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 18:54:45.492, clock=0]
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(rejectRequests, reduce(a30, 500))
Event processed adoptProhibition(moveTooFast, reduce(a40, 300))
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 18:54:45.498, clock=0]
Event processed adoptProhibition(moveTooFast, reduce(a30, 300))
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 18:54:45.506, clock=0]
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a40, 500)), adoptProhibition(moveTooFast, reduce(a40, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 18:54:45.52, clock=0]
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 18:11:27 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, adoptz(surround(3, 3, 700) : 27 May 2015 18:11:27 GMT, priority 10), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 18:11:27 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 18:54:45.53, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 18:54:45.549, clock=0]
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a30, 500)), adoptProhibition(moveTooFast, reduce(a30, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 18:54:45.555, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 18:54:45.56, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 18:54:45.567, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 18:54:45.573, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 18:54:45.577, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 18:54:45.581, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 18:54:45.585, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 18:54:45.589, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 18:54:45.594, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 18:54:45.598, clock=0]
[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[CTAH] Agentposition: [0,6]
[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(3, 3); sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(3, 3);
	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	GetAgentPos(0, 6, 1)
}


[new scheduled]:[GetAgentPos(0, 6, 1)]
[After]:{	GetAgentPos(0, 6, 1)
}


[Planbase]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,0]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:


[new scheduled]:[]
[After]:


[CTAH] Agentposition: [6,6]
[Planbase]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:51.674]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:51.674]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=27, time=2015-05-27 18:54:51.689, clock=1]
Event processed adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 1)
},
{	adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), GetAgentPos(0, 0, 1), adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 1)
},
{	adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
}


[Planbase]:{	GetAgentPos(6, 6, 1)
}


[new scheduled]:[GetAgentPos(6, 6, 1)]
[After]:{	GetAgentPos(6, 6, 1)
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:51.83]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:51.83]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 18:11:31 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(at(3, 2, 700) : 27 May 2015 18:11:31 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 18:11:31 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:52.082]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 18:54:52.082]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=27, time=2015-05-27 18:54:52.087, clock=1]
org notification: Time [clock=2, time=2015-05-27 18:54:52.096]
object notification: Time [clock=2, time=2015-05-27 18:54:52.096]
object notification: Time [clock=2, time=2015-05-27 18:54:52.096]
object notification: Time [clock=2, time=2015-05-27 18:54:52.096]
Event processed adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(2)
[Planbase]:{	adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
},
{	UpdateClock(2)
}


[new scheduled]:[adoptObligation(at(4, 3, a30), 27, reduce(a30, 700)), UpdateClock(2)]
[After]:{	adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
},
{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), UpdateClock(2)]
[After]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	UpdateClock(2)
}


[Planbase]:{	adoptz(at(4, 3, 700) : 27 May 2015 18:11:32 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 3, 700) : 27 May 2015 18:11:32 GMT, priority 10)]
[After]:{	adoptz(at(4, 3, 700) : 27 May 2015 18:11:32 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=2, time=2015-05-27 18:54:52.474]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=2, time=2015-05-27 18:54:52.474]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=28, time=2015-05-27 18:54:52.481, clock=2]
Event processed adoptObligation(at(3, 4, a40), 28, reduce(a40, 700))
[Planbase]:{	adoptObligation(at(3, 4, a40), 28, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a40), 28, reduce(a40, 700))]
[After]:{	adoptObligation(at(3, 4, a40), 28, reduce(a40, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 100),L,0); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(at(3, 4, 700) : 27 May 2015 18:11:32 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 27 May 2015 18:11:32 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 27 May 2015 18:11:32 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-05-27 18:54:52.839, clock=2]
org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-05-27 18:54:52.839, clock=2]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=22, time=2015-05-27 18:54:52.85, clock=2]
Event processed adoptObligation(color(white, a10), 22, reduce(a10, 100))
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, white, yes, 100),L,0);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 22, reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, white, yes, 100),L,0); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 22, reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, white, yes, 100),L,0);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 22, reduce(a10, 100))
}


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-05-27 18:54:53.034, clock=2]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-05-27 18:54:53.034, clock=2]
[Planbase]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 100),L,0); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-05-27 18:54:53.195, clock=2]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-05-27 18:54:53.195, clock=2]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=22, time=2015-05-27 18:54:53.199, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(color(white, a30), 22, reduce(a30, 100))
[Planbase]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 100),L,0); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptObligation(color(white, a30), 22, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(white, a30), 22, reduce(a30, 100))]
[After]:{	adoptObligation(color(white, a30), 22, reduce(a30, 100))
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-05-27 18:54:53.502, clock=2]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-05-27 18:54:53.502, clock=2]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=22, time=2015-05-27 18:54:53.518, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(color(white, a40), 22, reduce(a40, 100))
[Planbase]:{	adoptObligation(color(white, a40), 22, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(white, a40), 22, reduce(a40, 100))]
[After]:{	adoptObligation(color(white, a40), 22, reduce(a40, 100))
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 18:54:53.933, clock=2]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 18:54:53.933, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-05-27 18:54:53.939]
Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptProhibition(color(blue, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 18:54:54.255, clock=2]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 18:54:54.255, clock=2]
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 18:54:54.586, clock=2]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 18:54:54.586, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-05-27 18:54:54.591]
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(3, 3, 700) : Infinite, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 18:54:55.155, clock=2]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 18:54:55.155, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-05-27 18:54:55.16]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


org notification: Time [clock=3, time=2015-05-27 18:55:02.102]
object notification: Time [clock=3, time=2015-05-27 18:55:02.102]
object notification: Time [clock=3, time=2015-05-27 18:55:02.102]
object notification: Time [clock=3, time=2015-05-27 18:55:02.102]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


Event processed UpdateClock(3)
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


Event processed UpdateClock(3)
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(3)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), UpdateClock(3)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


org notification: Time [clock=4, time=2015-05-27 18:55:12.104]
object notification: Time [clock=4, time=2015-05-27 18:55:12.104]
object notification: Time [clock=4, time=2015-05-27 18:55:12.104]
object notification: Time [clock=4, time=2015-05-27 18:55:12.104]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(4)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), UpdateClock(4)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@29db8998
[CTAH] The created APLList : [phasechange]
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@39d7e744
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@5a7169a1
[CTAH] The created APLList : [phasechange]
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), ReceivedEvent(phasechange)]
[After]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[update, adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	update
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[Updated, B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	Updated
},
{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	Updated
},
{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[Updated, B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	Updated
},
{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[Updated, B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	Updated
},
{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=5, time=2015-05-27 18:55:22.112]
object notification: Time [clock=5, time=2015-05-27 18:55:22.112]
org notification: Time [clock=5, time=2015-05-27 18:55:22.112]
object notification: Time [clock=5, time=2015-05-27 18:55:22.112]
org notification: Time [clock=6, time=2015-05-27 18:55:32.115]
object notification: Time [clock=6, time=2015-05-27 18:55:32.115]
object notification: Time [clock=6, time=2015-05-27 18:55:32.115]
object notification: Time [clock=6, time=2015-05-27 18:55:32.115]
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][6] [6][5] [5][5] [4][5] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,5,1,2549]
org notification: Proposal [id=2549, agent=a30, agent2=a20, clock=6, time=2015-05-27 18:55:37.041]
Event processed UpdateClock(5)
Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	if	B(not 2549=no)
	then	{	NextStep(6, 5, 2549);
			SentProposal(2549, 1, open, Clock)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); if B(not 2549=no) then {NextStep(6, 5, 2549); SentProposal(2549, 1, open, Clock)} else NextStep(6, 5); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), UpdateClock(5), UpdateClock(6)]
[After]:{	B(clock(Clock));
	if	B(not 2549=no)
	then	{	NextStep(6, 5, 2549);
			SentProposal(2549, 1, open, Clock)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(not 2549=no)
	then	{	NextStep(6, 5, 2549);
			SentProposal(2549, 1, open, 4)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(not 2549=no) then {NextStep(6, 5, 2549); SentProposal(2549, 1, open, 4)} else NextStep(6, 5); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(not 2549=no)
	then	{	NextStep(6, 5, 2549);
			SentProposal(2549, 1, open, 4)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	NextStep(6, 5, 2549);
	SentProposal(2549, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[NextStep(6, 5, 2549); SentProposal(2549, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	NextStep(6, 5, 2549);
	SentProposal(2549, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


a10[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	SentProposal(2549, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[SentProposal(2549, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	SentProposal(2549, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][0] [6][1] [6][2] [6][3] [5][3] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:1)
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


a40[CTAH] moveStepToGoalTest sent proposal for: [6,1,1,1084]
org notification: Proposal [id=1084, agent=a40, agent2=a20, clock=6, time=2015-05-27 18:55:40.015]
Event processed UpdateClock(5)
Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	if	B(not 1084=no)
	then	{	NextStep(6, 1, 1084);
			SentProposal(1084, 1, open, Clock)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); if B(not 1084=no) then {NextStep(6, 1, 1084); SentProposal(1084, 1, open, Clock)} else NextStep(6, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(5), UpdateClock(6)]
[After]:{	B(clock(Clock));
	if	B(not 1084=no)
	then	{	NextStep(6, 1, 1084);
			SentProposal(1084, 1, open, Clock)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(not 1084=no)
	then	{	NextStep(6, 1, 1084);
			SentProposal(1084, 1, open, 4)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not 1084=no) then {NextStep(6, 1, 1084); SentProposal(1084, 1, open, 4)} else NextStep(6, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not 1084=no)
	then	{	NextStep(6, 1, 1084);
			SentProposal(1084, 1, open, 4)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	NextStep(6, 1, 1084);
	SentProposal(1084, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NextStep(6, 1, 1084); SentProposal(1084, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NextStep(6, 1, 1084);
	SentProposal(1084, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	SentProposal(1084, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[SentProposal(1084, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	SentProposal(1084, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][0] [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:0,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [0,1,1,9714]
org notification: Proposal [id=9714, agent=a10, agent2=a20, clock=6, time=2015-05-27 18:55:41.296]
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


Event processed UpdateClock(5)
Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	if	B(not 9714=no)
	then	{	NextStep(0, 1, 9714);
			SentProposal(9714, 1, open, Clock)
		}
	else	{	NextStep(0, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); if B(not 9714=no) then {NextStep(0, 1, 9714); SentProposal(9714, 1, open, Clock)} else NextStep(0, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(5), UpdateClock(6)]
[After]:{	B(clock(Clock));
	if	B(not 9714=no)
	then	{	NextStep(0, 1, 9714);
			SentProposal(9714, 1, open, Clock)
		}
	else	{	NextStep(0, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not 9714=no)
	then	{	NextStep(0, 1, 9714);
			SentProposal(9714, 1, open, 4)
		}
	else	{	NextStep(0, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not 9714=no) then {NextStep(0, 1, 9714); SentProposal(9714, 1, open, 4)} else NextStep(0, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not 9714=no)
	then	{	NextStep(0, 1, 9714);
			SentProposal(9714, 1, open, 4)
		}
	else	{	NextStep(0, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NextStep(0, 1, 9714);
	SentProposal(9714, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NextStep(0, 1, 9714); SentProposal(9714, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NextStep(0, 1, 9714);
	SentProposal(9714, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	SentProposal(9714, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[SentProposal(9714, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	SentProposal(9714, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


org notification: Time [clock=7, time=2015-05-27 18:55:42.119]
object notification: Time [clock=7, time=2015-05-27 18:55:42.119]
object notification: Time [clock=7, time=2015-05-27 18:55:42.119]
object notification: Time [clock=7, time=2015-05-27 18:55:42.119]
Event processed UpdateClock(7)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(7)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(7)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), UpdateClock(7)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(7)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=2549, response=accepted, clock=7, time=2015-05-27 18:55:44.585]
[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 2549, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 2549, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), @ctenv(functionToList(message(response, 2549, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 2549, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7b53a1ca
[CTAH] The created APLList : [response,2549,accept]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2549)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), if B(response=response) then ReceivedResponse(accept, 2549)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2549)
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=1084, response=accepted, clock=7, time=2015-05-27 18:55:44.948]
[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	ReceivedResponse(accept, 2549)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 2549); ReceivedResponse(noresponse, 2549)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), ReceivedResponse(accept, 2549)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 2549);
			ReceivedResponse(noresponse, 2549)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	ReceivedResponse(accept, 2549)
}


Event processed @ctenv(functionToList(message(response, 1084, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1084, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 1084, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1084, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4c90aecb
[CTAH] The created APLList : [response,1084,accept]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=9714, response=accepted, clock=7, time=2015-05-27 18:55:45.356]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1084)
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedResponse(accept, 1084)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1084)
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


Event processed @ctenv(functionToList(message(response, 9714, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 9714, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 9714, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 9714, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 1084)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedResponse(accept, 1084)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 1084)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@650ce40b
[CTAH] The created APLList : [response,9714,accept]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 2549);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 5),L2,0); if B(L2=[actionresult([6,5])]) then {B(clock(Clock)); UpdatePosition(6, 5, Clock)}; NoNextStep(6, 5, 2549); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 2549);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 18:55:45.762, clock=7]
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 18:55:45.762, clock=7]
[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9714)
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(0, 1, 9714); ReceivedResponse(noresponse, 9714)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedResponse(accept, 9714)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(0, 1, 9714);
			ReceivedResponse(noresponse, 9714)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9714)
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 1084); ReceivedResponse(noresponse, 1084)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 1084);
			ReceivedResponse(noresponse, 1084)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed UpdatePosition(6, 5, 7)
[Planbase]:{	NoNextStep(6, 5, 2549);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdatePosition(6, 5, 7)
}


[new scheduled]:[NoNextStep(6, 5, 2549); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10), UpdatePosition(6, 5, 7)]
[After]:{	NoNextStep(6, 5, 2549);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
},
{	UpdatePosition(6, 5, 7)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 9714)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedResponse(accept, 9714)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 9714)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 18:11:33 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 0, 1),L2,0); if B(L2=[actionresult([0,1])]) then {B(clock(Clock)); UpdatePosition(0, 1, Clock)}; NoNextStep(0, 1, 9714); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 1),L2,0); if B(L2=[actionresult([6,1])]) then {B(clock(Clock)); UpdatePosition(6, 1, Clock)}; NoNextStep(6, 1, 1084); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 18:55:46.319, clock=7]
object notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 18:55:46.319, clock=7]
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 18:55:46.366, clock=7]
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 18:55:46.366, clock=7]
[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
a10[CTAH] moveStepToGoal returns: [0,1]
Event processed UpdatePosition(0, 1, 7)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(0, 1, 7)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(0, 1, Clock); NoNextStep(0, 1, 9714); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(0, 1, 7)]
[After]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(0, 1, 7)
}


[Planbase]:{	UpdatePosition(0, 1, 7);
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(0, 1, 7); NoNextStep(0, 1, 9714); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	UpdatePosition(0, 1, 7);
	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NoNextStep(0, 1, 9714); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NoNextStep(0, 1, 9714);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] moveStepToGoal returns: [6,1]
Event processed UpdatePosition(6, 1, 7)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 1, 7)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 1, Clock); NoNextStep(6, 1, 1084); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(6, 1, 7)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 1, 7)
}


[Planbase]:{	UpdatePosition(6, 1, 7);
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 1, 7); NoNextStep(6, 1, 1084); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	UpdatePosition(6, 1, 7);
	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NoNextStep(6, 1, 1084); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NoNextStep(6, 1, 1084);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
org notification: Time [clock=8, time=2015-05-27 18:55:52.122]
object notification: Time [clock=8, time=2015-05-27 18:55:52.122]
object notification: Time [clock=8, time=2015-05-27 18:55:52.122]
object notification: Time [clock=8, time=2015-05-27 18:55:52.122]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][5] [6][4] [6][3] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,4,0,8277]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8277, agent=a30, agent2=a10, clock=8, time=2015-05-27 18:55:55.309]
Event processed UpdateClock(8)
[Planbase]:{	B(clock(Clock));
	if	B(not 8277=no)
	then	{	NextStep(6, 4, 8277);
			SentProposal(8277, 0, open, Clock)
		}
	else	{	NextStep(6, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
}


[new scheduled]:[B(clock(Clock)); if B(not 8277=no) then {NextStep(6, 4, 8277); SentProposal(8277, 0, open, Clock)} else NextStep(6, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(8)]
[After]:{	B(clock(Clock));
	if	B(not 8277=no)
	then	{	NextStep(6, 4, 8277);
			SentProposal(8277, 0, open, Clock)
		}
	else	{	NextStep(6, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
}


[Planbase]:{	if	B(not 8277=no)
	then	{	NextStep(6, 4, 8277);
			SentProposal(8277, 0, open, 7)
		}
	else	{	NextStep(6, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not 8277=no) then {NextStep(6, 4, 8277); SentProposal(8277, 0, open, 7)} else NextStep(6, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not 8277=no)
	then	{	NextStep(6, 4, 8277);
			SentProposal(8277, 0, open, 7)
		}
	else	{	NextStep(6, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NextStep(6, 4, 8277);
	SentProposal(8277, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 8277); SentProposal(8277, 0, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NextStep(6, 4, 8277);
	SentProposal(8277, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	SentProposal(8277, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[SentProposal(8277, 0, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	SentProposal(8277, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


org notification: Time [clock=9, time=2015-05-27 18:56:02.125]
object notification: Time [clock=9, time=2015-05-27 18:56:02.125]
object notification: Time [clock=9, time=2015-05-27 18:56:02.125]
object notification: Time [clock=9, time=2015-05-27 18:56:02.125]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed UpdateClock(9)
[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(9)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(9)
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,5440]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=5440, agent=a40, agent2=a10, clock=9, time=2015-05-27 18:56:04.234]
Event processed UpdateClock(8)
Event processed UpdateClock(9)
[Planbase]:{	B(clock(Clock));
	if	B(not 5440=no)
	then	{	NextStep(6, 2, 5440);
			SentProposal(5440, 0, open, Clock)
		}
	else	{	NextStep(6, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(9)
}


[new scheduled]:[B(clock(Clock)); if B(not 5440=no) then {NextStep(6, 2, 5440); SentProposal(5440, 0, open, Clock)} else NextStep(6, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(8), UpdateClock(9)]
[After]:{	B(clock(Clock));
	if	B(not 5440=no)
	then	{	NextStep(6, 2, 5440);
			SentProposal(5440, 0, open, Clock)
		}
	else	{	NextStep(6, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(9)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not 5440=no)
	then	{	NextStep(6, 2, 5440);
			SentProposal(5440, 0, open, 7)
		}
	else	{	NextStep(6, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not 5440=no) then {NextStep(6, 2, 5440); SentProposal(5440, 0, open, 7)} else NextStep(6, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not 5440=no)
	then	{	NextStep(6, 2, 5440);
			SentProposal(5440, 0, open, 7)
		}
	else	{	NextStep(6, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,8696]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=8696, agent=a10, agent2=a40, clock=9, time=2015-05-27 18:56:04.442]
Event processed UpdateClock(8)
Event processed @ctenv(functionToList(proposal(proposal, 2, 8277, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(9)
Event processed @ctenv(functionToList(proposal(proposal, 3, 5440, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 0, 8696, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(not 8696=no)
	then	{	NextStep(1, 1, 8696);
			SentProposal(8696, 3, open, Clock)
		}
	else	{	NextStep(1, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
},
{	@ctenv(functionToList(proposal(proposal, 2, 8277, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(proposal(proposal, 3, 5440, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 8696=no) then {NextStep(1, 1, 8696); SentProposal(8696, 3, open, Clock)} else NextStep(1, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(8), @ctenv(functionToList(proposal(proposal, 2, 8277, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(9), @ctenv(functionToList(proposal(proposal, 3, 5440, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	if	B(not 8696=no)
	then	{	NextStep(1, 1, 8696);
			SentProposal(8696, 3, open, Clock)
		}
	else	{	NextStep(1, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(8)
},
{	@ctenv(functionToList(proposal(proposal, 2, 8277, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(proposal(proposal, 3, 5440, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	NextStep(6, 2, 5440);
	SentProposal(5440, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8696, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[NextStep(6, 2, 5440); SentProposal(5440, 0, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(proposal(proposal, 0, 8696, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(6, 2, 5440);
	SentProposal(5440, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8696, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3b08aa1e
[CTAH] Array of Terms: [Lapapl.data.Term;@35d8b5d9
[CTAH] The created APLList : [proposal,2,8277,open]
[CTAH] The created APLList : [proposal,3,5440,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@772ee5e3
[CTAH] The created APLList : [proposal,0,8696,open]
[Planbase]:{	if	B(not 8696=no)
	then	{	NextStep(1, 1, 8696);
			SentProposal(8696, 3, open, 7)
		}
	else	{	NextStep(1, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(not 8696=no) then {NextStep(1, 1, 8696); SentProposal(8696, 3, open, 7)} else NextStep(1, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 8696=no)
	then	{	NextStep(1, 1, 8696);
			SentProposal(8696, 3, open, 7)
		}
	else	{	NextStep(1, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	SentProposal(5440, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[SentProposal(5440, 0, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	SentProposal(5440, 0, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NextStep(1, 1, 8696);
	SentProposal(8696, 3, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(1, 1, 8696); SentProposal(8696, 3, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(1, 1, 8696);
	SentProposal(8696, 3, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8277,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,3,5440,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,8696,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	SentProposal(8696, 3, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 8277, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 5440, open)
		}
}


[new scheduled]:[SentProposal(8696, 3, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(proposal=proposal) then ReceivedProposal(2, 8277, open), if B(proposal=proposal) then ReceivedProposal(3, 5440, open)]
[After]:{	SentProposal(8696, 3, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 8277, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 5440, open)
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8696, open)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(proposal=proposal) then ReceivedProposal(0, 8696, open)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8696, open)
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedProposal(2, 8277, open)
},
{	ReceivedProposal(3, 5440, open)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedProposal(2, 8277, open), ReceivedProposal(3, 5440, open)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedProposal(2, 8277, open)
},
{	ReceivedProposal(3, 5440, open)
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedProposal(0, 8696, open)
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedProposal(0, 8696, open)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedProposal(0, 8696, open)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 8277); if G(at(A, B, C)) then skip else sendResponse(8277, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	getScoreAfterExchange(0, 8277);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8277, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 8696); if G(at(A, B, C)) then skip else sendResponse(8696, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	getScoreAfterExchange(3, 8696);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8696, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(8277, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8277, accept)
		}
},
{	if	B(9>7+5)
	then	{	NoNextStep(1, 1, 8696);
			ReceivedResponse(noresponse, 8696)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(8277, yes); if G(at(A, B, C)) then skip else sendResponse(8277, accept), if B(9>7+5) then {NoNextStep(1, 1, 8696); ReceivedResponse(noresponse, 8696)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	GetScoreAfterExchange(8277, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8277, accept)
		}
},
{	if	B(9>7+5)
	then	{	NoNextStep(1, 1, 8696);
			ReceivedResponse(noresponse, 8696)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(8696, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8696, accept)
		}
},
{	if	B(scoreAfterExchange(8696, Score))
	then	{	respond(8696, 700)
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(8696, yes); if G(at(A, B, C)) then skip else sendResponse(8696, accept), if B(scoreAfterExchange(8696, Score)) then respond(8696, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	GetScoreAfterExchange(8696, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8696, accept)
		}
},
{	if	B(scoreAfterExchange(8696, Score))
	then	{	respond(8696, 700)
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8277, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else sendResponse(8277, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8277, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8696, accept)
		}
},
{	respond(8696, 700)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else sendResponse(8696, accept), respond(8696, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(8696, accept)
		}
},
{	respond(8696, 700)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(scoreAfterExchange(8277, Score))
	then	{	respond(8277, 700)
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[skip, if B(scoreAfterExchange(8277, Score)) then respond(8277, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	skip
},
{	if	B(scoreAfterExchange(8277, Score))
	then	{	respond(8277, 700)
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(8696, ANSWER)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[skip, B(ANSWER=accept); if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(ANSWER=reject); sendResponse(8696, ANSWER), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	skip
},
{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(8696, ANSWER)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	respond(8277, 700)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 5440); if G(at(A, B, C)) then skip else sendResponse(5440, accept), respond(8277, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	getScoreAfterExchange(0, 5440);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(5440, accept)
		}
},
{	respond(8277, 700)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(8696, accept)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(accept=reject); sendResponse(8696, accept), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(8696, accept)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(5440, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(5440, accept)
		}
},
{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(8277, ANSWER)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(5440, yes); if G(at(A, B, C)) then skip else sendResponse(5440, accept), B(ANSWER=accept); if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(ANSWER=reject); sendResponse(8277, ANSWER), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	GetScoreAfterExchange(5440, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(5440, accept)
		}
},
{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(8277, ANSWER)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	sendResponse(8696, accept)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[sendResponse(8696, accept), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	sendResponse(8696, accept)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(5440, accept)
		}
},
{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(8277, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else sendResponse(5440, accept), if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(accept=reject); sendResponse(8277, accept), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(5440, accept)
		}
},
{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(8277, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(8696, accept),L1,0);
	SentResponse(accept, 8696)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(8696, accept),L1,0); SentResponse(accept, 8696), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(sendResponse(8696, accept),L1,0);
	SentResponse(accept, 8696)
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=8696, response=accepted, clock=9, time=2015-05-27 18:56:05.889]
Event processed @ctenv(functionToList(message(response, 8696, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	skip
},
{	sendResponse(8277, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8696, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[skip, sendResponse(8277, accept), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 8696, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	skip
},
{	sendResponse(8277, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8696, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@308fbe7e
[CTAH] The created APLList : [response,8696,accept]
[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(8277, accept),L1,0);
	SentResponse(accept, 8277)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8696)
		}
}


[new scheduled]:[@ctenv(sendResponse(8277, accept),L1,0); SentResponse(accept, 8277), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedResponse(accept, 8696)]
[After]:{	@ctenv(sendResponse(8277, accept),L1,0);
	SentResponse(accept, 8277)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8696)
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=8277, response=accepted, clock=9, time=2015-05-27 18:56:06.153]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 8696)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedResponse(accept, 8696)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 8696)
}


Event processed @ctenv(functionToList(message(response, 8277, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8277, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 8277, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8277, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3addf96e
[CTAH] The created APLList : [response,8277,accept]
[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(1, 1, 8696);
			ReceivedResponse(noresponse, 8696)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(1, 1, 8696); ReceivedResponse(noresponse, 8696)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(1, 1, 8696);
			ReceivedResponse(noresponse, 8696)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8277)
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 4, 8277); ReceivedResponse(noresponse, 8277)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedResponse(accept, 8277)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 4, 8277);
			ReceivedResponse(noresponse, 8277)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8277)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 8277)
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedResponse(accept, 8277)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 8277)
}


[Planbase]:{	if	B(scoreAfterExchange(5440, Score))
	then	{	respond(5440, 700)
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(scoreAfterExchange(5440, Score)) then respond(5440, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(scoreAfterExchange(5440, Score))
	then	{	respond(5440, 700)
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	respond(5440, 700)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[respond(5440, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	respond(5440, 700)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 8277);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 4),L2,0); if B(L2=[actionresult([6,4])]) then {B(clock(Clock)); UpdatePosition(6, 4, Clock)}; NoNextStep(6, 4, 8277); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 8277);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 18:56:06.948, clock=9]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 18:56:06.948, clock=9]
[Planbase]:{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(5440, ANSWER)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B(ANSWER=accept); if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(ANSWER=reject); sendResponse(5440, ANSWER), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(5440, ANSWER)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed UpdatePosition(6, 4, 9)
[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NoNextStep(6, 4, 8277);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 4, 9)
}


[new scheduled]:[NoNextStep(6, 4, 8277); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(6, 4, 9)]
[After]:{	NoNextStep(6, 4, 8277);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 4, 9)
}


[Planbase]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(5440, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(accept=reject); sendResponse(5440, accept), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(5440, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	sendResponse(5440, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[sendResponse(5440, accept), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	sendResponse(5440, accept)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(5440, accept),L1,0);
	SentResponse(accept, 5440)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(5440, accept),L1,0); SentResponse(accept, 5440), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(sendResponse(5440, accept),L1,0);
	SentResponse(accept, 5440)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


org notification: Response [id=5440, response=accepted, clock=9, time=2015-05-27 18:56:07.408]
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 5440, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 5440, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 5440, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 5440, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5b2d0823
[CTAH] The created APLList : [response,5440,accept]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1, 8696); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 5440)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedResponse(accept, 5440)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 5440)
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-27 18:56:07.661, clock=9]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-27 18:56:07.661, clock=9]
[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 5440)
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 2, 5440); ReceivedResponse(noresponse, 5440)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedResponse(accept, 5440)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 2, 5440);
			ReceivedResponse(noresponse, 5440)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedResponse(accept, 5440)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 2),L2,0); if B(L2=[actionresult([6,2])]) then {B(clock(Clock)); UpdatePosition(6, 2, Clock)}; NoNextStep(6, 2, 5440); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-27 18:56:07.985, clock=9]
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-27 18:56:07.985, clock=9]
a10[CTAH] moveStepToGoal returns: [1,1]
Event processed UpdatePosition(1, 1, 9)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(1, 1, 9)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1, 8696); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(1, 1, 9)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(1, 1, 9)
}


[Planbase]:{	UpdatePosition(1, 1, 9);
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(1, 1, 9); NoNextStep(1, 1, 8696); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	UpdatePosition(1, 1, 9);
	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NoNextStep(1, 1, 8696); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NoNextStep(1, 1, 8696);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [6,2]
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed UpdatePosition(6, 2, 9)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 2, Clock);
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 2, 9)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 2, Clock); NoNextStep(6, 2, 5440); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(6, 2, 9)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 2, Clock);
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 2, 9)
}


[Planbase]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(6, 2, 9);
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 2, 9); NoNextStep(6, 2, 5440); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	UpdatePosition(6, 2, 9);
	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


org notification: Time [clock=10, time=2015-05-27 18:56:12.127]
object notification: Time [clock=10, time=2015-05-27 18:56:12.127]
object notification: Time [clock=10, time=2015-05-27 18:56:12.127]
object notification: Time [clock=10, time=2015-05-27 18:56:12.127]
Event processed UpdateClock(10)
[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(10)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(10)
}


Event processed UpdateClock(10)
[Planbase]:{	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[NoNextStep(6, 2, 5440); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10)]
[After]:{	NoNextStep(6, 2, 5440);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
Need to wait 4 more seconds
org notification: Time [clock=11, time=2015-05-27 18:56:22.141]
object notification: Time [clock=11, time=2015-05-27 18:56:22.141]
object notification: Time [clock=11, time=2015-05-27 18:56:22.141]
object notification: Time [clock=11, time=2015-05-27 18:56:22.141]
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][2] [5][2] [4][2] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:5,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [5,2,1,7198]
org notification: Proposal [id=7198, agent=a40, agent2=a20, clock=11, time=2015-05-27 18:56:24.38]
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not 7198=no)
	then	{	NextStep(5, 2, 7198);
			SentProposal(7198, 1, open, Clock)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 7198=no) then {NextStep(5, 2, 7198); SentProposal(7198, 1, open, Clock)} else NextStep(5, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 7198=no)
	then	{	NextStep(5, 2, 7198);
			SentProposal(7198, 1, open, Clock)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7387c481
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(not 7198=no)
	then	{	NextStep(5, 2, 7198);
			SentProposal(7198, 1, open, 10)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(not 7198=no) then {NextStep(5, 2, 7198); SentProposal(7198, 1, open, 10)} else NextStep(5, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 7198=no)
	then	{	NextStep(5, 2, 7198);
			SentProposal(7198, 1, open, 10)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	NextStep(5, 2, 7198);
	SentProposal(7198, 1, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[NextStep(5, 2, 7198); SentProposal(7198, 1, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	NextStep(5, 2, 7198);
	SentProposal(7198, 1, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	SentProposal(7198, 1, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, SentProposal(7198, 1, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	SentProposal(7198, 1, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [6][4] [5][4] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,4,no,no]
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(11)
[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 4, no); SentProposal(no, no, open, Clock)} else NextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@66d8f07a
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 4, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 4, no); SentProposal(no, no, open, 9)} else NextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 4, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[NextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	NextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, @ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-27 18:56:26.6, clock=11]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-27 18:56:26.6, clock=11]
object notification: Points [subject=a30, time=2015-05-27 18:56:26.62, clock=11, value=900, id=null]
[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest returns I have chip: [2,1,no,no]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, Clock)} else NextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@70d2a702
[CTAH] The created APLList : [phasechange]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, 10)} else NextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[NextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedEvent(phasechange)]
[After]:{	NextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[update, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	update
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, @ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 18:56:28.408, clock=11]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 18:56:28.408, clock=11]
Event processed UpdatePosition(2, 1, 11)
[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(2, 1, 11)
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(2, 1, 11)]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(2, 1, 11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [5,4]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdatePosition(5, 4, 11)
Event processed UpdatePoints(900)
[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 4, 11)
},
{	UpdatePoints(900)
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, B(clock(Clock)); UpdatePosition(5, 4, Clock); NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(5, 4, 11), UpdatePoints(900)]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 4, 11)
},
{	UpdatePoints(900)
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdatePosition(5, 4, 11);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, UpdatePosition(5, 4, 11); NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdatePosition(5, 4, 11);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=12, time=2015-05-27 18:56:32.147]
object notification: Time [clock=12, time=2015-05-27 18:56:32.147]
object notification: Time [clock=12, time=2015-05-27 18:56:32.147]
object notification: Time [clock=12, time=2015-05-27 18:56:32.147]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:2,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [2,2,1,7475]
org notification: Proposal [id=7475, agent=a10, agent2=a20, clock=12, time=2015-05-27 18:56:39.979]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not 7475=no)
	then	{	NextStep(2, 2, 7475);
			SentProposal(7475, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not 7475=no) then {NextStep(2, 2, 7475); SentProposal(7475, 1, open, Clock)} else NextStep(2, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not 7475=no)
	then	{	NextStep(2, 2, 7475);
			SentProposal(7475, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 7475=no)
	then	{	NextStep(2, 2, 7475);
			SentProposal(7475, 1, open, 11)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7475=no) then {NextStep(2, 2, 7475); SentProposal(7475, 1, open, 11)} else NextStep(2, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7475=no)
	then	{	NextStep(2, 2, 7475);
			SentProposal(7475, 1, open, 11)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(2, 2, 7475);
	SentProposal(7475, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(2, 2, 7475); SentProposal(7475, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(2, 2, 7475);
	SentProposal(7475, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	SentProposal(7475, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[SentProposal(7475, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	SentProposal(7475, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=13, time=2015-05-27 18:56:42.15]
object notification: Time [clock=13, time=2015-05-27 18:56:42.15]
object notification: Time [clock=13, time=2015-05-27 18:56:42.15]
object notification: Time [clock=13, time=2015-05-27 18:56:42.15]
Event processed UpdateClock(13)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(13)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(13)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [5][4] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,3,3,9010]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=9010, agent=a30, agent2=a40, clock=13, time=2015-05-27 18:56:47.066]
[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(12)
Event processed UpdateClock(13)
Event processed @ctenv(functionToList(proposal(proposal, 2, 9010, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(not 9010=no)
	then	{	NextStep(5, 3, 9010);
			SentProposal(9010, 3, open, Clock)
		}
	else	{	NextStep(5, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not 9010=no) then {NextStep(5, 3, 9010); SentProposal(9010, 3, open, Clock)} else NextStep(5, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not 9010=no)
	then	{	NextStep(5, 3, 9010);
			SentProposal(9010, 3, open, Clock)
		}
	else	{	NextStep(5, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 9010, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 2, 9010, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 9010, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5cf155b2
[CTAH] The created APLList : [proposal,2,9010,open]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 9010=no)
	then	{	NextStep(5, 3, 9010);
			SentProposal(9010, 3, open, 11)
		}
	else	{	NextStep(5, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 9010=no) then {NextStep(5, 3, 9010); SentProposal(9010, 3, open, 11)} else NextStep(5, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 9010=no)
	then	{	NextStep(5, 3, 9010);
			SentProposal(9010, 3, open, 11)
		}
	else	{	NextStep(5, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(5, 3, 9010);
	SentProposal(9010, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(5, 3, 9010); SentProposal(9010, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(5, 3, 9010);
	SentProposal(9010, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,9010,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	SentProposal(9010, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[SentProposal(9010, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	SentProposal(9010, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 9010, open)
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(2, 9010, open)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 9010, open)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 9010, open)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(2, 9010, open)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 9010, open)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[getScoreAfterExchange(3, 9010); if G(at(A, B, C)) then skip else sendResponse(9010, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 9010);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(9010, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(5, 3, 9010); ReceivedResponse(noresponse, 9010)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(9010, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(9010, accept)
		}
},
{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(9010, yes); if G(at(A, B, C)) then skip else sendResponse(9010, accept), if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(9010, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(9010, accept)
		}
},
{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(9010, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else sendResponse(9010, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	sendResponse(9010, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(scoreAfterExchange(9010, Score))
	then	{	respond(9010, 700)
		}
}


[new scheduled]:[skip, if B(scoreAfterExchange(9010, Score)) then respond(9010, 700)]
[After]:{	skip
},
{	if	B(scoreAfterExchange(9010, Score))
	then	{	respond(9010, 700)
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(5, 3, 9010); ReceivedResponse(noresponse, 9010)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	respond(9010, 700)
}


[new scheduled]:[respond(9010, 700)]
[After]:{	respond(9010, 700)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(9010, ANSWER)
}


[new scheduled]:[B(ANSWER=accept); if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(ANSWER=reject); sendResponse(9010, ANSWER)]
[After]:{	B(ANSWER=accept);
	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	sendResponse(9010, ANSWER)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(9010, accept)
}


[new scheduled]:[if B(not yes=yes) then if B(prohibition(rejectRequests(V2))) then if B(V2<700) then B(accept=reject); sendResponse(9010, accept)]
[After]:{	if	B(not yes=yes)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2<700)
					then	{	B(accept=reject)
						}
				}
		};
	sendResponse(9010, accept)
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(5, 3, 9010); ReceivedResponse(noresponse, 9010)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	sendResponse(9010, accept)
}


[new scheduled]:[sendResponse(9010, accept)]
[After]:{	sendResponse(9010, accept)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(9010, accept),L1,0);
	SentResponse(accept, 9010)
}


[new scheduled]:[@ctenv(sendResponse(9010, accept),L1,0); SentResponse(accept, 9010)]
[After]:{	@ctenv(sendResponse(9010, accept),L1,0);
	SentResponse(accept, 9010)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=9010, response=accepted, clock=13, time=2015-05-27 18:56:48.406]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 9010, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(response, 9010, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 9010, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 9010, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1d2e8ba7
[CTAH] The created APLList : [response,9010,accept]
[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9010)
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(5, 3, 9010); ReceivedResponse(noresponse, 9010)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedResponse(accept, 9010)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(5, 3, 9010);
			ReceivedResponse(noresponse, 9010)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9010)
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedResponse(accept, 9010)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedResponse(accept, 9010)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedResponse(accept, 9010)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3, 9010); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-27 18:56:48.927, clock=13]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-27 18:56:48.927, clock=13]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [5,3]
[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdatePosition(5, 3, 13)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 3, 13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 3, Clock); NoNextStep(5, 3, 9010); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(5, 3, 13)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 3, 13)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	UpdatePosition(5, 3, 13);
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(5, 3, 13); NoNextStep(5, 3, 9010); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(5, 3, 13);
	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=14, time=2015-05-27 18:56:52.153]
object notification: Time [clock=14, time=2015-05-27 18:56:52.153]
object notification: Time [clock=14, time=2015-05-27 18:56:52.153]
object notification: Time [clock=14, time=2015-05-27 18:56:52.153]
Event processed UpdateClock(14)
[Planbase]:{	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[NoNextStep(5, 3, 9010); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	NoNextStep(5, 3, 9010);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(13>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	if	B(13>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=15, time=2015-05-27 18:57:02.157]
object notification: Time [clock=15, time=2015-05-27 18:57:02.157]
org notification: Time [clock=15, time=2015-05-27 18:57:02.157]
object notification: Time [clock=15, time=2015-05-27 18:57:02.157]
[Planbase]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [5][3] [4][3]

a30[CTAH] moveStepToGoalTest returns I have chip: [4,3,no,no]
[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(15)
[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 3, no); SentProposal(no, no, open, Clock)} else NextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(4, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 3, no); SentProposal(no, no, open, 14)} else NextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(4, 3)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 3),L2,0); if B(L2=[actionresult([4,3])]) then {B(clock(Clock)); UpdatePosition(4, 3, Clock)}; NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-27 18:57:12.03, clock=15]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-27 18:57:12.03, clock=15]
[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=16, time=2015-05-27 18:57:12.161]
org notification: Time [clock=16, time=2015-05-27 18:57:12.161]
object notification: Time [clock=16, time=2015-05-27 18:57:12.161]
object notification: Time [clock=16, time=2015-05-27 18:57:12.161]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(16)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(16)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>10+5) then {NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>10+5)
	then	{	NoNextStep(5, 2, 7198);
			ReceivedResponse(noresponse, 7198)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(5, 2, 7198);
	ReceivedResponse(noresponse, 7198);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(5, 2, 7198); ReceivedResponse(noresponse, 7198); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(5, 2, 7198);
	ReceivedResponse(noresponse, 7198);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedResponse(noresponse, 7198);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedResponse(noresponse, 7198); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedResponse(noresponse, 7198);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [4,3]
Event processed UpdatePosition(4, 3, 15)
Event processed UpdateClock(16)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 3, Clock); NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(4, 3, 15), UpdateClock(16)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(4, 3, 15); NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][2] [5][2] [4][2] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: brown
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found any chip....: (R:5,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [5,2,1,3248]
org notification: Proposal [id=3248, agent=a40, agent2=a20, clock=16, time=2015-05-27 18:57:21.697]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 3248=no)
	then	{	NextStep(5, 2, 3248);
			SentProposal(3248, 1, open, Clock)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 3248=no) then {NextStep(5, 2, 3248); SentProposal(3248, 1, open, Clock)} else NextStep(5, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(not 3248=no)
	then	{	NextStep(5, 2, 3248);
			SentProposal(3248, 1, open, Clock)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 3248=no)
	then	{	NextStep(5, 2, 3248);
			SentProposal(3248, 1, open, 16)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 3248=no) then {NextStep(5, 2, 3248); SentProposal(3248, 1, open, 16)} else NextStep(5, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 3248=no)
	then	{	NextStep(5, 2, 3248);
			SentProposal(3248, 1, open, 16)
		}
	else	{	NextStep(5, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(5, 2, 3248);
	SentProposal(3248, 1, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(5, 2, 3248); SentProposal(3248, 1, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(5, 2, 3248);
	SentProposal(3248, 1, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	SentProposal(3248, 1, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[SentProposal(3248, 1, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	SentProposal(3248, 1, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=17, time=2015-05-27 18:57:22.164]
object notification: Time [clock=17, time=2015-05-27 18:57:22.164]
object notification: Time [clock=17, time=2015-05-27 18:57:22.164]
object notification: Time [clock=17, time=2015-05-27 18:57:22.164]
Event processed UpdateClock(17)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


Event processed UpdateClock(17)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>11+5) then {NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>11+5)
	then	{	NoNextStep(2, 2, 7475);
			ReceivedResponse(noresponse, 7475)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(2, 2, 7475);
	ReceivedResponse(noresponse, 7475);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(2, 2, 7475); ReceivedResponse(noresponse, 7475); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(2, 2, 7475);
	ReceivedResponse(noresponse, 7475);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedResponse(noresponse, 7475);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedResponse(noresponse, 7475); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedResponse(noresponse, 7475);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest proposals: brown
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found any chip....: (R:2,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [2,2,1,7025]
org notification: Proposal [id=7025, agent=a10, agent2=a20, clock=17, time=2015-05-27 18:57:31.153]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 7025=no)
	then	{	NextStep(2, 2, 7025);
			SentProposal(7025, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 7025=no) then {NextStep(2, 2, 7025); SentProposal(7025, 1, open, Clock)} else NextStep(2, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(not 7025=no)
	then	{	NextStep(2, 2, 7025);
			SentProposal(7025, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 7025=no)
	then	{	NextStep(2, 2, 7025);
			SentProposal(7025, 1, open, 17)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7025=no) then {NextStep(2, 2, 7025); SentProposal(7025, 1, open, 17)} else NextStep(2, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7025=no)
	then	{	NextStep(2, 2, 7025);
			SentProposal(7025, 1, open, 17)
		}
	else	{	NextStep(2, 2)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(2, 2, 7025);
	SentProposal(7025, 1, open, 17);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(2, 2, 7025); SentProposal(7025, 1, open, 17); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(2, 2, 7025);
	SentProposal(7025, 1, open, 17);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	SentProposal(7025, 1, open, 17);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[SentProposal(7025, 1, open, 17); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	SentProposal(7025, 1, open, 17);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=18, time=2015-05-27 18:57:32.166]
object notification: Time [clock=18, time=2015-05-27 18:57:32.166]
object notification: Time [clock=18, time=2015-05-27 18:57:32.166]
object notification: Time [clock=18, time=2015-05-27 18:57:32.166]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(18)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(18)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=19, time=2015-05-27 18:57:42.169]
object notification: Time [clock=19, time=2015-05-27 18:57:42.169]
object notification: Time [clock=19, time=2015-05-27 18:57:42.169]
object notification: Time [clock=19, time=2015-05-27 18:57:42.169]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=20, time=2015-05-27 18:57:52.176]
org notification: Time [clock=20, time=2015-05-27 18:57:52.176]
object notification: Time [clock=20, time=2015-05-27 18:57:52.176]
object notification: Time [clock=20, time=2015-05-27 18:57:52.176]
[Planbase]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(20)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(20)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=21, time=2015-05-27 18:58:02.179]
org notification: Time [clock=21, time=2015-05-27 18:58:02.179]
object notification: Time [clock=21, time=2015-05-27 18:58:02.179]
object notification: Time [clock=21, time=2015-05-27 18:58:02.179]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
[Planbase]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(20>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(21)]
[After]:{	if	B(20>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(21)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>16+5) then {NoNextStep(5, 2, 3248); ReceivedResponse(noresponse, 3248)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>16+5)
	then	{	NoNextStep(5, 2, 3248);
			ReceivedResponse(noresponse, 3248)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(2, 2, 7025); ReceivedResponse(noresponse, 7025)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(2, 2, 7025);
			ReceivedResponse(noresponse, 7025)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


