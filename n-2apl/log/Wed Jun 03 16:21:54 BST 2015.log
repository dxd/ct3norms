2015-06-03 16:21:56,175 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~16.21-gigaspaces-service-192.168.0.40-63420.log
-------------------------last log tuples start--------------------------------
Group [name=g, ra=a10, clock=0, time=2015-06-03 15:59:04.798]
Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.275]
Position [subject=a20, id=null, cell=Cell [x=2, y=3], time=2015-06-03 16:00:51.88, clock=12]
SetGoal [id=null, agent=a10, cell=Cell [x=5, y=0], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:09.94]
Time [clock=17, time=2015-06-03 16:01:42.059]
Time [clock=10, time=2015-06-03 16:00:31.153]
Time [clock=5, time=2015-06-03 15:59:41.126]
Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.353]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 15:59:04.602, clock=0]
Position [subject=a20, id=null, cell=Cell [x=4, y=2], time=2015-06-03 16:01:13.196, clock=14]
SetGoal [id=null, agent=a20, cell=Cell [x=4, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.07]
Response [id=8965, response=accepted, clock=12, time=2015-06-03 16:00:54.947]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 15:59:04.877]
Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 15:59:04.61, clock=0]
Position [subject=a10, id=null, cell=Cell [x=4, y=5], time=2015-06-03 16:00:55.692, clock=12]
Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 15:59:04.589, clock=0]
Time [clock=13, time=2015-06-03 16:01:01.181]
Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:55.306, clock=12]
Position [subject=a20, id=null, cell=Cell [x=4, y=3], time=2015-06-03 16:01:11.77, clock=14]
Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-06-03 15:59:12.412, clock=2]
Time [clock=12, time=2015-06-03 16:00:51.175]
Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-03 15:59:12.416]
Time [clock=19, time=2015-06-03 16:02:02.543]
Time [clock=6, time=2015-06-03 15:59:51.129]
Time [clock=3, time=2015-06-03 15:59:21.121]
SetGoal [id=null, agent=a30, cell=Cell [x=6, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.157]
Obligation [subject=a10, obligation=[acceptRequest(1836)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:00:47.153, clock=11]
Goal [id=null, cell=Cell [x=5, y=1], agent=null, time=2015-06-03 15:59:04.67, clock=0]
SetGoal [id=null, agent=a40, cell=Cell [x=5, y=2], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.323]
Prohibition [subject=a20, prohibition=[color(yellow, a20)], sanction=[reduce(a20, 100)], clock=2, time=2015-06-03 15:59:12.136]
Position [subject=a20, id=null, cell=Cell [x=3, y=3], time=2015-06-03 16:01:00.811, clock=12]
Position [subject=a10, id=null, cell=Cell [x=3, y=5], time=2015-06-03 16:00:27.349, clock=9]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 15:59:04.912]
Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.153]
Position [subject=a10, id=null, cell=Cell [x=4, y=4], time=2015-06-03 16:01:07.884, clock=13]
Response [id=8873, response=accepted, clock=12, time=2015-06-03 16:00:54.927]
Response [id=6051, response=accepted, clock=12, time=2015-06-03 16:00:55.116]
Response [id=1836, response=accepted, clock=11, time=2015-06-03 16:00:48.928]
Position [subject=a20, id=null, cell=Cell [x=4, y=1], time=2015-06-03 16:01:18.087, clock=14]
Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-03 15:59:12.244]
Response [id=8873, response=accepted, clock=12, time=2015-06-03 16:00:54.885]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 15:59:04.915]
Color [id=null, color=yellow, agent=a20, type=no, sanction=100, time=2015-06-03 15:59:12.133, clock=2]
Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-06-03 16:00:40.782, clock=10]
Time [clock=1, time=2015-06-03 15:59:01.076]
Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:56.714, clock=12]
Time [clock=14, time=2015-06-03 16:01:11.188]
Time [clock=16, time=2015-06-03 16:01:31.52]
Time [clock=15, time=2015-06-03 16:01:21.35]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 300)], clock=1, time=2015-06-03 15:59:04.867]
Prohibition [subject=a10, prohibition=[color(white, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-03 15:59:11.942]
Proposal [id=3788, agent=a30, agent2=a40, clock=11, time=2015-06-03 16:00:43.714]
Obligation [subject=a40, obligation=[acceptRequest(3788)], sanction=[reduce(a40, 200)], deadline=16, time=2015-06-03 16:00:43.724, clock=11]
Proposal [id=3244, agent=a20, agent2=a10, clock=11, time=2015-06-03 16:00:46.577]
Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 15:59:04.576, clock=0]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 15:59:04.872]
Proposal [id=8873, agent=a10, agent2=a40, clock=10, time=2015-06-03 16:00:33.988]
Time [clock=2, time=2015-06-03 15:59:11.118]
Time [clock=18, time=2015-06-03 16:01:52.537]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 15:59:04.874]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 15:59:04.859]
Time [clock=7, time=2015-06-03 16:00:01.132]
Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 15:59:04.426, clock=0]
Time [clock=20, time=2015-06-03 16:02:12.547]
Time [clock=11, time=2015-06-03 16:00:41.169]
Time [clock=8, time=2015-06-03 16:00:11.134]
Obligation [subject=a40, obligation=[acceptRequest(8965)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:36.439, clock=10]
Time [clock=9, time=2015-06-03 16:00:21.138]
Proposal [id=8965, agent=a20, agent2=a40, clock=10, time=2015-06-03 16:00:36.43]
Time [clock=4, time=2015-06-03 15:59:31.124]
Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.163]
Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 15:59:04.481, clock=0]
Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 15:59:04.606, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:59:04.592, clock=0]
Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 15:59:11.939, clock=2]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=1, time=2015-06-03 15:59:04.9]
Obligation [subject=a10, obligation=[respondToRequest(1836)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:00:47.156, clock=11]
Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:59:04.613, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-03 15:59:04.381, clock=0]
Obligation [subject=a40, obligation=[acceptRequest(8873)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:33.993, clock=10]
Color [id=null, color=yellow, agent=a30, type=yes, sanction=100, time=2015-06-03 15:59:11.578, clock=2]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 15:59:04.473, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 15:59:04.564, clock=0]
Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 15:59:11.064, clock=1]
Obligation [subject=a40, obligation=[at(5, 2, a40)], sanction=[reduce(a40, 700)], deadline=21, time=2015-06-03 15:59:10.328, clock=1]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:59:04.372, clock=0]
Obligation [subject=a20, obligation=[makeMove(2, 3, a20)], sanction=[reduce(a20, 300)], deadline=27, time=2015-06-03 16:00:51.899, clock=12]
Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-03 15:59:04.572, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 15:59:04.581, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 15:59:04.468, clock=0]
Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 15:59:12.241, clock=2]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:59:04.545, clock=0]
Obligation [subject=a30, obligation=[color(yellow, a30)], sanction=[reduce(a30, 100)], deadline=17, time=2015-06-03 15:59:11.582, clock=2]
Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 15:59:04.494, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:59:04.409, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 15:59:04.419, clock=0]
Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 15:59:11.829, clock=2]
Obligation [subject=a10, obligation=[at(5, 0, a10)], sanction=[reduce(a10, 700)], deadline=21, time=2015-06-03 15:59:09.952, clock=1]
Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:59:04.394, clock=0]
Obligation [subject=a10, obligation=[acceptRequest(3244)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:00:46.589, clock=11]
Response [id=6051, response=accepted, clock=12, time=2015-06-03 16:00:54.904]
Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-06-03 15:59:04.443, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:59:04.456, clock=0]
Proposal [id=1836, agent=a20, agent2=a10, clock=11, time=2015-06-03 16:00:47.147]
Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:59:04.4, clock=0]
Obligation [subject=a10, obligation=[makeMove(3, 5, a10)], sanction=[reduce(a10, 300)], deadline=24, time=2015-06-03 16:00:27.384, clock=9]
Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:59:04.388, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 15:59:04.356, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:59:04.405, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 15:59:04.384, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:59:04.555, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 15:59:04.489, clock=0]
Tile [id=null, cell=Cell [x=6, y=2], subject=yellow, time=2015-06-03 15:59:04.598, clock=0]
Obligation [subject=a40, obligation=[respondToRequest(6051)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:32.981, clock=10]
Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.336]
Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:59:04.353, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 15:59:04.56, clock=0]
Response [id=1764, response=accepted, clock=9, time=2015-06-03 16:00:26.865]
Obligation [subject=a40, obligation=[makeMove(6, 2, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-03 16:00:40.808, clock=10]
Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:59:04.568, clock=0]
Response [id=1836, response=accepted, clock=11, time=2015-06-03 16:00:48.942]
Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 15:59:04.359, clock=0]
Obligation [subject=a30, obligation=[makeMove(5, 2, a30)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 16:00:56.728, clock=12]
Obligation [subject=a40, obligation=[respondToRequest(8873)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:33.995, clock=10]
Obligation [subject=a20, obligation=[respondToRequest(1764)], sanction=[reduce(a20, 300)], deadline=14, time=2015-06-03 16:00:24.639, clock=9]
Obligation [subject=a20, obligation=[at(4, 1, a20)], sanction=[reduce(a20, 700)], deadline=21, time=2015-06-03 15:59:10.076, clock=1]
Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.545]
Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-03 15:59:04.533, clock=0]
Proposal [id=1764, agent=a10, agent2=a20, clock=9, time=2015-06-03 16:00:24.619]
Color [id=null, color=blue, agent=a10, type=yes, sanction=100, time=2015-06-03 15:59:10.777, clock=1]
Obligation [subject=a20, obligation=[acceptRequest(1764)], sanction=[reduce(a20, 200)], deadline=14, time=2015-06-03 16:00:24.637, clock=9]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 15:59:04.461, clock=0]
Obligation [subject=a40, obligation=[respondToRequest(8965)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:36.441, clock=10]
Proposal [id=6051, agent=a20, agent2=a40, clock=10, time=2015-06-03 16:00:32.974]
Obligation [subject=a40, obligation=[respondToRequest(3788)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 16:00:43.727, clock=11]
Obligation [subject=a10, obligation=[color(blue, a10)], sanction=[reduce(a10, 100)], deadline=16, time=2015-06-03 15:59:10.786, clock=1]
Obligation [subject=a10, obligation=[surround(5, 1)], sanction=[reduce(g, 700)], deadline=25, time=2015-06-03 15:59:04.856, clock=1]
Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=17, time=2015-06-03 15:59:11.833, clock=2]
Tile [id=null, cell=Cell [x=6, y=1], subject=yellow, time=2015-06-03 15:59:04.596, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:59:04.448, clock=0]
Obligation [subject=a10, obligation=[respondToRequest(3244)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:00:46.592, clock=11]
Obligation [subject=a30, obligation=[at(6, 1, a30)], sanction=[reduce(a30, 700)], deadline=21, time=2015-06-03 15:59:10.161, clock=1]
Obligation [subject=a20, obligation=[color(yellow, a20)], sanction=[reduce(a20, 100)], deadline=16, time=2015-06-03 15:59:11.068, clock=1]
Obligation [subject=a40, obligation=[acceptRequest(6051)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:32.979, clock=10]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 15:59:04.378, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 15:59:04.585, clock=0]
Points [subject=a30, time=2015-06-03 16:00:56.744, clock=12, value=900, id=null]
Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:59:04.525, clock=0]
Points [subject=a20, time=2015-06-03 16:01:00.84, clock=12, value=600, id=null]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:59:04.413, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 15:59:04.55, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 15:59:04.374, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 15:59:04.436, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 15:59:04.43, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 15:59:04.313, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:59:04.364, clock=0]
Points [subject=a10, time=2015-06-03 16:01:07.938, clock=13, value=900, id=null]
Points [subject=a40, time=2015-06-03 16:01:53.03, clock=18, value=900, id=null]
Points [subject=a20, time=2015-06-03 16:01:00.838, clock=12, value=700, id=null]
Points [subject=a10, time=2015-06-03 16:01:42.527, clock=17, value=800, id=null]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
#########################Game Initialized
#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@70f10a53
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4272111
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@75222b8e
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [3,0]
[CTAH] Agentposition: [5,3]
[CTAH] Agentposition: [3,0]
[Planbase]:{	B(clock(C));
	GetAgentPos(3, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 0, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(5, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(5, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(5, 3, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 0, C)
}


[Planbase]:{	GetAgentPos(3, 0, 0)
}


[new scheduled]:[GetAgentPos(3, 0, 0)]
[After]:{	GetAgentPos(3, 0, 0)
}


[Planbase]:{	GetAgentPos(5, 3, 0)
}


[new scheduled]:[GetAgentPos(5, 3, 0)]
[After]:{	GetAgentPos(5, 3, 0)
}


[Planbase]:{	GetAgentPos(3, 0, 0)
}


[new scheduled]:[GetAgentPos(3, 0, 0)]
[After]:{	GetAgentPos(3, 0, 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=1, time=2015-06-03 16:22:07.826]
object notification: Time [clock=1, time=2015-06-03 16:22:07.826]
object notification: Time [clock=2, time=2015-06-03 16:22:17.849]
object notification: Time [clock=3, time=2015-06-03 16:22:27.851]
org notification: Time [clock=2, time=2015-06-03 16:22:17.849]
object notification: Time [clock=1, time=2015-06-03 16:22:07.826]
object notification: Time [clock=1, time=2015-06-03 16:22:07.826]
object notification: Time [clock=2, time=2015-06-03 16:22:17.849]
object notification: Time [clock=3, time=2015-06-03 16:22:27.851]
object notification: Time [clock=2, time=2015-06-03 16:22:17.849]
object notification: Time [clock=3, time=2015-06-03 16:22:27.851]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-03 16:22:28.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-03 16:22:28.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 16:22:28.746, clock=0]
org notification: Time [clock=3, time=2015-06-03 16:22:27.851]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 16:22:28.748, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 16:22:28.75, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-03 16:22:28.712, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 16:22:28.751, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-03 16:22:28.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-06-03 16:22:28.755, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 16:22:28.746, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:22:28.757, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 16:22:28.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 16:22:28.76, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 16:22:28.748, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 16:22:28.75, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 16:22:28.751, clock=0]
org notification: Time [clock=4, time=2015-06-03 16:22:37.853]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-03 16:22:28.753, clock=0]
object notification: Time [clock=4, time=2015-06-03 16:22:37.853]
object notification: Time [clock=4, time=2015-06-03 16:22:37.853]
object notification: Time [clock=4, time=2015-06-03 16:22:37.853]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-06-03 16:22:28.755, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:22:28.757, clock=0]
object notification: Time [clock=5, time=2015-06-03 16:22:47.856]
object notification: Time [clock=5, time=2015-06-03 16:22:47.856]
object notification: Time [clock=5, time=2015-06-03 16:22:47.856]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-03 16:22:28.712, clock=0]
object notification: Time [clock=6, time=2015-06-03 16:22:57.859]
object notification: Time [clock=6, time=2015-06-03 16:22:57.859]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 16:22:28.746, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 16:22:28.748, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 16:22:28.75, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 16:22:28.751, clock=0]
org notification: Group [name=g, ra=a10, clock=0, time=2015-06-03 16:22:28.879]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-03 16:22:28.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-06-03 16:22:28.755, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:22:28.757, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 16:22:28.759, clock=0]
object notification: Time [clock=6, time=2015-06-03 16:22:57.859]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 16:22:28.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:22:28.763, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:22:28.764, clock=0]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=6, time=2015-06-03 16:22:58.949]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 16:22:28.765, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 16:22:28.766, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:22:28.768, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-03 16:22:28.77, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 16:22:28.772, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 16:22:28.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 16:22:28.775, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 16:22:28.776, clock=0]
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(yellow, 0, 5)
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 16:22:28.746, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 16:22:28.76, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 16:22:28.777, clock=0]
Event processed UpdateClock(6)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(brown, 1, 4)
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 16:22:28.779, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 16:22:28.748, clock=0]
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(blue, 2, 0)
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 16:22:28.759, clock=0]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=6, time=2015-06-03 16:22:59.009]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=6, time=2015-06-03 16:22:59.007]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 16:22:28.75, clock=0]
org notification: Goal [id=null, cell=Cell [x=2, y=1], agent=null, time=2015-06-03 16:22:28.837, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 16:22:28.751, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 16:22:28.76, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-03 16:22:28.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-06-03 16:22:28.755, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:22:28.757, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 16:22:28.759, clock=0]
Event processed UpdateTile(yellow, 2, 1)
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 16:22:28.76, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 16:22:28.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:22:28.763, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:22:28.764, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 16:22:28.765, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 16:22:28.766, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 16:22:28.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 16:22:28.78, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 16:22:28.782, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 16:22:28.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 16:22:28.784, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 16:22:28.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:22:28.785, clock=0]
Event processed UpdateTile(white, 2, 2)
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:22:28.763, clock=0]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=6, time=2015-06-03 16:22:59.011]
org notification: Time [clock=5, time=2015-06-03 16:22:47.856]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:22:28.764, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 16:22:28.765, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 16:22:28.766, clock=0]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=6, time=2015-06-03 16:22:59.017]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=6, time=2015-06-03 16:22:59.015]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 16:22:28.787, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:22:28.768, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 16:22:28.788, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-03 16:22:28.77, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 16:22:28.79, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 16:22:28.772, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-03 16:22:28.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 16:22:28.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-03 16:22:28.793, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 16:22:28.775, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:22:28.794, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 16:22:28.776, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:22:28.796, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 16:22:28.777, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-03 16:22:28.797, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 16:22:28.779, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 16:22:28.798, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 16:22:28.78, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 16:22:28.799, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 16:22:28.782, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 16:22:28.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 16:22:28.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 16:22:28.802, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 16:22:28.784, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:22:28.803, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:22:28.785, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:22:28.804, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 16:22:28.787, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 16:22:28.805, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 16:22:28.788, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=blue, time=2015-06-03 16:22:28.806, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 16:22:28.79, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 16:22:28.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-03 16:22:28.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-03 16:22:28.793, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:22:28.794, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:22:28.796, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:22:28.768, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 16:22:28.809, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-03 16:22:28.77, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-03 16:22:28.797, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 16:22:28.81, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 16:22:28.772, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 16:22:28.798, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 16:22:28.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 16:22:28.811, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 16:22:28.799, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-06-03 16:22:28.812, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 16:22:28.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 16:22:28.775, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 16:22:28.802, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:22:28.803, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:22:28.804, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 16:22:28.776, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 16:22:28.805, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=blue, time=2015-06-03 16:22:28.806, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 16:22:28.777, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 16:22:28.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 16:22:28.809, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 16:22:28.81, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 16:22:28.779, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 16:22:28.811, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-06-03 16:22:28.812, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 16:22:28.78, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 16:22:28.782, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 16:22:28.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 16:22:28.784, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:22:28.785, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(2, 1)], sanction=[reduce(g, 700)], deadline=28, time=2015-06-03 16:22:59.156, clock=6]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 16:22:28.787, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 16:22:28.788, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 16:22:28.79, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-03 16:22:28.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-03 16:22:28.793, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:22:28.794, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:22:28.796, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-03 16:22:28.797, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 16:22:28.798, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 16:22:28.799, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 16:22:28.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 16:22:28.802, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:22:28.803, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:22:28.804, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 16:22:28.805, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=blue, time=2015-06-03 16:22:28.806, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 16:22:28.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 16:22:28.809, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 16:22:28.81, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 16:22:28.811, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-06-03 16:22:28.812, clock=0]
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(brown, 3, 6)
org notification: Time [clock=6, time=2015-06-03 16:22:57.859]
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 300))
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 4, 1)
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:22:28.763, clock=0]
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(brown, 5, 0)
Event processed UpdateTile(brown, 5, 1)
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:22:28.764, clock=0]
Event processed UpdateTile(blue, 5, 2)
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 16:22:28.765, clock=0]
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateClock(6)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 16:22:28.766, clock=0]
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 6, 1)
Event processed UpdateClock(1)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 6, 2)
Event processed UpdateClock(2)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateClock(3)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 300))
Event processed UpdateClock(6)
Event processed UpdateTile(brown, 1, 5)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 300))
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(blue, 2, 0)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(brown, 0, 3)
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:22:28.768, clock=0]
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 6, 5)
Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(white, 2, 2)
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(brown, 1, 5)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-03 16:22:28.77, clock=0]
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(blue, 2, 0)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(white, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(blue, 3, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 16:22:28.772, clock=0]
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 2)
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 16:22:28.773, clock=0]
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(yellow, 3, 4)
[Planbase]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 16:22:28.775, clock=0]
[new scheduled]:[UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateTile(blue, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateClock(4), UpdateClock(5), UpdateClock(6), UpdateTile(yellow, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(white, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(white, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(brown, 3, 6), adoptProhibition(rejectRequests(a30), reduce(a30, 300)), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(white, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(brown, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(blue, 6, 1), UpdateTile(brown, 6, 2), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(white, 6, 5), UpdateTile(white, 6, 6)]
[After]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(brown, 3, 6)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 16:22:28.776, clock=0]
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(brown, 3, 6)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(brown, 5, 0)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(brown, 5, 0)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(white, 5, 5)
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 16:22:28.777, clock=0]
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(yellow, 5, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 16:22:28.779, clock=0]
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(blue, 6, 1)
Event processed UpdateTile(brown, 6, 2)
Event processed UpdateTile(white, 6, 3)
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 16:22:28.78, clock=0]
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(blue, 6, 1)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(brown, 6, 2)
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 16:22:28.782, clock=0]
Event processed UpdateTile(white, 6, 5)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(white, 6, 6)
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 16:22:28.783, clock=0]
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(white, 6, 5)
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 16:22:28.784, clock=0]
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:22:28.785, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 16:22:28.787, clock=0]
Event processed adoptObligation(surround(2, 1), 28, reduce(g, 700))
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 16:22:28.788, clock=0]
[Planbase]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateClock(6)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[new scheduled]:[UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateTile(blue, 0, 0), UpdateClock(6), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(brown, 1, 4), adoptProhibition(rejectRequests(a40), reduce(a40, 300)), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(white, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateTile(brown, 2, 6), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(white, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(white, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(brown, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(blue, 6, 1), UpdateTile(brown, 6, 2), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(white, 6, 5), UpdateTile(white, 6, 6)]
[After]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateClock(6)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 16:22:28.79, clock=0]
[Planbase]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(2, 1), 28, reduce(g, 700))
}


[new scheduled]:[UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateTile(blue, 0, 0), UpdateClock(4), UpdateClock(5), UpdateClock(6), adoptProhibition(rejectRequests(a10), reduce(a10, 300)), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(white, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(white, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(white, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(brown, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(blue, 6, 1), UpdateTile(brown, 6, 2), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(white, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(2, 1), 28, reduce(g, 700))]
[After]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(blue, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(2, 1), 28, reduce(g, 700))
}


org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-03 16:22:28.791, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-03 16:22:28.793, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:22:28.794, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:22:28.796, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-03 16:22:28.797, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 16:22:28.798, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 16:22:28.799, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 16:22:28.801, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 16:22:28.802, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:22:28.803, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:22:28.804, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 16:22:28.805, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=blue, time=2015-06-03 16:22:28.806, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 16:22:28.808, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 16:22:28.809, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 16:22:28.81, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 16:22:28.811, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-06-03 16:22:28.812, clock=0]
[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 1, 700) : 3 Jun 2015 15:39:39 GMT, priority 10)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(2, 1, 700) : 3 Jun 2015 15:39:39 GMT, priority 10)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 1, 700) : 3 Jun 2015 15:39:39 GMT, priority 10)
}


obligation to be adopted: surround(2, 1, 700) : 3 Jun 2015 15:39:39 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(2, 1); sendSouth(a10, 2, 1, 100); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Surround(2, 1);
	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 2, 1, 100); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=0], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:00.835]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=0], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:00.835]
object notification: Obligation [subject=a10, obligation=[at(2, 0, a10)], sanction=[reduce(a10, 700)], deadline=26, time=2015-06-03 16:23:00.842, clock=6]
Event processed adoptObligation(at(2, 0, a10), 26, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 0, a10), 26, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptObligation(at(2, 0, a10), 26, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 0, a10), 26, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=1], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:00.95]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=1], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:00.95]
[Planbase]:{	@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 0, 700) : 3 Jun 2015 15:39:40 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptz(at(2, 0, 700) : 3 Jun 2015 15:39:40 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 0, 700) : 3 Jun 2015 15:39:40 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=1], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:01.052]
obligation to be adopted: at(2, 0, 700) : 3 Jun 2015 15:39:40 GMT, priority 10
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=1], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:01.052]
object notification: Obligation [subject=a30, obligation=[at(3, 1, a30)], sanction=[reduce(a30, 700)], deadline=26, time=2015-06-03 16:23:01.056, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=2], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:01.174]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=2], goal=Cell [x=2, y=1], sanction=100, clock=6, time=2015-06-03 16:23:01.174]
Event processed adoptObligation(at(3, 1, a30), 26, reduce(a30, 700))
object notification: Obligation [subject=a40, obligation=[at(2, 2, a40)], sanction=[reduce(a40, 700)], deadline=26, time=2015-06-03 16:23:01.177, clock=6]
[Planbase]:{	adoptObligation(at(3, 1, a30), 26, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(3, 1, a30), 26, reduce(a30, 700))]
[After]:{	adoptObligation(at(3, 1, a30), 26, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(white, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	color(white, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(2, 2, a40), 26, reduce(a40, 700))
[Planbase]:{	adoptz(at(3, 1, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 1, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)]
[After]:{	adoptz(at(3, 1, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(2, 2, a40), 26, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(2, 2, a40), 26, reduce(a40, 700))]
[After]:{	adoptObligation(at(2, 2, a40), 26, reduce(a40, 700))
}


obligation to be adopted: at(3, 1, 700) : 3 Jun 2015 15:39:41 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-06-03 16:23:01.475, clock=6]
[Planbase]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 2, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)]
[After]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-06-03 16:23:01.475, clock=6]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=21, time=2015-06-03 16:23:01.483, clock=6]
obligation to be adopted: at(2, 2, 700) : 3 Jun 2015 15:39:41 GMT, priority 10
Event processed adoptObligation(color(white, a10), 21, reduce(a10, 100))
[Planbase]:{	color(white, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 100))
}


[new scheduled]:[color(white, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 21, reduce(a10, 100))]
[After]:{	color(white, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, white, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, white, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptz(useColor(white, 100) : 3 Jun 2015 15:39:41 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, white, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 15:39:41 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-06-03 16:23:01.778, clock=6]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-06-03 16:23:01.778, clock=6]
obligation to be adopted: useColor(white, 100) : 3 Jun 2015 15:39:41 GMT, priority 10
[Planbase]:{	color(yellow, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(yellow, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, yellow, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(yellow, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, yellow, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a30, type=yes, sanction=100, time=2015-06-03 16:23:01.956, clock=6]
org notification: Color [id=null, color=yellow, agent=a30, type=yes, sanction=100, time=2015-06-03 16:23:01.956, clock=6]
object notification: Obligation [subject=a30, obligation=[color(yellow, a30)], sanction=[reduce(a30, 100)], deadline=21, time=2015-06-03 16:23:01.961, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(brown, a40, yes, 100);
	color(brown, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(brown, a40, yes, 100); color(brown, a10, no, 100); color(yellow, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	color(brown, a40, yes, 100);
	color(brown, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(yellow, a30), 21, reduce(a30, 100))
[Planbase]:{	adoptObligation(color(yellow, a30), 21, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(yellow, a30), 21, reduce(a30, 100))]
[After]:{	adoptObligation(color(yellow, a30), 21, reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, brown, yes, 100),L,0);
	color(brown, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, brown, yes, 100),L,0); color(brown, a10, no, 100); color(yellow, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, brown, yes, 100),L,0);
	color(brown, a10, no, 100);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=brown, agent=a40, type=yes, sanction=100, time=2015-06-03 16:23:02.202, clock=6]
[Planbase]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(yellow, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)]
[After]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)
}


org notification: Color [id=null, color=brown, agent=a40, type=yes, sanction=100, time=2015-06-03 16:23:02.202, clock=6]
object notification: Obligation [subject=a40, obligation=[color(brown, a40)], sanction=[reduce(a40, 100)], deadline=21, time=2015-06-03 16:23:02.206, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 15:39:42 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, brown, no, 100),L,0);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, brown, no, 100),L,0); color(yellow, a20, no, 100); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, brown, no, 100),L,0);
	color(yellow, a20, no, 100);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(brown, a40), 21, reduce(a40, 100))
agent writes: Color [id=null, color=brown, agent=a10, type=no, sanction=100, time=2015-06-03 16:23:02.35, clock=6]
org notification: Color [id=null, color=brown, agent=a10, type=no, sanction=100, time=2015-06-03 16:23:02.35, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Prohibition [subject=a10, prohibition=[color(brown, a10)], sanction=[reduce(a10, 100)], clock=6, time=2015-06-03 16:23:02.353]
[Planbase]:{	adoptObligation(color(brown, a40), 21, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(brown, a40), 21, reduce(a40, 100))]
[After]:{	adoptObligation(color(brown, a40), 21, reduce(a40, 100))
}


Event processed adoptProhibition(color(brown, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, yellow, no, 100),L,0);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(brown, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, yellow, no, 100),L,0); color(white, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptProhibition(color(brown, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, yellow, no, 100),L,0);
	color(white, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(brown, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=yellow, agent=a20, type=no, sanction=100, time=2015-06-03 16:23:02.5, clock=6]
[Planbase]:{	adoptz(useColor(brown, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(brown, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)]
[After]:{	adoptz(useColor(brown, 100) : 3 Jun 2015 15:39:42 GMT, priority 10)
}


org notification: Color [id=null, color=yellow, agent=a20, type=no, sanction=100, time=2015-06-03 16:23:02.5, clock=6]
obligation to be adopted: useColor(brown, 100) : 3 Jun 2015 15:39:42 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, white, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, white, no, 100),L,0); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), AdoptP(useColor(brown, 100)); aprohibition(useColor(brown, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, white, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=white, agent=a30, type=no, sanction=100, time=2015-06-03 16:23:02.63, clock=6]
org notification: Color [id=null, color=white, agent=a30, type=no, sanction=100, time=2015-06-03 16:23:02.63, clock=6]
object notification: Prohibition [subject=a30, prohibition=[color(white, a30)], sanction=[reduce(a30, 100)], clock=6, time=2015-06-03 16:23:02.632]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, white, no, 100),L,0); dropgoal(surround(2, 1, 700) : Infinite, priority 10), aprohibition(useColor(brown, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(white, a30), reduce(a30, 100))
agent writes: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 16:23:02.771, clock=6]
org notification: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 16:23:02.771, clock=6]
object notification: Prohibition [subject=a40, prohibition=[color(white, a40)], sanction=[reduce(a40, 100)], clock=6, time=2015-06-03 16:23:02.774]
[Planbase]:{	adoptProhibition(color(white, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(white, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(white, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(white, a40), reduce(a40, 100))
[Planbase]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(white, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[Planbase]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-06-03 16:23:07.863]
object notification: Time [clock=7, time=2015-06-03 16:23:07.863]
object notification: Time [clock=7, time=2015-06-03 16:23:07.863]
object notification: Time [clock=7, time=2015-06-03 16:23:07.863]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 16:23:17.866]
org notification: Time [clock=8, time=2015-06-03 16:23:17.866]
object notification: Time [clock=8, time=2015-06-03 16:23:17.866]
object notification: Time [clock=8, time=2015-06-03 16:23:17.866]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-03 16:23:27.87]
org notification: Time [clock=9, time=2015-06-03 16:23:27.87]
object notification: Time [clock=9, time=2015-06-03 16:23:27.87]
object notification: Time [clock=9, time=2015-06-03 16:23:27.87]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=10, time=2015-06-03 16:23:37.874]
object notification: Time [clock=10, time=2015-06-03 16:23:37.874]
org notification: Time [clock=10, time=2015-06-03 16:23:37.874]
object notification: Time [clock=10, time=2015-06-03 16:23:37.874]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@231556b
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@2b499ae
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@7713c735
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	Updated
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	Updated
},
{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a10[CTAH] going goal: 2,0 color: neco
a40[CTAH] going goal: 2,2 color: neco
a30[CTAH] going goal: 3,1 color: neco
org notification: Time [clock=11, time=2015-06-03 16:23:47.878]
object notification: Time [clock=11, time=2015-06-03 16:23:47.878]
object notification: Time [clock=11, time=2015-06-03 16:23:47.878]
object notification: Time [clock=11, time=2015-06-03 16:23:47.878]
a10[CTAH] paths: 1000
Need to wait 4 more seconds
org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:23:49.519, clock=11]
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [0][3] [1][3] [2][3] [2][2] [2][1] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:1,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [1,3,3,9346]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=9346, agent=a30, agent2=a40, clock=11, time=2015-06-03 16:23:50.689]
Event processed UpdateClock(11)
object notification: Obligation [subject=a40, obligation=[acceptRequest(9346)], sanction=[reduce(a40, 200)], deadline=16, time=2015-06-03 16:23:50.703, clock=11]
object notification: Obligation [subject=a40, obligation=[respondToRequest(9346)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 16:23:50.705, clock=11]
[Planbase]:{	B(clock(Clock));
	if	B(not 9346=no)
	then	{	NextStep(1, 3, 9346);
			SentProposal(9346, 3, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 9346=no) then {NextStep(1, 3, 9346); SentProposal(9346, 3, open, Clock)} else NextStep(1, 3), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 9346=no)
	then	{	NextStep(1, 3, 9346);
			SentProposal(9346, 3, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(not 9346=no)
	then	{	NextStep(1, 3, 9346);
			SentProposal(9346, 3, open, 10)
		}
	else	{	NextStep(1, 3)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(not 9346=no) then {NextStep(1, 3, 9346); SentProposal(9346, 3, open, 10)} else NextStep(1, 3), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(not 9346=no)
	then	{	NextStep(1, 3, 9346);
			SentProposal(9346, 3, open, 10)
		}
	else	{	NextStep(1, 3)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	NextStep(1, 3, 9346);
	SentProposal(9346, 3, open, 10)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[NextStep(1, 3, 9346); SentProposal(9346, 3, open, 10), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	NextStep(1, 3, 9346);
	SentProposal(9346, 3, open, 10)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	SentProposal(9346, 3, open, 10)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[SentProposal(9346, 3, open, 10), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	SentProposal(9346, 3, open, 10)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [3][5] [3][4] [3][3] [3][2] [3][1] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:4)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,4,3,7537]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Proposal [id=7537, agent=a10, agent2=a40, clock=11, time=2015-06-03 16:23:52.079]
object notification: Obligation [subject=a40, obligation=[acceptRequest(7537)], sanction=[reduce(a40, 200)], deadline=16, time=2015-06-03 16:23:52.082, clock=11]
object notification: Obligation [subject=a40, obligation=[respondToRequest(7537)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 16:23:52.084, clock=11]
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not 7537=no)
	then	{	NextStep(3, 4, 7537);
			SentProposal(7537, 3, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 7537=no) then {NextStep(3, 4, 7537); SentProposal(7537, 3, open, Clock)} else NextStep(3, 4), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 7537=no)
	then	{	NextStep(3, 4, 7537);
			SentProposal(7537, 3, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not 7537=no)
	then	{	NextStep(3, 4, 7537);
			SentProposal(7537, 3, open, 10)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 7537=no) then {NextStep(3, 4, 7537); SentProposal(7537, 3, open, 10)} else NextStep(3, 4), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 7537=no)
	then	{	NextStep(3, 4, 7537);
			SentProposal(7537, 3, open, 10)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	NextStep(3, 4, 7537);
	SentProposal(7537, 3, open, 10)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 4, 7537); SentProposal(7537, 3, open, 10), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(3, 4, 7537);
	SentProposal(7537, 3, open, 10)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	SentProposal(7537, 3, open, 10)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(7537, 3, open, 10), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(7537, 3, open, 10)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [0][3] [0][2] [1][2] [2][2]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:0,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [0,2,0,8350]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8350, agent=a40, agent2=a10, clock=11, time=2015-06-03 16:23:54.202]
object notification: Obligation [subject=a10, obligation=[acceptRequest(8350)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:23:54.205, clock=11]
Event processed @ctenv(functionToList(proposal(proposal, 3, 8350, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(8350), 16, reduce(a10, 200))
object notification: Obligation [subject=a10, obligation=[respondToRequest(8350)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:23:54.207, clock=11]
[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8350, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8350), 16, reduce(a10, 200))
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 3, 8350, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(8350), 16, reduce(a10, 200))]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8350, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8350), 16, reduce(a10, 200))
}


Event processed UpdateClock(11)
Event processed @ctenv(functionToList(proposal(proposal, 2, 9346, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(9346), 16, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(9346), 16, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 0, 7537, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(7537), 16, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(7537), 16, reduce(a40, 300))
[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 8350=no)
	then	{	NextStep(0, 2, 8350);
			SentProposal(8350, 0, open, Clock)
		}
	else	{	NextStep(0, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
},
{	@ctenv(functionToList(proposal(proposal, 2, 9346, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9346), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(9346), 16, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 7537, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7537), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(7537), 16, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@312dd3c5
[CTAH] The created APLList : [proposal,3,8350,open]
[new scheduled]:[B(clock(Clock)); if B(not 8350=no) then {NextStep(0, 2, 8350); SentProposal(8350, 0, open, Clock)} else NextStep(0, 2), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(11), @ctenv(functionToList(proposal(proposal, 2, 9346, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(9346), 16, reduce(a40, 200)), adoptObligation(respondToRequest(9346), 16, reduce(a40, 300)), @ctenv(functionToList(proposal(proposal, 0, 7537, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(7537), 16, reduce(a40, 200)), adoptObligation(respondToRequest(7537), 16, reduce(a40, 300))]
[After]:{	B(clock(Clock));
	if	B(not 8350=no)
	then	{	NextStep(0, 2, 8350);
			SentProposal(8350, 0, open, Clock)
		}
	else	{	NextStep(0, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
},
{	@ctenv(functionToList(proposal(proposal, 2, 9346, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9346), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(9346), 16, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 7537, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7537), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(7537), 16, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@25fb7c24
[CTAH] Array of Terms: [Lapapl.data.Term;@7564b262
[CTAH] The created APLList : [proposal,2,9346,open]
[CTAH] The created APLList : [proposal,0,7537,open]
Event processed adoptObligation(respondToRequest(8350), 16, reduce(a10, 300))
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8350, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptObligation(respondToRequest(8350), 16, reduce(a10, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(8350, 200) : 3 Jun 2015 15:40:34 GMT, priority 10), adoptObligation(respondToRequest(8350), 16, reduce(a10, 300))]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8350, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptObligation(respondToRequest(8350), 16, reduce(a10, 300))
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not 8350=no)
	then	{	NextStep(0, 2, 8350);
			SentProposal(8350, 0, open, 10)
		}
	else	{	NextStep(0, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9346, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptz(respondToRequest(9346, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7537, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptz(respondToRequest(7537, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
}


[new scheduled]:[if B(not 8350=no) then {NextStep(0, 2, 8350); SentProposal(8350, 0, open, 10)} else NextStep(0, 2), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(9346, 200) : 3 Jun 2015 15:40:34 GMT, priority 10), adoptz(respondToRequest(9346, 300) : 3 Jun 2015 15:40:34 GMT, priority 10), if B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(7537, 200) : 3 Jun 2015 15:40:34 GMT, priority 10), adoptz(respondToRequest(7537, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)]
[After]:{	if	B(not 8350=no)
	then	{	NextStep(0, 2, 8350);
			SentProposal(8350, 0, open, 10)
		}
	else	{	NextStep(0, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9346, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptz(respondToRequest(9346, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7537, 200) : 3 Jun 2015 15:40:34 GMT, priority 10)
},
{	adoptz(respondToRequest(7537, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
}


obligation to be adopted: acceptRequest(8350, 200) : 3 Jun 2015 15:40:34 GMT, priority 10
obligation to be adopted: acceptRequest(9346, 200) : 3 Jun 2015 15:40:34 GMT, priority 10
obligation to be adopted: respondToRequest(9346, 300) : 3 Jun 2015 15:40:34 GMT, priority 10
obligation to be adopted: acceptRequest(7537, 200) : 3 Jun 2015 15:40:34 GMT, priority 10
obligation to be adopted: respondToRequest(7537, 300) : 3 Jun 2015 15:40:34 GMT, priority 10
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	adoptz(respondToRequest(8350, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8350, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8350,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	adoptz(respondToRequest(8350, 300) : 3 Jun 2015 15:40:34 GMT, priority 10)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: respondToRequest(8350, 300) : 3 Jun 2015 15:40:34 GMT, priority 10
[Planbase]:{	NextStep(0, 2, 8350);
	SentProposal(8350, 0, open, 10)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(0, 2, 8350); SentProposal(8350, 0, open, 10), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(0, 2, 8350);
	SentProposal(8350, 0, open, 10)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,9346,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,7537,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8350, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(3, 8350, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8350, open)
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	SentProposal(8350, 0, open, 10)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 9346, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7537, open)
		}
}


[new scheduled]:[SentProposal(8350, 0, open, 10), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(proposal=proposal) then ReceivedProposal(2, 9346, open), if B(proposal=proposal) then ReceivedProposal(0, 7537, open)]
[After]:{	SentProposal(8350, 0, open, 10)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 9346, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7537, open)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(3, 8350, open)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(3, 8350, open)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(3, 8350, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedProposal(2, 9346, open)
},
{	ReceivedProposal(0, 7537, open)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedProposal(2, 9346, open), ReceivedProposal(0, 7537, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedProposal(2, 9346, open)
},
{	ReceivedProposal(0, 7537, open)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(8350, Score)) then getScoreAfterExchange(8350); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8350, Answer), if B(not scoreAfterExchange(8350, Score)) then getScoreAfterExchange(8350); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8350, Answer), if G(acceptRequests(8350, V2)) then skip else if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequests(8350, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 8350, closed(A)))
			then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(not scoreAfterExchange(8350, Score))
	then	{	getScoreAfterExchange(8350)
		};
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(not scoreAfterExchange(8350, Score))
	then	{	getScoreAfterExchange(8350)
		};
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(9346, Score)) then getScoreAfterExchange(9346); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9346, Answer), if B(not scoreAfterExchange(7537, Score)) then getScoreAfterExchange(7537); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7537, Answer), if B(not scoreAfterExchange(9346, Score)) then getScoreAfterExchange(9346); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9346, Answer), if B(not scoreAfterExchange(7537, Score)) then getScoreAfterExchange(7537); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7537, Answer), if G(acceptRequests(9346, V2)) then skip else if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequests(9346, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 9346, closed(A)))
			then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(not scoreAfterExchange(9346, Score))
	then	{	getScoreAfterExchange(9346)
		};
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	if	B(not scoreAfterExchange(7537, Score))
	then	{	getScoreAfterExchange(7537)
		};
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(not scoreAfterExchange(9346, Score))
	then	{	getScoreAfterExchange(9346)
		};
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	if	B(not scoreAfterExchange(7537, Score))
	then	{	getScoreAfterExchange(7537)
		};
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(8350);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	getScoreAfterExchange(8350);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), getScoreAfterExchange(8350); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8350, Answer), getScoreAfterExchange(8350); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8350, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(8350);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	getScoreAfterExchange(8350);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	getScoreAfterExchange(9346);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	getScoreAfterExchange(7537);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	getScoreAfterExchange(9346);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	getScoreAfterExchange(7537);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), if B(11>10+7) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, getScoreAfterExchange(9346); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9346, Answer), getScoreAfterExchange(7537); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7537, Answer), getScoreAfterExchange(9346); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9346, Answer), getScoreAfterExchange(7537); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7537, Answer), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	getScoreAfterExchange(9346);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	getScoreAfterExchange(7537);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	getScoreAfterExchange(9346);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	getScoreAfterExchange(7537);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	GetScoreAfterExchange(8350, yes);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	GetScoreAfterExchange(8350, yes);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(8350, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, GetScoreAfterExchange(8350, yes); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8350, Answer), GetScoreAfterExchange(8350, yes); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8350, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	GetScoreAfterExchange(8350, yes);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	GetScoreAfterExchange(8350, yes);
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


obligation to be adopted: respondToRequest(8350, 50) : Infinite, priority 10
[Planbase]:{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(9346, yes);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	GetScoreAfterExchange(7537, yes);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	GetScoreAfterExchange(9346, yes);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	GetScoreAfterExchange(7537, yes);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(9346, 50) : Infinite, priority 10), GetScoreAfterExchange(9346, yes); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9346, Answer), GetScoreAfterExchange(7537, yes); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7537, Answer), GetScoreAfterExchange(9346, yes); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9346, Answer), GetScoreAfterExchange(7537, yes); B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7537, Answer), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(9346, yes);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	GetScoreAfterExchange(7537, yes);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	GetScoreAfterExchange(9346, yes);
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	GetScoreAfterExchange(7537, yes);
	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: respondToRequest(9346, 50) : Infinite, priority 10
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(8350, Score)) then getScoreAfterExchange(8350); B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8350, Answer), if G(acceptRequests(8350, V2)) then skip else if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8350, Answer), B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8350, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not scoreAfterExchange(8350, Score))
	then	{	getScoreAfterExchange(8350)
		};
	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	G(acceptRequests(8350, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 8350, closed(A)))
			then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(9346, Score)) then getScoreAfterExchange(9346); B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9346, Answer), if G(acceptRequests(9346, V2)) then skip else if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9346, Answer), B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7537, Answer), B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9346, Answer), B(scoreAfterExchange(7537, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7537, Answer), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not scoreAfterExchange(9346, Score))
	then	{	getScoreAfterExchange(9346)
		};
	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	if	G(acceptRequests(9346, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 9346, closed(A)))
			then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(scoreAfterExchange(7537, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), B(scoreAfterExchange(8350, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8350, Answer), if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8350, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8350, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(scoreAfterExchange(8350, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(scoreAfterExchange(9346, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9346, Answer), if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), if B(11>10+7) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9346, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7537, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9346, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7537, Answer), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(scoreAfterExchange(9346, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, Answer)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8350, Answer), adoptz(respondToRequest(8350, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8350, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(8350, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, Answer)
},
{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


obligation to be adopted: respondToRequest(8350, 50) : Infinite, priority 10
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9346, Answer), adoptz(respondToRequest(9346, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(9346, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7537, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(9346, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(7537, accept), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, Answer)
},
{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


obligation to be adopted: respondToRequest(9346, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequests(8350, V2)) then skip else if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(8350, accept), if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, B(accept=accept); sendResponse(8350, accept), B(accept=accept); sendResponse(8350, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequests(8350, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 8350, closed(A)))
			then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8350, accept)
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	B(accept=accept);
	sendResponse(7537, accept)
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	B(accept=accept);
	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequests(9346, V2)) then skip else if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(9346, accept), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, B(accept=accept); sendResponse(9346, accept), B(accept=accept); sendResponse(7537, accept), B(accept=accept); sendResponse(9346, accept), B(accept=accept); sendResponse(7537, accept), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequests(9346, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 9346, closed(A)))
			then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9346, accept)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	B(accept=accept);
	sendResponse(7537, accept)
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	B(accept=accept);
	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	sendResponse(8350, accept)
},
{	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(3, 8350, closed(A))) then adoptz(respondToRequest(8350, 50) : Infinite, priority 10), B(accept=accept); sendResponse(8350, accept), sendResponse(8350, accept), sendResponse(8350, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(3, 8350, closed(A)))
	then	{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(8350, accept)
},
{	findNextStep(neco, 700)
},
{	sendResponse(8350, accept)
},
{	sendResponse(8350, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	sendResponse(9346, accept)
},
{	sendResponse(7537, accept)
},
{	sendResponse(9346, accept)
},
{	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 9346, closed(A))) then adoptz(respondToRequest(9346, 50) : Infinite, priority 10), B(accept=accept); sendResponse(9346, accept), if B(11>10+7) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, sendResponse(9346, accept), sendResponse(7537, accept), sendResponse(9346, accept), sendResponse(7537, accept), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not receivedP(2, 9346, closed(A)))
	then	{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(9346, accept)
},
{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	sendResponse(9346, accept)
},
{	sendResponse(7537, accept)
},
{	sendResponse(9346, accept)
},
{	sendResponse(7537, accept)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	sendResponse(8350, accept)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(8350, 50) : Infinite, priority 10), sendResponse(8350, accept), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, @ctenv(sendResponse(8350, accept),L1,0); SentResponse(accept, 8350), @ctenv(sendResponse(8350, accept),L1,0); SentResponse(accept, 8350), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	adoptz(respondToRequest(8350, 50) : Infinite, priority 10)
},
{	sendResponse(8350, accept)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

obligation to be adopted: respondToRequest(8350, 50) : Infinite, priority 10
[Planbase]:{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	sendResponse(9346, accept)
},
{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	@ctenv(sendResponse(7537, accept),L1,0);
	SentResponse(accept, 7537)
},
{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	@ctenv(sendResponse(7537, accept),L1,0);
	SentResponse(accept, 7537)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(9346, 50) : Infinite, priority 10), sendResponse(9346, accept), @ctenv(sendResponse(9346, accept),L1,0); SentResponse(accept, 9346), @ctenv(sendResponse(7537, accept),L1,0); SentResponse(accept, 7537), @ctenv(sendResponse(9346, accept),L1,0); SentResponse(accept, 9346), @ctenv(sendResponse(7537, accept),L1,0); SentResponse(accept, 7537), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	adoptz(respondToRequest(9346, 50) : Infinite, priority 10)
},
{	sendResponse(9346, accept)
},
{	findNextStep(neco, 700)
},
{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	@ctenv(sendResponse(7537, accept),L1,0);
	SentResponse(accept, 7537)
},
{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	@ctenv(sendResponse(7537, accept),L1,0);
	SentResponse(accept, 7537)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=8350, response=accepted, clock=11, time=2015-06-03 16:23:55.991]
org notification: Response [id=8350, response=accepted, clock=11, time=2015-06-03 16:23:56.012]
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

org notification: Response [id=7537, response=accepted, clock=11, time=2015-06-03 16:23:56.076]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

obligation to be adopted: respondToRequest(9346, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed @ctenv(functionToList(message(response, 7537, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
org notification: Response [id=9346, response=accepted, clock=11, time=2015-06-03 16:23:56.086]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=9346, response=accepted, clock=11, time=2015-06-03 16:23:56.11]
org notification: Response [id=7537, response=accepted, clock=11, time=2015-06-03 16:23:56.129]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
Event processed @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7537, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(8350, accept),L1,0); SentResponse(accept, 8350), if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 7537, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(sendResponse(8350, accept),L1,0);
	SentResponse(accept, 8350)
},
{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7537, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(9346, accept),L1,0); SentResponse(accept, 9346), B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(sendResponse(9346, accept),L1,0);
	SentResponse(accept, 9346)
},
{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@650b45e
[CTAH] The created APLList : [response,7537,accept]
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=8350, response=accepted, clock=11, time=2015-06-03 16:23:56.245]
[CTAH] Array of Terms: [Lapapl.data.Term;@3499e20f
[CTAH] The created APLList : [response,8350,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@518a7bdf
[CTAH] The created APLList : [response,8350,accept]
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=9346, response=accepted, clock=11, time=2015-06-03 16:23:56.269]
Event processed @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 7537, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(message(response, 9346, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 9346, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7537)
		}
},
{	@ctenv(functionToList(message(response, 7537, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 7537), @ctenv(functionToList(message(response, 7537, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7537)
		}
},
{	@ctenv(functionToList(message(response, 7537, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(response=response) then ReceivedResponse(accept, 8350), if B(response=response) then ReceivedResponse(accept, 8350), @ctenv(functionToList(message(response, 8350, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
},
{	@ctenv(functionToList(message(response, 8350, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@144348c6
[CTAH] The created APLList : [response,9346,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@4d5ec98e
[CTAH] The created APLList : [response,9346,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@a02b151
[CTAH] The created APLList : [response,9346,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@50a8e2d
[CTAH] The created APLList : [response,7537,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@4f5933f8
[CTAH] The created APLList : [response,8350,accept]
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(response=response) then ReceivedResponse(accept, 9346), if B(response=response) then ReceivedResponse(accept, 9346), if B(response=response) then ReceivedResponse(accept, 9346)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9346)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7537)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B(response=response) then ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7537)
		}
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), if B(response=response) then ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8350)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8884, agent=a20, agent2=a10, clock=11, time=2015-06-03 16:23:56.562]
object notification: Obligation [subject=a10, obligation=[acceptRequest(8884)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:23:56.565, clock=11]
object notification: Obligation [subject=a10, obligation=[respondToRequest(8884)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:23:56.567, clock=11]
Event processed @ctenv(functionToList(proposal(proposal, 1, 8884, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(8884), 16, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(8884), 16, reduce(a10, 300))
[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(proposal(proposal, 1, 8884, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8884), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(8884), 16, reduce(a10, 300))
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(3, 4, 7537); ReceivedResponse(noresponse, 7537)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), @ctenv(functionToList(proposal(proposal, 1, 8884, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(8884), 16, reduce(a10, 200)), adoptObligation(respondToRequest(8884), 16, reduce(a10, 300))]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(3, 4, 7537);
			ReceivedResponse(noresponse, 7537)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(proposal(proposal, 1, 8884, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8884), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(8884), 16, reduce(a10, 300))
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@321683e1
[CTAH] The created APLList : [proposal,1,8884,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8884, 200) : 3 Jun 2015 15:40:36 GMT, priority 10)
},
{	adoptz(respondToRequest(8884, 300) : 3 Jun 2015 15:40:36 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(8884, 200) : 3 Jun 2015 15:40:36 GMT, priority 10), adoptz(respondToRequest(8884, 300) : 3 Jun 2015 15:40:36 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8884, 200) : 3 Jun 2015 15:40:36 GMT, priority 10)
},
{	adoptz(respondToRequest(8884, 300) : 3 Jun 2015 15:40:36 GMT, priority 10)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 2, 8350); ReceivedResponse(noresponse, 8350)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 2, 8350);
			ReceivedResponse(noresponse, 8350)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


obligation to be adopted: acceptRequest(8884, 200) : 3 Jun 2015 15:40:36 GMT, priority 10
obligation to be adopted: respondToRequest(8884, 300) : 3 Jun 2015 15:40:36 GMT, priority 10
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(1, 3, 9346); ReceivedResponse(noresponse, 9346)}, if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(1, 3, 9346);
			ReceivedResponse(noresponse, 9346)
		}
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 4),L2,0); if B(L2=[actionresult([3,4])]) then {B(clock(Clock)); UpdatePosition(3, 4, Clock)}; NoNextStep(3, 4, 7537), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,8884,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=4], time=2015-06-03 16:23:56.882, clock=11]
object notification: Obligation [subject=a10, obligation=[makeMove(3, 4, a10)], sanction=[reduce(a10, 300)], deadline=26, time=2015-06-03 16:23:56.889, clock=11]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=4], time=2015-06-03 16:23:56.882, clock=11]
[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 0, 2),L2,0);
	if	B(L2=[actionresult([0,2])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 2, Clock)
		};
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 0, 2),L2,0); if B(L2=[actionresult([0,2])]) then {B(clock(Clock)); UpdatePosition(0, 2, Clock)}; NoNextStep(0, 2, 8350), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(moveStepToGoal(neco, 0, 2),L2,0);
	if	B(L2=[actionresult([0,2])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 2, Clock)
		};
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=0, y=2], time=2015-06-03 16:23:56.977, clock=11]
object notification: Position [subject=a40, id=null, cell=Cell [x=0, y=2], time=2015-06-03 16:23:56.977, clock=11]
object notification: Obligation [subject=a40, obligation=[makeMove(0, 2, a40)], sanction=[reduce(a40, 300)], deadline=26, time=2015-06-03 16:23:56.984, clock=11]
object notification: Points [subject=a40, time=2015-06-03 16:23:56.997, clock=11, value=900, id=null]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3, 9346)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 3),L2,0); if B(L2=[actionresult([1,3])]) then {B(clock(Clock)); UpdatePosition(1, 3, Clock)}; NoNextStep(1, 3, 9346), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3, 9346)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=1, y=3], time=2015-06-03 16:23:57.037, clock=11]
object notification: Obligation [subject=a30, obligation=[makeMove(1, 3, a30)], sanction=[reduce(a30, 300)], deadline=26, time=2015-06-03 16:23:57.052, clock=11]
object notification: Position [subject=a30, id=null, cell=Cell [x=1, y=3], time=2015-06-03 16:23:57.037, clock=11]
Event processed adoptObligation(makeMove(1, 3, a30), 26, reduce(a30, 300))
Event processed UpdatePosition(1, 3, 11)
[Planbase]:{	NoNextStep(1, 3, 9346)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	adoptObligation(makeMove(1, 3, a30), 26, reduce(a30, 300))
},
{	UpdatePosition(1, 3, 11)
}


[new scheduled]:[NoNextStep(1, 3, 9346), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), adoptObligation(makeMove(1, 3, a30), 26, reduce(a30, 300)), UpdatePosition(1, 3, 11)]
[After]:{	NoNextStep(1, 3, 9346)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	adoptObligation(makeMove(1, 3, a30), 26, reduce(a30, 300))
},
{	UpdatePosition(1, 3, 11)
}


[Planbase]:{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	adoptz(makeMove(1, 3, 300) : 3 Jun 2015 15:40:37 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 0)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), adoptz(makeMove(1, 3, 300) : 3 Jun 2015 15:40:37 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 0))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	adoptz(makeMove(1, 3, 300) : 3 Jun 2015 15:40:37 GMT, priority 10)
}


obligation to be adopted: makeMove(1, 3, 300) : 3 Jun 2015 15:40:37 GMT, priority 10
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] going goal: 3,1 color: neco
org notification: Time [clock=12, time=2015-06-03 16:23:57.881]
object notification: Time [clock=12, time=2015-06-03 16:23:57.881]
object notification: Time [clock=12, time=2015-06-03 16:23:57.881]
object notification: Time [clock=12, time=2015-06-03 16:23:57.881]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=9425, agent=a20, agent2=a10, clock=12, time=2015-06-03 16:23:57.993]
object notification: Obligation [subject=a10, obligation=[acceptRequest(9425)], sanction=[reduce(a10, 200)], deadline=17, time=2015-06-03 16:23:58.001, clock=12]
object notification: Obligation [subject=a10, obligation=[respondToRequest(9425)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-03 16:23:58.011, clock=12]
a40[CTAH] moveStepToGoal returns: [0,2]
Event processed UpdatePosition(0, 2, 11)
Event processed adoptObligation(makeMove(0, 2, a40), 26, reduce(a40, 300))
Event processed UpdatePoints(900)
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(0, 2, Clock);
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(0, 2, 11)
},
{	adoptObligation(makeMove(0, 2, a40), 26, reduce(a40, 300))
},
{	UpdatePoints(900)
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(0, 2, Clock); NoNextStep(0, 2, 8350), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdatePosition(0, 2, 11), adoptObligation(makeMove(0, 2, a40), 26, reduce(a40, 300)), UpdatePoints(900), UpdateClock(12)]
[After]:{	B(clock(Clock));
	UpdatePosition(0, 2, Clock);
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(0, 2, 11)
},
{	adoptObligation(makeMove(0, 2, a40), 26, reduce(a40, 300))
},
{	UpdatePoints(900)
},
{	UpdateClock(12)
}


[Planbase]:{	UpdatePosition(0, 2, 11);
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	adoptz(makeMove(0, 2, 300) : 3 Jun 2015 15:40:40 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(0, 2, 11); NoNextStep(0, 2, 8350), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), adoptz(makeMove(0, 2, 300) : 3 Jun 2015 15:40:40 GMT, priority 10)]
[After]:{	UpdatePosition(0, 2, 11);
	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	adoptz(makeMove(0, 2, 300) : 3 Jun 2015 15:40:40 GMT, priority 10)
}


obligation to be adopted: makeMove(0, 2, 300) : 3 Jun 2015 15:40:40 GMT, priority 10
[Planbase]:{	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[NoNextStep(0, 2, 8350), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	NoNextStep(0, 2, 8350)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a40[CTAH] going goal: 2,2 color: neco
a10[CTAH] moveStepToGoal returns: [3,4]
Event processed adoptObligation(makeMove(3, 4, a10), 26, reduce(a10, 300))
Event processed UpdatePosition(3, 4, 11)
Event processed UpdateClock(12)
Event processed @ctenv(functionToList(proposal(proposal, 1, 9425, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(9425), 17, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(9425), 17, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8884, open)
		}
},
{	adoptObligation(makeMove(3, 4, a10), 26, reduce(a10, 300))
},
{	UpdatePosition(3, 4, 11)
},
{	UpdateClock(12)
},
{	@ctenv(functionToList(proposal(proposal, 1, 9425, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9425), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(9425), 17, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 4, Clock); NoNextStep(3, 4, 7537), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B(proposal=proposal) then ReceivedProposal(1, 8884, open), adoptObligation(makeMove(3, 4, a10), 26, reduce(a10, 300)), UpdatePosition(3, 4, 11), UpdateClock(12), @ctenv(functionToList(proposal(proposal, 1, 9425, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(9425), 17, reduce(a10, 200)), adoptObligation(respondToRequest(9425), 17, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8884, open)
		}
},
{	adoptObligation(makeMove(3, 4, a10), 26, reduce(a10, 300))
},
{	UpdatePosition(3, 4, 11)
},
{	UpdateClock(12)
},
{	@ctenv(functionToList(proposal(proposal, 1, 9425, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9425), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(9425), 17, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7028d7f8
[CTAH] The created APLList : [proposal,1,9425,open]
[Planbase]:{	UpdatePosition(3, 4, 11);
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedProposal(1, 8884, open)
},
{	adoptz(makeMove(3, 4, 300) : 3 Jun 2015 15:40:41 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9425, 200) : 3 Jun 2015 15:40:41 GMT, priority 10)
},
{	adoptz(respondToRequest(9425, 300) : 3 Jun 2015 15:40:41 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(3, 4, 11); NoNextStep(3, 4, 7537), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), ReceivedProposal(1, 8884, open), adoptz(makeMove(3, 4, 300) : 3 Jun 2015 15:40:41 GMT, priority 10), if B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(9425, 200) : 3 Jun 2015 15:40:41 GMT, priority 10), adoptz(respondToRequest(9425, 300) : 3 Jun 2015 15:40:41 GMT, priority 10)]
[After]:{	UpdatePosition(3, 4, 11);
	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedProposal(1, 8884, open)
},
{	adoptz(makeMove(3, 4, 300) : 3 Jun 2015 15:40:41 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9425, 200) : 3 Jun 2015 15:40:41 GMT, priority 10)
},
{	adoptz(respondToRequest(9425, 300) : 3 Jun 2015 15:40:41 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 4, 300) : 3 Jun 2015 15:40:41 GMT, priority 10
obligation to be adopted: acceptRequest(9425, 200) : 3 Jun 2015 15:40:41 GMT, priority 10
obligation to be adopted: respondToRequest(9425, 300) : 3 Jun 2015 15:40:41 GMT, priority 10
[Planbase]:{	NoNextStep(3, 4, 7537)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(8884, Score)) then getScoreAfterExchange(8884); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8884, Answer), if B(not scoreAfterExchange(8884, Score)) then getScoreAfterExchange(8884); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8884, Answer), if G(acceptRequests(8884, V2)) then skip else if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), NoNextStep(3, 4, 7537), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequests(8884, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 8884, closed(A)))
			then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
				}
		}
},
{	NoNextStep(3, 4, 7537)
},
{	if	B(not scoreAfterExchange(8884, Score))
	then	{	getScoreAfterExchange(8884)
		};
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(not scoreAfterExchange(8884, Score))
	then	{	getScoreAfterExchange(8884)
		};
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([proposal,1,9425,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(8884);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	getScoreAfterExchange(8884);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 9425, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), getScoreAfterExchange(8884); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8884, Answer), getScoreAfterExchange(8884); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8884, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), if B(proposal=proposal) then ReceivedProposal(1, 9425, open)]
[After]:{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(8884);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	getScoreAfterExchange(8884);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 9425, open)
		}
}


[Planbase]:{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(8884, yes);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	GetScoreAfterExchange(8884, yes);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedProposal(1, 9425, open)
}


[new scheduled]:[adoptz(respondToRequest(8884, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, GetScoreAfterExchange(8884, yes); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8884, Answer), GetScoreAfterExchange(8884, yes); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8884, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), ReceivedProposal(1, 9425, open)]
[After]:{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(8884, yes);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	GetScoreAfterExchange(8884, yes);
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedProposal(1, 9425, open)
}


obligation to be adopted: respondToRequest(8884, 50) : Infinite, priority 10
[Planbase]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(not scoreAfterExchange(9425, Score)) then getScoreAfterExchange(9425); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9425, Answer), if B(not scoreAfterExchange(9425, Score)) then getScoreAfterExchange(9425); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9425, Answer), if B(not scoreAfterExchange(8884, Score)) then getScoreAfterExchange(8884); B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8884, Answer), if G(acceptRequests(8884, V2)) then skip else if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8884, Answer), B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8884, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	B(not scoreAfterExchange(8884, Score))
	then	{	getScoreAfterExchange(8884)
		};
	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	G(acceptRequests(8884, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 8884, closed(A)))
			then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
				}
		}
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(not scoreAfterExchange(9425, Score))
	then	{	getScoreAfterExchange(9425)
		};
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(not scoreAfterExchange(9425, Score))
	then	{	getScoreAfterExchange(9425)
		};
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(9425);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	getScoreAfterExchange(9425);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(scoreAfterExchange(8884, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8884, Answer), if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, getScoreAfterExchange(9425); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9425, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8884, Answer), getScoreAfterExchange(9425); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9425, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8884, Answer), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	B(scoreAfterExchange(8884, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(9425);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	getScoreAfterExchange(9425);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(9425, yes);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	GetScoreAfterExchange(9425, yes);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(8884, Answer), adoptz(respondToRequest(8884, 50) : Infinite, priority 10), if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, GetScoreAfterExchange(9425, yes); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9425, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8884, accept), GetScoreAfterExchange(9425, yes); B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9425, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(8884, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, Answer)
},
{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(9425, yes);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	GetScoreAfterExchange(9425, yes);
	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


obligation to be adopted: respondToRequest(8884, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if G(acceptRequests(8884, V2)) then skip else if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(8884, accept), @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9425, Answer), B(accept=accept); sendResponse(8884, accept), B(scoreAfterExchange(9425, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9425, Answer), B(accept=accept); sendResponse(8884, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	G(acceptRequests(8884, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 8884, closed(A)))
			then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8884, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	B(scoreAfterExchange(9425, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


a10[CTAH] going goal: 2,0 color: neco
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [1][3] [1][2] [2][2] [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:1,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [1,2,1,7294]
org notification: Proposal [id=7294, agent=a30, agent2=a20, clock=12, time=2015-06-03 16:24:03.267]
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not 7294=no)
	then	{	NextStep(1, 2, 7294);
			SentProposal(7294, 1, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not 7294=no) then {NextStep(1, 2, 7294); SentProposal(7294, 1, open, Clock)} else NextStep(1, 2), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not 7294=no)
	then	{	NextStep(1, 2, 7294);
			SentProposal(7294, 1, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(not 7294=no)
	then	{	NextStep(1, 2, 7294);
			SentProposal(7294, 1, open, 11)
		}
	else	{	NextStep(1, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(not 7294=no) then {NextStep(1, 2, 7294); SentProposal(7294, 1, open, 11)} else NextStep(1, 2), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(not 7294=no)
	then	{	NextStep(1, 2, 7294);
			SentProposal(7294, 1, open, 11)
		}
	else	{	NextStep(1, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	NextStep(1, 2, 7294);
	SentProposal(7294, 1, open, 11)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[NextStep(1, 2, 7294); SentProposal(7294, 1, open, 11), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	NextStep(1, 2, 7294);
	SentProposal(7294, 1, open, 11)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	SentProposal(7294, 1, open, 11)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[SentProposal(7294, 1, open, 11), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	SentProposal(7294, 1, open, 11)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=13, time=2015-06-03 16:24:07.888]
object notification: Time [clock=13, time=2015-06-03 16:24:07.888]
object notification: Time [clock=13, time=2015-06-03 16:24:07.888]
object notification: Time [clock=13, time=2015-06-03 16:24:07.888]
Event processed UpdateClock(13)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(13)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(13)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [3][4] [3][3] [3][2] [3][1] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest returns I have chip: [3,3,no,no]
Event processed UpdateClock(13)
[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	sendResponse(8884, accept)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(13)
}


[new scheduled]:[if B(not receivedP(1, 8884, closed(A))) then adoptz(respondToRequest(8884, 50) : Infinite, priority 10), B(accept=accept); sendResponse(8884, accept), B(clock(Clock)); if B(not no=no) then {NextStep(3, 3, no); SentProposal(no, no, open, Clock)} else NextStep(3, 3), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9425, Answer), sendResponse(8884, accept), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9425, Answer), sendResponse(8884, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), UpdateClock(13)]
[After]:{	if	B(not receivedP(1, 8884, closed(A)))
	then	{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(8884, accept)
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	sendResponse(8884, accept)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, Answer)
},
{	sendResponse(8884, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	sendResponse(8884, accept)
},
{	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, accept)
},
{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, accept)
},
{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[adoptz(respondToRequest(8884, 50) : Infinite, priority 10), sendResponse(8884, accept), if B(not no=no) then {NextStep(3, 3, no); SentProposal(no, no, open, 12)} else NextStep(3, 3), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(9425, accept), @ctenv(sendResponse(8884, accept),L1,0); SentResponse(accept, 8884), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(9425, accept), @ctenv(sendResponse(8884, accept),L1,0); SentResponse(accept, 8884), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	adoptz(respondToRequest(8884, 50) : Infinite, priority 10)
},
{	sendResponse(8884, accept)
},
{	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, accept)
},
{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9425, accept)
},
{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

obligation to be adopted: respondToRequest(8884, 50) : Infinite, priority 10
org notification: Response [id=8884, response=accepted, clock=13, time=2015-06-03 16:24:12.504]
org notification: Response [id=8884, response=accepted, clock=13, time=2015-06-03 16:24:12.53]
[Planbase]:{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	NextStep(3, 3)
},
{	B(accept=accept);
	sendResponse(9425, accept)
},
{	B(accept=accept);
	sendResponse(9425, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if G(acceptRequests(9425, V2)) then skip else if B(not receivedP(1, 9425, closed(A))) then adoptz(respondToRequest(9425, 50) : Infinite, priority 10), @ctenv(sendResponse(8884, accept),L1,0); SentResponse(accept, 8884), NextStep(3, 3), B(accept=accept); sendResponse(9425, accept), B(accept=accept); sendResponse(9425, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	G(acceptRequests(9425, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 9425, closed(A)))
			then	{	adoptz(respondToRequest(9425, 50) : Infinite, priority 10)
				}
		}
},
{	@ctenv(sendResponse(8884, accept),L1,0);
	SentResponse(accept, 8884)
},
{	NextStep(3, 3)
},
{	B(accept=accept);
	sendResponse(9425, accept)
},
{	B(accept=accept);
	sendResponse(9425, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=8884, response=accepted, clock=13, time=2015-06-03 16:24:12.739]
[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(not receivedP(1, 9425, closed(A)))
	then	{	adoptz(respondToRequest(9425, 50) : Infinite, priority 10)
		}
},
{	sendResponse(9425, accept)
},
{	sendResponse(9425, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 9425, closed(A))) then adoptz(respondToRequest(9425, 50) : Infinite, priority 10), sendResponse(9425, accept), sendResponse(9425, accept), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	B(not receivedP(1, 9425, closed(A)))
	then	{	adoptz(respondToRequest(9425, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	sendResponse(9425, accept)
},
{	sendResponse(9425, accept)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	adoptz(respondToRequest(9425, 50) : Infinite, priority 10)
},
{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3)
},
{	@ctenv(sendResponse(9425, accept),L1,0);
	SentResponse(accept, 9425)
},
{	@ctenv(sendResponse(9425, accept),L1,0);
	SentResponse(accept, 9425)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[adoptz(respondToRequest(9425, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3), @ctenv(sendResponse(9425, accept),L1,0); SentResponse(accept, 9425), @ctenv(sendResponse(9425, accept),L1,0); SentResponse(accept, 9425), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	adoptz(respondToRequest(9425, 50) : Infinite, priority 10)
},
{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3)
},
{	@ctenv(sendResponse(9425, accept),L1,0);
	SentResponse(accept, 9425)
},
{	@ctenv(sendResponse(9425, accept),L1,0);
	SentResponse(accept, 9425)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Need to wait 4 more seconds
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=3], time=2015-06-03 16:24:12.98, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=3], time=2015-06-03 16:24:12.98, clock=13]
org notification: Response [id=9425, response=accepted, clock=13, time=2015-06-03 16:24:12.988]
org notification: Response [id=9425, response=accepted, clock=13, time=2015-06-03 16:24:12.999]
[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=7294, response=accepted, clock=13, time=2015-06-03 16:24:13.313]
Event processed @ctenv(functionToList(message(response, 7294, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 7294, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), @ctenv(functionToList(message(response, 7294, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 7294, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@662156d6
[CTAH] The created APLList : [response,7294,accept]
[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7294)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), if B(response=response) then ReceivedResponse(accept, 7294)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7294)
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 7294)
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(1, 2, 7294); ReceivedResponse(noresponse, 7294)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 7294)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(1, 2, 7294);
			ReceivedResponse(noresponse, 7294)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 7294)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 7294)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2, 7294), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 7294)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:24:13.574, clock=13]
object notification: Position [subject=a30, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:24:13.574, clock=13]
Event processed UpdatePosition(1, 2, 13)
[Planbase]:{	NoNextStep(1, 2, 7294)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(1, 2, 13)
}


[new scheduled]:[NoNextStep(1, 2, 7294), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdatePosition(1, 2, 13)]
[After]:{	NoNextStep(1, 2, 7294)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(1, 2, 13)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] going goal: 3,1 color: neco
a10[CTAH] moveStepToGoal returns: [3,3]
obligation to be adopted: respondToRequest(9425, 50) : Infinite, priority 10
Event processed UpdatePosition(3, 3, 13)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 3, 13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 3, Clock); NoNextStep(3, 3), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), UpdatePosition(3, 3, 13)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 3, 13)
}


[Planbase]:{	UpdatePosition(3, 3, 13);
	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[UpdatePosition(3, 3, 13); NoNextStep(3, 3), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	UpdatePosition(3, 3, 13);
	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[NoNextStep(3, 3), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	NoNextStep(3, 3)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


object notification: Time [clock=14, time=2015-06-03 16:24:17.889]
object notification: Time [clock=14, time=2015-06-03 16:24:17.889]
org notification: Time [clock=14, time=2015-06-03 16:24:17.889]
object notification: Time [clock=14, time=2015-06-03 16:24:17.889]
Event processed UpdateClock(14)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(14)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), UpdateClock(14)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(14)
}


a10[CTAH] going goal: 2,0 color: neco
org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=2], time=2015-06-03 16:24:18.104, clock=14]
a40[CTAH] paths: 1000
Need to wait 3 more seconds
a40[CTAH] path: 0
a40[CTAH] path: Path: [0][2] [1][2] [2][2]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:1,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [1,2,1,7450]
org notification: Proposal [id=7450, agent=a40, agent2=a20, clock=14, time=2015-06-03 16:24:23.685]
Event processed UpdateClock(13)
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	if	B(not 7450=no)
	then	{	NextStep(1, 2, 7450);
			SentProposal(7450, 1, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(13)
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(not 7450=no) then {NextStep(1, 2, 7450); SentProposal(7450, 1, open, Clock)} else NextStep(1, 2), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(13), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(not 7450=no)
	then	{	NextStep(1, 2, 7450);
			SentProposal(7450, 1, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(13)
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(not 7450=no)
	then	{	NextStep(1, 2, 7450);
			SentProposal(7450, 1, open, 12)
		}
	else	{	NextStep(1, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(not 7450=no) then {NextStep(1, 2, 7450); SentProposal(7450, 1, open, 12)} else NextStep(1, 2), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(not 7450=no)
	then	{	NextStep(1, 2, 7450);
			SentProposal(7450, 1, open, 12)
		}
	else	{	NextStep(1, 2)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NextStep(1, 2, 7450);
	SentProposal(7450, 1, open, 12)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[NextStep(1, 2, 7450); SentProposal(7450, 1, open, 12), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	NextStep(1, 2, 7450);
	SentProposal(7450, 1, open, 12)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	SentProposal(7450, 1, open, 12)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[SentProposal(7450, 1, open, 12), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	SentProposal(7450, 1, open, 12)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [1][2] [2][2] [2][1] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:2,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [2,2,1,1094]
[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Proposal [id=1094, agent=a30, agent2=a20, clock=14, time=2015-06-03 16:24:27.449]
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	if	B(not 1094=no)
	then	{	NextStep(2, 2, 1094);
			SentProposal(1094, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(not 1094=no) then {NextStep(2, 2, 1094); SentProposal(1094, 1, open, Clock)} else NextStep(2, 2), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(not 1094=no)
	then	{	NextStep(2, 2, 1094);
			SentProposal(1094, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(not 1094=no)
	then	{	NextStep(2, 2, 1094);
			SentProposal(1094, 1, open, 13)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(not 1094=no) then {NextStep(2, 2, 1094); SentProposal(1094, 1, open, 13)} else NextStep(2, 2), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(not 1094=no)
	then	{	NextStep(2, 2, 1094);
			SentProposal(1094, 1, open, 13)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NextStep(2, 2, 1094);
	SentProposal(1094, 1, open, 13)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[NextStep(2, 2, 1094); SentProposal(1094, 1, open, 13), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	NextStep(2, 2, 1094);
	SentProposal(1094, 1, open, 13)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	SentProposal(1094, 1, open, 13)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[SentProposal(1094, 1, open, 13), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	SentProposal(1094, 1, open, 13)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=15, time=2015-06-03 16:24:27.891]
object notification: Time [clock=15, time=2015-06-03 16:24:27.891]
object notification: Time [clock=15, time=2015-06-03 16:24:27.891]
object notification: Time [clock=15, time=2015-06-03 16:24:27.891]
Event processed UpdateClock(15)
[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(15)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(15)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(15)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [3][3] [3][2] [2][2] [2][1] [2][0]

a10[CTAH] moveStepToGoalTest returns I have chip: [3,2,no,no]
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, Clock)} else NextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, 14)} else NextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[NextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	NextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-06-03 16:24:31.124, clock=15]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-06-03 16:24:31.124, clock=15]
[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a10[CTAH] moveStepToGoal returns: [3,2]
[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Event processed UpdatePosition(3, 2, 15)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 2, 15)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 2, Clock); NoNextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537), UpdatePosition(3, 2, 15)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 2, 15)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=7450, response=accepted, clock=15, time=2015-06-03 16:24:34.258]
[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	UpdatePosition(3, 2, 15);
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[UpdatePosition(3, 2, 15); NoNextStep(3, 2), if B(tile(white, 5, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7537)]
[After]:{	UpdatePosition(3, 2, 15);
	NoNextStep(3, 2)
},
{	if	B(tile(white, 5, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


Event processed @ctenv(functionToList(message(response, 7450, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(response, 7450, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), @ctenv(functionToList(message(response, 7450, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(response, 7450, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7db3afc5
[CTAH] The created APLList : [response,7450,accept]
[Planbase]:{	NoNextStep(3, 2)
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[NoNextStep(3, 2), ReceivedResponse(accept, 7537)]
[After]:{	NoNextStep(3, 2)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7450)
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), if B(response=response) then ReceivedResponse(accept, 7450)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7450)
		}
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 7450)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 7450)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 7450)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(1, 2, 7450); ReceivedResponse(noresponse, 7450)}, if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(1, 2, 7450);
			ReceivedResponse(noresponse, 7450)
		}
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2, 7450), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Need to wait 3 more seconds
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:24:34.955, clock=15]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:24:34.955, clock=15]
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


a10[CTAH] going goal: 2,0 color: neco
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1094, response=accepted, clock=15, time=2015-06-03 16:24:36.121]
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Event processed @ctenv(functionToList(message(response, 1094, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 1094, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), @ctenv(functionToList(message(response, 1094, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 1094, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@ff5dfae
[CTAH] The created APLList : [response,1094,accept]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1094)
		}
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), if B(response=response) then ReceivedResponse(accept, 1094)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1094)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 1094)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 1094)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 1094)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 1094); ReceivedResponse(noresponse, 1094)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 1094);
			ReceivedResponse(noresponse, 1094)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 1094)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2, 1094), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 1094)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 16:24:36.482, clock=15]
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 16:24:36.482, clock=15]
Event processed UpdatePosition(2, 2, 15)
object notification: Points [subject=a30, time=2015-06-03 16:24:36.529, clock=15, value=900, id=null]
[Planbase]:{	NoNextStep(2, 2, 1094)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(2, 2, 15)
}


[new scheduled]:[NoNextStep(2, 2, 1094), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdatePosition(2, 2, 15)]
[After]:{	NoNextStep(2, 2, 1094)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(2, 2, 15)
}


Event processed UpdatePoints(900)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePoints(900)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdatePoints(900)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePoints(900)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] going goal: 3,1 color: neco
org notification: Time [clock=16, time=2015-06-03 16:24:37.893]
object notification: Time [clock=16, time=2015-06-03 16:24:37.893]
object notification: Time [clock=16, time=2015-06-03 16:24:37.893]
object notification: Time [clock=16, time=2015-06-03 16:24:37.893]
a40[CTAH] moveStepToGoal returns: [1,2]
Event processed UpdatePosition(1, 2, 15)
Event processed UpdateClock(16)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(1, 2, 15)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 2, Clock); NoNextStep(1, 2, 7450), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdatePosition(1, 2, 15), UpdateClock(16)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(1, 2, 15)
},
{	UpdateClock(16)
}


[Planbase]:{	UpdatePosition(1, 2, 15);
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[UpdatePosition(1, 2, 15); NoNextStep(1, 2, 7450), if B(tile(brown, 3, 0)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	UpdatePosition(1, 2, 15);
	NoNextStep(1, 2, 7450)
},
{	if	B(tile(brown, 3, 0))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NoNextStep(1, 2, 7450)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[NoNextStep(1, 2, 7450), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	NoNextStep(1, 2, 7450)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a40[CTAH] going goal: 2,2 color: neco
org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=2], time=2015-06-03 16:24:39.126, clock=16]
org notification: Time [clock=17, time=2015-06-03 16:24:47.896]
object notification: Time [clock=17, time=2015-06-03 16:24:47.896]
object notification: Time [clock=17, time=2015-06-03 16:24:47.896]
object notification: Time [clock=17, time=2015-06-03 16:24:47.896]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][2] [2][1] [3][1]

a30[CTAH] moveStepToGoalTest returns I have chip: [2,1,no,no]
Event processed UpdateClock(16)
Event processed UpdateClock(17)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(16)
},
{	UpdateClock(17)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, Clock)} else NextStep(2, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(16), UpdateClock(17)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(16)
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 15)
		}
	else	{	NextStep(2, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, 15)} else NextStep(2, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 15)
		}
	else	{	NextStep(2, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	NextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[NextStep(2, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	NextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=1], time=2015-06-03 16:24:49.194, clock=17]
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=1], time=2015-06-03 16:24:49.194, clock=17]
Event processed UpdatePosition(2, 1, 17)
[Planbase]:{	NoNextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(2, 1, 17)
}


[new scheduled]:[NoNextStep(2, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdatePosition(2, 1, 17)]
[After]:{	NoNextStep(2, 1)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdatePosition(2, 1, 17)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a30[CTAH] going goal: 3,1 color: neco
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a10[CTAH] paths: 1000
Need to wait 4 more seconds
object notification: Time [clock=18, time=2015-06-03 16:24:57.899]
object notification: Time [clock=18, time=2015-06-03 16:24:57.899]
object notification: Time [clock=18, time=2015-06-03 16:24:57.899]
org notification: Time [clock=18, time=2015-06-03 16:24:57.899]
a40[CTAH] path: 0
a40[CTAH] path: Path: [1][2] [2][2]

a40[CTAH] moveStepToGoalTest returns I have chip: [2,2,no,no]
Event processed UpdateClock(17)
Event processed UpdateClock(18)
org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=1], time=2015-06-03 16:24:58.635, clock=18]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(17)
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, Clock)} else NextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(17), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(17)
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 16)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, 16)} else NextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 16)
		}
	else	{	NextStep(2, 2)
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[NextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	NextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=2, y=2], time=2015-06-03 16:24:59.046, clock=18]
object notification: Position [subject=a40, id=null, cell=Cell [x=2, y=2], time=2015-06-03 16:24:59.046, clock=18]
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][2] [3][1] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,1,1,717]
org notification: Proposal [id=717, agent=a10, agent2=a20, clock=18, time=2015-06-03 16:25:01.521]
Event processed UpdateClock(16)
Event processed UpdateClock(17)
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(not 717=no)
	then	{	NextStep(3, 1, 717);
			SentProposal(717, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(16)
},
{	UpdateClock(17)
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not 717=no) then {NextStep(3, 1, 717); SentProposal(717, 1, open, Clock)} else NextStep(3, 1), ReceivedResponse(accept, 7537), UpdateClock(16), UpdateClock(17), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not 717=no)
	then	{	NextStep(3, 1, 717);
			SentProposal(717, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	UpdateClock(16)
},
{	UpdateClock(17)
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(not 717=no)
	then	{	NextStep(3, 1, 717);
			SentProposal(717, 1, open, 15)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(not 717=no) then {NextStep(3, 1, 717); SentProposal(717, 1, open, 15)} else NextStep(3, 1), ReceivedResponse(accept, 7537)]
[After]:{	if	B(not 717=no)
	then	{	NextStep(3, 1, 717);
			SentProposal(717, 1, open, 15)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	NextStep(3, 1, 717);
	SentProposal(717, 1, open, 15)
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[NextStep(3, 1, 717); SentProposal(717, 1, open, 15), ReceivedResponse(accept, 7537)]
[After]:{	NextStep(3, 1, 717);
	SentProposal(717, 1, open, 15)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	SentProposal(717, 1, open, 15)
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[SentProposal(717, 1, open, 15), ReceivedResponse(accept, 7537)]
[After]:{	SentProposal(717, 1, open, 15)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][1] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:1)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,1,1,9828]
org notification: Proposal [id=9828, agent=a30, agent2=a20, clock=18, time=2015-06-03 16:25:02.472]
Event processed UpdateClock(18)
[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(clock(Clock));
	if	B(not 9828=no)
	then	{	NextStep(3, 1, 9828);
			SentProposal(9828, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not 9828=no) then {NextStep(3, 1, 9828); SentProposal(9828, 1, open, Clock)} else NextStep(3, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not 9828=no)
	then	{	NextStep(3, 1, 9828);
			SentProposal(9828, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(18)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(not 9828=no)
	then	{	NextStep(3, 1, 9828);
			SentProposal(9828, 1, open, 17)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(not 9828=no) then {NextStep(3, 1, 9828); SentProposal(9828, 1, open, 17)} else NextStep(3, 1), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(not 9828=no)
	then	{	NextStep(3, 1, 9828);
			SentProposal(9828, 1, open, 17)
		}
	else	{	NextStep(3, 1)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	NextStep(3, 1, 9828);
	SentProposal(9828, 1, open, 17)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[NextStep(3, 1, 9828); SentProposal(9828, 1, open, 17), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	NextStep(3, 1, 9828);
	SentProposal(9828, 1, open, 17)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	SentProposal(9828, 1, open, 17)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[SentProposal(9828, 1, open, 17), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	SentProposal(9828, 1, open, 17)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


a40[CTAH] moveStepToGoal returns: [2,2]
[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Event processed UpdatePosition(2, 2, 18)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(2, 2, 18)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 2, Clock); NoNextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdatePosition(2, 2, 18)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdatePosition(2, 2, 18)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	UpdatePosition(2, 2, 18);
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[UpdatePosition(2, 2, 18); NoNextStep(2, 2), ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	UpdatePosition(2, 2, 18);
	NoNextStep(2, 2)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=717, response=accepted, clock=18, time=2015-06-03 16:25:04.849]
Event processed @ctenv(functionToList(message(response, 717, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(message(response, 717, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537), @ctenv(functionToList(message(response, 717, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(message(response, 717, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5ce1efeb
[CTAH] The created APLList : [response,717,accept]
[Planbase]:{	ReceivedResponse(accept, 7537)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 717)
		}
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537), if B(response=response) then ReceivedResponse(accept, 717)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 717)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedResponse(accept, 717)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537), ReceivedResponse(accept, 717)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedResponse(accept, 717)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(3, 1, 717); ReceivedResponse(noresponse, 717)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(3, 1, 717);
			ReceivedResponse(noresponse, 717)
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 1),L2,0); if B(L2=[actionresult([3,1])]) then {B(clock(Clock)); UpdatePosition(3, 1, Clock)}; NoNextStep(3, 1, 717), ReceivedResponse(accept, 7537)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=1], time=2015-06-03 16:25:05.407, clock=18]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=1], time=2015-06-03 16:25:05.407, clock=18]
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=19, time=2015-06-03 16:25:07.901]
object notification: Time [clock=19, time=2015-06-03 16:25:07.901]
object notification: Time [clock=19, time=2015-06-03 16:25:07.901]
object notification: Time [clock=19, time=2015-06-03 16:25:07.901]
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(19)
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(19)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(19)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(19)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(19)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(19)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@61132b49
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@16b65fa1
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedEvent(phasechange)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), ReceivedEvent(phasechange)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedEvent(phasechange)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[update, B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	update
},
{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[update, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	update
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated, B(timetowait(Wait)); if B(19>17+Wait) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(timetowait(Wait));
	if	B(19>17+Wait)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, if B(19>17+7) then {NoNextStep(3, 1, 9828); ReceivedResponse(noresponse, 9828)}, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(19>17+7)
	then	{	NoNextStep(3, 1, 9828);
			ReceivedResponse(noresponse, 9828)
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[if B(event(phasechange)) then Updated, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[if B(event(phasechange)) then Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	Updated
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[Updated, ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	Updated
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	Updated
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[Updated, ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	Updated
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a10[CTAH] moveStepToGoal returns: [3,1]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Event processed UpdatePosition(3, 1, 18)
Event processed UpdateClock(19)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 1, 18)
},
{	UpdateClock(19)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 1, Clock); NoNextStep(3, 1, 717), ReceivedResponse(accept, 7537), UpdatePosition(3, 1, 18), UpdateClock(19), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	UpdatePosition(3, 1, 18)
},
{	UpdateClock(19)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4661d2f5
[CTAH] The created APLList : [phasechange]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	UpdatePosition(3, 1, 18);
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[UpdatePosition(3, 1, 18); NoNextStep(3, 1, 717), ReceivedResponse(accept, 7537), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	UpdatePosition(3, 1, 18);
	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[NoNextStep(3, 1, 717), ReceivedResponse(accept, 7537), ReceivedEvent(phasechange)]
[After]:{	NoNextStep(3, 1, 717)
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:3,C:1).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:2,C:2).
Chips: { chips  'blue':0 'white':1 'brown':0 'yellow':4 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:2,C:1).
Chips: { chips  'blue':9 'white':0 'brown':0 'yellow':1 }.
Score: 900.
Team: -1.

[Planbase]:{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[update, findNextStep(neco, 700), ReceivedResponse(accept, 7537)]
[After]:{	update
},
{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7537)
}


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6b97127
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@12325072
[CTAH] The created APLList : [game_ended]
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537), @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6c5ebf40
[CTAH] The created APLList : [game_ended]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537), if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedEvent(game_ended)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedEvent(game_ended)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=9828, response=accepted, clock=19, time=2015-06-03 16:25:10.111]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), ReceivedEvent(game_ended)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	ReceivedEvent(game_ended)
}


Event processed @ctenv(functionToList(message(response, 9828, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedEvent(game_ended)
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537), ReceivedEvent(game_ended)]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
},
{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 9828, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), @ctenv(functionToList(message(response, 9828, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	@ctenv(functionToList(message(response, 9828, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@23f5829c
[CTAH] The created APLList : [response,9828,accept]
[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9828)
		}
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), if B(response=response) then ReceivedResponse(accept, 9828)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9828)
		}
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[new scheduled]:[if B(event(phasechange)) then Updated, @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 7537)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 7537)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9828)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9828)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9828)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


a10[CTAH] going goal: 2,0 color: neco
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=20, time=2015-06-03 16:25:17.903]
object notification: Time [clock=20, time=2015-06-03 16:25:17.903]
object notification: Time [clock=20, time=2015-06-03 16:25:17.903]
object notification: Time [clock=20, time=2015-06-03 16:25:17.903]
Event processed UpdateClock(20)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(20)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(20)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(20)
}


Event processed UpdateClock(20)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(20)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(20)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(20)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=21, time=2015-06-03 16:25:27.906]
object notification: Time [clock=21, time=2015-06-03 16:25:27.906]
object notification: Time [clock=21, time=2015-06-03 16:25:27.906]
object notification: Time [clock=21, time=2015-06-03 16:25:27.906]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


Event processed UpdateClock(21)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(21)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(21)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(21)
}


Event processed UpdateClock(21)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(21)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(21)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(21)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=22, time=2015-06-03 16:25:37.91]
object notification: Time [clock=22, time=2015-06-03 16:25:37.91]
object notification: Time [clock=22, time=2015-06-03 16:25:37.91]
object notification: Time [clock=22, time=2015-06-03 16:25:37.91]
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(22)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(22)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(22)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(22)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(22)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(22)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=23, time=2015-06-03 16:25:48.099]
object notification: Time [clock=23, time=2015-06-03 16:25:48.099]
object notification: Time [clock=23, time=2015-06-03 16:25:48.099]
object notification: Time [clock=23, time=2015-06-03 16:25:48.099]
Event processed UpdateClock(23)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(23)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(23)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(23)
}


Event processed UpdateClock(23)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(23)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(23)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(23)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=24, time=2015-06-03 16:25:58.395]
object notification: Time [clock=24, time=2015-06-03 16:25:58.395]
object notification: Time [clock=24, time=2015-06-03 16:25:58.395]
object notification: Time [clock=24, time=2015-06-03 16:25:58.395]
Event processed UpdateClock(24)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(24)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(24)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(24)
}


Event processed UpdateClock(24)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(24)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(24)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(24)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=25, time=2015-06-03 16:26:08.413]
object notification: Time [clock=25, time=2015-06-03 16:26:08.413]
object notification: Time [clock=25, time=2015-06-03 16:26:08.413]
object notification: Time [clock=25, time=2015-06-03 16:26:08.413]
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(25)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(25)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(25)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(25)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(25)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(25)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


object notification: Time [clock=26, time=2015-06-03 16:26:18.447]
org notification: Time [clock=26, time=2015-06-03 16:26:18.447]
Event processed UpdateClock(26)
object notification: Time [clock=26, time=2015-06-03 16:26:18.447]
object notification: Time [clock=26, time=2015-06-03 16:26:18.447]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(26)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(26)]
Event processed UpdateClock(26)
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(26)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(26)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(26)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(26)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=27, time=2015-06-03 16:26:28.596]
object notification: Time [clock=27, time=2015-06-03 16:26:28.596]
object notification: Time [clock=27, time=2015-06-03 16:26:28.596]
object notification: Time [clock=27, time=2015-06-03 16:26:28.596]
object notification: Points [subject=a30, time=2015-06-03 16:26:29.025, clock=27, value=600, id=null]
object notification: Points [subject=a10, time=2015-06-03 16:26:29.023, clock=27, value=700, id=null]
Event processed UpdateClock(27)
Event processed UpdatePoints(600)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(27)
},
{	UpdatePoints(600)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(27), UpdatePoints(600)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(27)
},
{	UpdatePoints(600)
}


Event processed UpdateClock(27)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(27)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(27)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(27)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=28, time=2015-06-03 16:26:38.644]
object notification: Time [clock=28, time=2015-06-03 16:26:38.644]
object notification: Time [clock=28, time=2015-06-03 16:26:38.644]
object notification: Time [clock=28, time=2015-06-03 16:26:38.644]
Event processed UpdateClock(28)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(28)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(28)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(28)
}


Event processed UpdateClock(28)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(28)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(28)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(28)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=29, time=2015-06-03 16:26:48.889]
object notification: Time [clock=29, time=2015-06-03 16:26:48.889]
object notification: Time [clock=29, time=2015-06-03 16:26:48.889]
object notification: Time [clock=29, time=2015-06-03 16:26:48.889]
Event processed UpdateClock(29)
object notification: Points [subject=a10, time=2015-06-03 16:26:49.333, clock=29, value=350, id=null]
object notification: Points [subject=a30, time=2015-06-03 16:26:49.335, clock=29, value=250, id=null]
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(29)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(29)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(29)
}


Event processed UpdateClock(29)
Event processed UpdatePoints(250)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(29)
},
{	UpdatePoints(250)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(29), UpdatePoints(250)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(29)
},
{	UpdatePoints(250)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


org notification: Time [clock=30, time=2015-06-03 16:26:59.159]
object notification: Time [clock=30, time=2015-06-03 16:26:59.159]
object notification: Time [clock=30, time=2015-06-03 16:26:59.159]
object notification: Time [clock=30, time=2015-06-03 16:26:59.159]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(30)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(30)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(30)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(30)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(30)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(30)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=31, time=2015-06-03 16:27:09.466]
object notification: Time [clock=31, time=2015-06-03 16:27:09.466]
object notification: Time [clock=31, time=2015-06-03 16:27:09.466]
object notification: Time [clock=31, time=2015-06-03 16:27:09.466]
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(31)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(31)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(31)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(31)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(31)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(31)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


org notification: Time [clock=32, time=2015-06-03 16:27:19.885]
object notification: Time [clock=32, time=2015-06-03 16:27:19.885]
object notification: Time [clock=32, time=2015-06-03 16:27:19.885]
object notification: Time [clock=32, time=2015-06-03 16:27:19.885]
Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(32)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346), UpdateClock(32)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
},
{	UpdateClock(32)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(32)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350), UpdateClock(32)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
},
{	UpdateClock(32)
}


[Planbase]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[new scheduled]:[ReceivedResponse(accept, 9346), ReceivedResponse(accept, 9346)]
[After]:{	ReceivedResponse(accept, 9346)
},
{	ReceivedResponse(accept, 9346)
}


[Planbase]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


[new scheduled]:[ReceivedResponse(accept, 8350), ReceivedResponse(accept, 8350)]
[After]:{	ReceivedResponse(accept, 8350)
},
{	ReceivedResponse(accept, 8350)
}


