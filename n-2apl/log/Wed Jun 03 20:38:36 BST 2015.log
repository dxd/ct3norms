2015-06-03 20:38:42,537 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~20.38-gigaspaces-service-192.168.1.102-64710.log
-------------------------last log tuples start--------------------------------
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=1, time=2015-06-03 20:38:54.418]
object notification: Time [clock=1, time=2015-06-03 20:38:54.418]
object notification: Time [clock=1, time=2015-06-03 20:38:54.418]
object notification: Time [clock=1, time=2015-06-03 20:38:54.418]
object notification: Time [clock=2, time=2015-06-03 20:39:04.581]
object notification: Time [clock=2, time=2015-06-03 20:39:04.581]
org notification: Time [clock=2, time=2015-06-03 20:39:04.581]
object notification: Time [clock=2, time=2015-06-03 20:39:04.581]
#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(2)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@549f5742
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@dd1e765
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@5147164d
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 20:39:11.648, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 20:39:11.648, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 20:39:11.648, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 20:39:11.648, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 20:39:11.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 20:39:11.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 20:39:11.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 20:39:11.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 20:39:11.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 20:39:11.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 20:39:11.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 20:39:11.762, clock=0]
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(blue, 0, 2)
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 20:39:11.762, clock=0]
Event processed UpdateTile(yellow, 0, 3)
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 20:39:11.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 20:39:11.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 20:39:11.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 20:39:11.807, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 20:39:11.807, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 20:39:11.828, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 20:39:11.807, clock=0]
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 20:39:11.828, clock=0]
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 20:39:11.807, clock=0]
Event processed UpdateTile(yellow, 0, 0)
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 20:39:11.828, clock=0]
Event processed UpdateTile(brown, 0, 1)
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 20:39:11.838, clock=0]
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 20:39:11.828, clock=0]
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(brown, 0, 6)
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 20:39:11.838, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 20:39:11.838, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-03 20:39:11.892, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 20:39:11.894, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 20:39:11.838, clock=0]
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), UpdateTile(yellow, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
}


object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-03 20:39:11.892, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 20:39:11.897, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-03 20:39:11.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-03 20:39:11.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 20:39:11.894, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 20:39:11.927, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 20:39:11.894, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 20:39:11.897, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 20:39:11.894, clock=0]
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 20:39:11.897, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 20:39:11.897, clock=0]
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 20:39:11.927, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 20:39:11.93, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 20:39:11.927, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 20:39:11.927, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 20:39:11.93, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 20:39:11.949, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 20:39:11.93, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 20:39:11.961, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 20:39:11.93, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-03 20:39:11.973, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 20:39:11.949, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 20:39:11.949, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 20:39:11.949, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 20:39:11.961, clock=0]
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), UpdateTile(yellow, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(yellow, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(brown, 0, 6)]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2)]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
}


#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(brown, 1, 5)
[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 6), UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5)]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(brown, 2, 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(brown, 2, 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(brown, 2, 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [1,3]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(1, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(1, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(1, 3, C)
}


[CTAH] Agentposition: [6,3]
[CTAH] Agentposition: [2,4]
[Planbase]:{	B(clock(C));
	GetAgentPos(6, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 3, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(2, 4, C)]
[After]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[Planbase]:{	GetAgentPos(1, 3, 2)
}


[new scheduled]:[GetAgentPos(1, 3, 2)]
[After]:{	GetAgentPos(1, 3, 2)
}


[Planbase]:{	GetAgentPos(6, 3, 2)
}


[new scheduled]:[GetAgentPos(6, 3, 2)]
[After]:{	GetAgentPos(6, 3, 2)
}


[Planbase]:{	GetAgentPos(2, 4, 2)
}


[new scheduled]:[GetAgentPos(2, 4, 2)]
[After]:{	GetAgentPos(2, 4, 2)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-03 20:39:11.973, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 20:39:11.961, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-06-03 20:39:11.976, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateTile(blue, 1, 6)
[Planbase]:{	UpdateTile(blue, 1, 6)
}


[new scheduled]:[UpdateTile(blue, 1, 6)]
[After]:{	UpdateTile(blue, 1, 6)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-03 20:39:11.979, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-03 20:39:11.973, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-06-03 20:39:11.976, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 20:39:11.961, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-03 20:39:11.979, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 20:39:11.981, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-06-03 20:39:11.976, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 20:39:11.988, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 20:39:11.981, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 20:39:11.998, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 20:39:12.001, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 20:39:12.003, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 20:39:12.026, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 20:39:12.028, clock=0]
org notification: Goal [id=null, cell=Cell [x=2, y=1], agent=null, time=2015-06-03 20:39:12.237, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-06-03 20:39:14.586]
object notification: Time [clock=3, time=2015-06-03 20:39:14.586]
object notification: Time [clock=3, time=2015-06-03 20:39:14.586]
object notification: Time [clock=4, time=2015-06-03 20:39:24.588]
object notification: Time [clock=4, time=2015-06-03 20:39:24.588]
object notification: Time [clock=5, time=2015-06-03 20:39:34.591]
object notification: Time [clock=5, time=2015-06-03 20:39:34.591]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 20:39:11.988, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-03 20:39:11.979, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 20:39:11.998, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 20:39:11.981, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 20:39:12.001, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 20:39:12.003, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 20:39:12.038, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-03 20:39:11.973, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 20:39:11.988, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-06-03 20:39:11.976, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 20:39:11.998, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-03 20:39:11.979, clock=0]
org notification: Time [clock=3, time=2015-06-03 20:39:14.586]
org notification: Time [clock=4, time=2015-06-03 20:39:24.588]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 20:39:12.001, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 20:39:12.042, clock=0]
org notification: Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 20:39:12.299]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 20:39:11.981, clock=0]
org notification: Time [clock=5, time=2015-06-03 20:39:34.591]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 20:39:12.003, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 20:39:12.048, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 20:39:12.026, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 20:39:12.026, clock=0]
object notification: Time [clock=4, time=2015-06-03 20:39:24.588]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 20:39:11.988, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 20:39:12.028, clock=0]
object notification: Time [clock=5, time=2015-06-03 20:39:34.591]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 20:39:11.998, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 20:39:12.038, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-06-03 20:39:12.001, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 20:39:12.042, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 20:39:12.003, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 20:39:12.048, clock=0]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=5, time=2015-06-03 20:39:43.123]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 20:39:12.051, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-03 20:39:12.026, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 20:39:12.028, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 20:39:12.038, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 20:39:12.051, clock=0]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=5, time=2015-06-03 20:39:43.149]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 20:39:12.042, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 20:39:12.059, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-03 20:39:12.028, clock=0]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=5, time=2015-06-03 20:39:43.177]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 20:39:12.048, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 20:39:12.051, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 20:39:12.059, clock=0]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=5, time=2015-06-03 20:39:43.192]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 20:39:12.061, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 20:39:12.038, clock=0]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=5, time=2015-06-03 20:39:43.147]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 20:39:12.063, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 20:39:12.042, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 20:39:12.109, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 20:39:12.048, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 20:39:12.051, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(2, 1)], sanction=[reduce(g, 700)], deadline=26, time=2015-06-03 20:39:43.196, clock=5]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 20:39:12.111, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 20:39:12.061, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 20:39:12.113, clock=0]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=5, time=2015-06-03 20:39:43.184]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=blue, time=2015-06-03 20:39:12.116, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 20:39:12.059, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 20:39:12.059, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 20:39:12.063, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 20:39:12.061, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 20:39:12.118, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 20:39:12.109, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 20:39:12.063, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-03 20:39:12.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 20:39:12.111, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 20:39:12.109, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 20:39:12.123, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 20:39:12.113, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 20:39:12.125, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 20:39:12.111, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=blue, time=2015-06-03 20:39:12.116, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 20:39:12.128, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 20:39:12.113, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 20:39:12.118, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 20:39:12.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=blue, time=2015-06-03 20:39:12.116, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-03 20:39:12.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 20:39:12.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 20:39:12.123, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 20:39:12.155, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 20:39:12.125, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-06-03 20:39:12.158, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 20:39:12.128, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 20:39:12.118, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 20:39:12.16, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 20:39:12.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 20:39:12.162, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-03 20:39:12.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 20:39:12.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 20:39:12.165, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 20:39:12.123, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 20:39:12.155, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=blue, time=2015-06-03 20:39:12.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 20:39:12.125, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-06-03 20:39:12.158, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 20:39:12.169, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 20:39:12.128, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 20:39:12.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 20:39:12.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 20:39:12.16, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 20:39:12.155, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 20:39:12.162, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-06-03 20:39:12.158, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 20:39:12.165, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=blue, time=2015-06-03 20:39:12.167, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 20:39:12.061, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 20:39:12.16, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 20:39:12.169, clock=0]
Event processed UpdateTile(blue, 1, 6)
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 20:39:12.162, clock=0]
Event processed UpdateClock(3)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 20:39:12.165, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 20:39:12.063, clock=0]
Event processed UpdateClock(4)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=blue, time=2015-06-03 20:39:12.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 20:39:12.169, clock=0]
Event processed UpdateClock(5)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(brown, 2, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(brown, 2, 6)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 20:39:12.109, clock=0]
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 20:39:12.111, clock=0]
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(yellow, 4, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 20:39:12.113, clock=0]
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateTile(blue, 4, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=blue, time=2015-06-03 20:39:12.116, clock=0]
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(brown, 4, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 20:39:12.118, clock=0]
Event processed UpdateTile(blue, 4, 6)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(brown, 2, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-03 20:39:12.12, clock=0]
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(white, 2, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 20:39:12.123, clock=0]
Event processed UpdateClock(3)
Event processed UpdateTile(brown, 2, 4)
Event processed UpdateTile(blue, 2, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 20:39:12.125, clock=0]
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateClock(4)
Event processed UpdateTile(white, 5, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-03 20:39:12.128, clock=0]
Event processed UpdateClock(5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(yellow, 6, 0)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateClock(3)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateClock(4)
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateClock(5)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 20:39:12.151, clock=0]
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(brown, 6, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(brown, 2, 4)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(white, 4, 4)
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 20:39:12.153, clock=0]
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 20:39:12.155, clock=0]
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(blue, 4, 6)
Event processed UpdateTile(blue, 6, 5)
Event processed UpdateTile(white, 5, 0)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed UpdateTile(blue, 6, 6)
Event processed UpdateTile(white, 5, 1)
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-06-03 20:39:12.158, clock=0]
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(yellow, 4, 0)
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=brown, time=2015-06-03 20:39:12.16, clock=0]
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(brown, 4, 3)
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 20:39:12.162, clock=0]
Event processed adoptObligation(surround(2, 1), 26, reduce(g, 700))
Event processed UpdateTile(white, 4, 4)
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 20:39:12.165, clock=0]
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(blue, 4, 6)
Event processed UpdateTile(white, 5, 0)
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=blue, time=2015-06-03 20:39:12.167, clock=0]
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(blue, 5, 3)
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 20:39:12.169, clock=0]
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(yellow, 5, 4)
[Planbase]:{	UpdateTile(blue, 1, 6)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


[new scheduled]:[UpdateTile(blue, 1, 6), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateTile(brown, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateTile(brown, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(white, 3, 1), UpdateTile(white, 3, 2), UpdateTile(brown, 3, 3), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(yellow, 4, 0), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(blue, 4, 6), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(white, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(brown, 6, 2), UpdateTile(white, 6, 3), UpdateTile(white, 6, 4), UpdateTile(blue, 6, 5), UpdateTile(blue, 6, 6)]
[After]:{	UpdateTile(blue, 1, 6)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(yellow, 6, 0)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(yellow, 6, 0)
Event processed UpdateTile(brown, 6, 2)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(brown, 6, 2)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(blue, 6, 5)
Event processed UpdateTile(blue, 6, 5)
Event processed UpdateTile(blue, 6, 6)
Event processed UpdateTile(blue, 6, 6)
[Planbase]:{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateClock(3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


[new scheduled]:[UpdateTile(brown, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateClock(3), UpdateTile(brown, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(white, 3, 1), UpdateClock(4), UpdateClock(5), UpdateTile(white, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(yellow, 3, 4), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), UpdateTile(yellow, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(yellow, 4, 0), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(blue, 4, 6), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(white, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(brown, 6, 2), UpdateTile(white, 6, 3), UpdateTile(white, 6, 4), UpdateTile(blue, 6, 5), UpdateTile(blue, 6, 6)]
[After]:{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateClock(3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


[Planbase]:{	UpdateTile(white, 2, 1)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	adoptObligation(surround(2, 1), 26, reduce(g, 700))
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


[new scheduled]:[UpdateTile(white, 2, 1), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateTile(brown, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(white, 3, 1), UpdateTile(white, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), UpdateTile(yellow, 3, 6), UpdateTile(yellow, 4, 0), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(brown, 4, 3), adoptObligation(surround(2, 1), 26, reduce(g, 700)), UpdateTile(white, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(blue, 4, 6), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5), UpdateTile(white, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(brown, 6, 2), UpdateTile(white, 6, 3), UpdateTile(white, 6, 4), UpdateTile(blue, 6, 5), UpdateTile(blue, 6, 6)]
[After]:{	UpdateTile(white, 2, 1)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(yellow, 4, 0)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	adoptObligation(surround(2, 1), 26, reduce(g, 700))
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(blue, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(brown, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(blue, 6, 5)
},
{	UpdateTile(blue, 6, 6)
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 1, 700) : 3 Jun 2015 19:56:23 GMT, priority 10)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(2, 1, 700) : 3 Jun 2015 19:56:23 GMT, priority 10)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 1, 700) : 3 Jun 2015 19:56:23 GMT, priority 10)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(2, 1, 700) : 3 Jun 2015 19:56:23 GMT, priority 10
[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(2, 1); sendSouth(a10, 2, 1, 100); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Surround(2, 1);
	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 2, 1, 100); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 2, 1, 100);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0); sendWest(a20, 2, 1, 100); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 2, 0, 2, 1, 100),L,0);
	sendWest(a20, 2, 1, 100);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=0], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.32]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=0], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.32]
object notification: Obligation [subject=a10, obligation=[at(2, 0, a10)], sanction=[reduce(a10, 700)], deadline=23, time=2015-06-03 20:39:44.332, clock=5]
Event processed adoptObligation(at(2, 0, a10), 23, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 0, a10), 23, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0); sendEast(a30, 2, 1, 100); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptObligation(at(2, 0, a10), 23, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 1, 1, 2, 1, 100),L,0);
	sendEast(a30, 2, 1, 100);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 0, a10), 23, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=1], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.391]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=1], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.391]
[Planbase]:{	@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 0, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0); sendNorth(a40, 2, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptz(at(2, 0, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 3, 1, 2, 1, 100),L,0);
	sendNorth(a40, 2, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 0, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=1], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.474]
obligation to be adopted: at(2, 0, 700) : 3 Jun 2015 19:56:24 GMT, priority 10
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=1], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.474]
object notification: Obligation [subject=a30, obligation=[at(3, 1, a30)], sanction=[reduce(a30, 700)], deadline=23, time=2015-06-03 20:39:44.478, clock=5]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 2, 2, 2, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=2], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.568]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=2], goal=Cell [x=2, y=1], sanction=100, clock=5, time=2015-06-03 20:39:44.568]
Event processed adoptObligation(at(3, 1, a30), 23, reduce(a30, 700))
object notification: Obligation [subject=a40, obligation=[at(2, 2, a40)], sanction=[reduce(a40, 700)], deadline=23, time=2015-06-03 20:39:44.572, clock=5]
org notification: Time [clock=6, time=2015-06-03 20:39:44.596]
object notification: Time [clock=6, time=2015-06-03 20:39:44.596]
object notification: Time [clock=6, time=2015-06-03 20:39:44.596]
object notification: Time [clock=6, time=2015-06-03 20:39:44.596]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptObligation(at(3, 1, a30), 23, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(3, 1, a30), 23, reduce(a30, 700))]
[After]:{	adoptObligation(at(3, 1, a30), 23, reduce(a30, 700))
}


Event processed UpdateClock(6)
[Planbase]:{	color(white, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	UpdateClock(6)
}


[new scheduled]:[color(white, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), UpdateClock(6)]
[After]:{	color(white, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	UpdateClock(6)
}


Event processed adoptObligation(at(2, 2, a40), 23, reduce(a40, 700))
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	adoptObligation(at(2, 2, a40), 23, reduce(a40, 700))
},
{	UpdateClock(6)
}


[new scheduled]:[adoptObligation(at(2, 2, a40), 23, reduce(a40, 700)), UpdateClock(6)]
[After]:{	adoptObligation(at(2, 2, a40), 23, reduce(a40, 700))
},
{	UpdateClock(6)
}


[Planbase]:{	adoptz(at(3, 1, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
},
{	UpdateClock(6)
}


[new scheduled]:[adoptz(at(3, 1, 700) : 3 Jun 2015 19:56:24 GMT, priority 10), UpdateClock(6)]
[After]:{	adoptz(at(3, 1, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
},
{	UpdateClock(6)
}


obligation to be adopted: at(3, 1, 700) : 3 Jun 2015 19:56:24 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 2, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)]
[After]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-06-03 20:39:44.829, clock=6]
org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-06-03 20:39:44.829, clock=6]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=21, time=2015-06-03 20:39:44.847, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: at(2, 2, 700) : 3 Jun 2015 19:56:24 GMT, priority 10
Event processed adoptObligation(color(white, a10), 21, reduce(a10, 100))
[Planbase]:{	color(brown, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 100))
}


[new scheduled]:[color(brown, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 21, reduce(a10, 100))]
[After]:{	color(brown, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, brown, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, brown, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptz(useColor(white, 100) : 3 Jun 2015 19:56:24 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, brown, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 19:56:24 GMT, priority 10)
}


agent writes: Color [id=null, color=brown, agent=a20, type=yes, sanction=100, time=2015-06-03 20:39:45.03, clock=6]
obligation to be adopted: useColor(white, 100) : 3 Jun 2015 19:56:24 GMT, priority 10
org notification: Color [id=null, color=brown, agent=a20, type=yes, sanction=100, time=2015-06-03 20:39:45.03, clock=6]
[Planbase]:{	color(brown, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(brown, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(brown, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	color(brown, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, brown, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, brown, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(brown, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, brown, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=brown, agent=a30, type=yes, sanction=100, time=2015-06-03 20:39:45.176, clock=6]
org notification: Color [id=null, color=brown, agent=a30, type=yes, sanction=100, time=2015-06-03 20:39:45.176, clock=6]
object notification: Obligation [subject=a30, obligation=[color(brown, a30)], sanction=[reduce(a30, 100)], deadline=21, time=2015-06-03 20:39:45.18, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a40, yes, 100); color(white, a10, no, 100); color(brown, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(brown, a30), 21, reduce(a30, 100))
[Planbase]:{	adoptObligation(color(brown, a30), 21, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(brown, a30), 21, reduce(a30, 100))]
[After]:{	adoptObligation(color(brown, a30), 21, reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 100),L,0); color(white, a10, no, 100); color(brown, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(useColor(brown, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(brown, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)]
[After]:{	adoptz(useColor(brown, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 20:39:45.367, clock=6]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 20:39:45.367, clock=6]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=21, time=2015-06-03 20:39:45.371, clock=6]
obligation to be adopted: useColor(brown, 100) : 3 Jun 2015 19:56:25 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, no, 100),L,0); color(brown, a20, no, 100); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(brown, a20, no, 100);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(color(white, a40), 21, reduce(a40, 100))
agent writes: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 20:39:45.479, clock=6]
org notification: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 20:39:45.479, clock=6]
object notification: Prohibition [subject=a10, prohibition=[color(white, a10)], sanction=[reduce(a10, 100)], clock=6, time=2015-06-03 20:39:45.482]
[Planbase]:{	adoptObligation(color(white, a40), 21, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(white, a40), 21, reduce(a40, 100))]
[After]:{	adoptObligation(color(white, a40), 21, reduce(a40, 100))
}


Event processed adoptProhibition(color(white, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, brown, no, 100),L,0);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, brown, no, 100),L,0); color(brown, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), adoptProhibition(color(white, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, brown, no, 100),L,0);
	color(brown, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


[Planbase]:{	adoptz(useColor(white, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 3 Jun 2015 19:56:25 GMT, priority 10)
}


agent writes: Color [id=null, color=brown, agent=a20, type=no, sanction=100, time=2015-06-03 20:39:45.596, clock=6]
org notification: Color [id=null, color=brown, agent=a20, type=no, sanction=100, time=2015-06-03 20:39:45.596, clock=6]
obligation to be adopted: useColor(white, 100) : 3 Jun 2015 19:56:25 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, brown, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, brown, no, 100),L,0); color(white, a40, no, 100); dropgoal(surround(2, 1, 700) : Infinite, priority 10), AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, brown, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=brown, agent=a30, type=no, sanction=100, time=2015-06-03 20:39:45.695, clock=6]
org notification: Color [id=null, color=brown, agent=a30, type=no, sanction=100, time=2015-06-03 20:39:45.695, clock=6]
object notification: Prohibition [subject=a30, prohibition=[color(brown, a30)], sanction=[reduce(a30, 100)], clock=6, time=2015-06-03 20:39:45.699]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, white, no, 100),L,0); dropgoal(surround(2, 1, 700) : Infinite, priority 10), aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(2, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 20:39:45.797, clock=6]
org notification: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 20:39:45.797, clock=6]
Event processed adoptProhibition(color(brown, a30), reduce(a30, 100))
object notification: Prohibition [subject=a40, prohibition=[color(white, a40)], sanction=[reduce(a40, 100)], clock=6, time=2015-06-03 20:39:45.8]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptProhibition(color(brown, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(brown, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(brown, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(white, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(white, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[Planbase]:{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(brown, 100)); aprohibition(useColor(brown, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(brown, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-06-03 20:39:54.598]
object notification: Time [clock=7, time=2015-06-03 20:39:54.598]
object notification: Time [clock=7, time=2015-06-03 20:39:54.598]
object notification: Time [clock=7, time=2015-06-03 20:39:54.598]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 20:40:04.602]
org notification: Time [clock=8, time=2015-06-03 20:40:04.602]
object notification: Time [clock=8, time=2015-06-03 20:40:04.602]
object notification: Time [clock=8, time=2015-06-03 20:40:04.602]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-03 20:40:14.607]
object notification: Time [clock=9, time=2015-06-03 20:40:14.607]
org notification: Time [clock=9, time=2015-06-03 20:40:14.607]
object notification: Time [clock=9, time=2015-06-03 20:40:14.607]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@53b9c85c
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@7582aacf
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@5497d017
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	Updated
},
{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	Updated
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] going goal: 2,2 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a30[CTAH] going goal: 3,1 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] going goal: 2,0 color: neco
org notification: Time [clock=10, time=2015-06-03 20:40:24.611]
object notification: Time [clock=10, time=2015-06-03 20:40:24.611]
object notification: Time [clock=10, time=2015-06-03 20:40:24.611]
object notification: Time [clock=10, time=2015-06-03 20:40:24.611]
a30[CTAH] paths: 1000
Need to wait 2 more seconds
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][6] [3][5] [3][4] [3][3] [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,5,3,3324]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
Event processed UpdateClock(10)
org notification: Proposal [id=3324, agent=a30, agent2=a40, clock=10, time=2015-06-03 20:40:28.933]
object notification: Obligation [subject=a40, obligation=[respondToRequest(3324)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 20:40:28.954, clock=10]
[Planbase]:{	B(clock(Clock));
	if	B(not 3324=no)
	then	{	NextStep(3, 5, 3324);
			SentProposal(3324, 3, open, Clock)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 3324=no) then {NextStep(3, 5, 3324); SentProposal(3324, 3, open, Clock)} else NextStep(3, 5), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 3324=no)
	then	{	NextStep(3, 5, 3324);
			SentProposal(3324, 3, open, Clock)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not 3324=no)
	then	{	NextStep(3, 5, 3324);
			SentProposal(3324, 3, open, 9)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not 3324=no) then {NextStep(3, 5, 3324); SentProposal(3324, 3, open, 9)} else NextStep(3, 5), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not 3324=no)
	then	{	NextStep(3, 5, 3324);
			SentProposal(3324, 3, open, 9)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(3, 5, 3324);
	SentProposal(3324, 3, open, 9)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 5, 3324); SentProposal(3324, 3, open, 9), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NextStep(3, 5, 3324);
	SentProposal(3324, 3, open, 9)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(3324, 3, open, 9)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[SentProposal(3324, 3, open, 9), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	SentProposal(3324, 3, open, 9)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][2] [4][1] [4][0] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,1,2,2632]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=2632, agent=a10, agent2=a30, clock=10, time=2015-06-03 20:40:32.553]
object notification: Obligation [subject=a30, obligation=[respondToRequest(2632)], sanction=[reduce(a30, 300)], deadline=15, time=2015-06-03 20:40:32.558, clock=10]
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(proposal(proposal, 0, 2632, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(2632), 15, reduce(a30, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not 2632=no)
	then	{	NextStep(4, 1, 2632);
			SentProposal(2632, 2, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 2632=no) then {NextStep(4, 1, 2632); SentProposal(2632, 2, open, Clock)} else NextStep(4, 1), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 2632=no)
	then	{	NextStep(4, 1, 2632);
			SentProposal(2632, 2, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 2632, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2632), 15, reduce(a30, 300))
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(proposal(proposal, 0, 2632, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(2632), 15, reduce(a30, 300))]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 2632, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2632), 15, reduce(a30, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@323ca28
[CTAH] The created APLList : [proposal,0,2632,open]
[Planbase]:{	if	B(not 2632=no)
	then	{	NextStep(4, 1, 2632);
			SentProposal(2632, 2, open, 9)
		}
	else	{	NextStep(4, 1)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 2632=no) then {NextStep(4, 1, 2632); SentProposal(2632, 2, open, 9)} else NextStep(4, 1), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 2632=no)
	then	{	NextStep(4, 1, 2632);
			SentProposal(2632, 2, open, 9)
		}
	else	{	NextStep(4, 1)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2632, 300) : 3 Jun 2015 19:57:12 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(2632, 300) : 3 Jun 2015 19:57:12 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2632, 300) : 3 Jun 2015 19:57:12 GMT, priority 10)
}


obligation to be adopted: respondToRequest(2632, 300) : 3 Jun 2015 19:57:12 GMT, priority 10
[Planbase]:{	NextStep(4, 1, 2632);
	SentProposal(2632, 2, open, 9)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(4, 1, 2632); SentProposal(2632, 2, open, 9), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(4, 1, 2632);
	SentProposal(2632, 2, open, 9)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,2632,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(2632, 2, open, 9)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(2632, 2, open, 9), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(2632, 2, open, 9)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 2632, open)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(proposal=proposal) then ReceivedProposal(0, 2632, open)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 2632, open)
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedProposal(0, 2632, open)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedProposal(0, 2632, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedProposal(0, 2632, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(2632, 300)) then skip else if B(not scoreAfterExchange(2632, Score)) then getScoreAfterExchange(2632); B(scoreAfterExchange(2632, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if G(acceptRequest(2632, V2)) then skip else if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2632, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2632, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 2632, closed(A)))
							then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	G(acceptRequest(2632, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(2632, Score))
			then	{	getScoreAfterExchange(2632)
				}
		};
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(not scoreAfterExchange(2632, Score))
	then	{	getScoreAfterExchange(2632)
		};
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(not scoreAfterExchange(2632, Score)) then getScoreAfterExchange(2632); B(scoreAfterExchange(2632, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(not scoreAfterExchange(2632, Score))
	then	{	getScoreAfterExchange(2632)
		};
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(2632);
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, getScoreAfterExchange(2632); B(scoreAfterExchange(2632, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(2632);
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	GetScoreAfterExchange(2632, yes);
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(2632, V2)) then skip else if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, GetScoreAfterExchange(2632, yes); B(scoreAfterExchange(2632, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2632, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2632, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 2632, closed(A)))
							then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	GetScoreAfterExchange(2632, yes);
	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, B(scoreAfterExchange(2632, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	B(scoreAfterExchange(2632, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2632, Answer), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, Answer)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(2632, V2)) then skip else if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(2632, accept), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2632, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2632, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 2632, closed(A)))
							then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	B(accept=accept);
	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, B(accept=accept); sendResponse(2632, accept), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	B(accept=accept);
	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [3][1] [2][1] [2][2]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:2,C:1)
a40[CTAH] moveStepToGoalTest sent proposal for: [2,1,0,8185]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8185, agent=a40, agent2=a10, clock=10, time=2015-06-03 20:40:33.639]
[Planbase]:{	skip
},
{	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, sendResponse(2632, accept), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	sendResponse(2632, accept)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


object notification: Obligation [subject=a10, obligation=[respondToRequest(8185)], sanction=[reduce(a10, 300)], deadline=15, time=2015-06-03 20:40:33.643, clock=10]
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(proposal(proposal, 2, 3324, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3324), 15, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 3, 8185, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(8185), 15, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not 8185=no)
	then	{	NextStep(2, 1, 8185);
			SentProposal(8185, 0, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 2, 3324, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3324), 15, reduce(a40, 300))
}


[new scheduled]:[B(clock(Clock)); if B(not 8185=no) then {NextStep(2, 1, 8185); SentProposal(8185, 0, open, Clock)} else NextStep(2, 1), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(10), @ctenv(functionToList(proposal(proposal, 2, 3324, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3324), 15, reduce(a40, 300))]
[After]:{	B(clock(Clock));
	if	B(not 8185=no)
	then	{	NextStep(2, 1, 8185);
			SentProposal(8185, 0, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 2, 3324, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3324), 15, reduce(a40, 300))
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8185, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8185), 15, reduce(a10, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 3, 8185, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(8185), 15, reduce(a10, 300))]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8185, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8185), 15, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4be7c5ce
[CTAH] The created APLList : [proposal,2,3324,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	@ctenv(sendResponse(2632, accept),L1,0);
	SentResponse(accept, 2632)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(2632, V2)) then skip else if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, @ctenv(sendResponse(2632, accept),L1,0); SentResponse(accept, 2632), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2632, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2632, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 2632, closed(A)))
							then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	@ctenv(sendResponse(2632, accept),L1,0);
	SentResponse(accept, 2632)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@555ea43f
[CTAH] The created APLList : [proposal,3,8185,open]
a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 0.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=2632, response=accepted, clock=10, time=2015-06-03 20:40:33.802]
Event processed @ctenv(functionToList(message(response, 2632, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(not 8185=no)
	then	{	NextStep(2, 1, 8185);
			SentProposal(8185, 0, open, 9)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3324, 300) : 3 Jun 2015 19:57:13 GMT, priority 10)
}


[new scheduled]:[if B(not 8185=no) then {NextStep(2, 1, 8185); SentProposal(8185, 0, open, 9)} else NextStep(2, 1), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3324, 300) : 3 Jun 2015 19:57:13 GMT, priority 10)]
[After]:{	if	B(not 8185=no)
	then	{	NextStep(2, 1, 8185);
			SentProposal(8185, 0, open, 9)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3324, 300) : 3 Jun 2015 19:57:13 GMT, priority 10)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8185, 300) : 3 Jun 2015 19:57:13 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 2632, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8185, 300) : 3 Jun 2015 19:57:13 GMT, priority 10), @ctenv(functionToList(message(response, 2632, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8185, 300) : 3 Jun 2015 19:57:13 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 2632, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(2632, V2)) then skip else if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(respondToRequest(2632, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2632, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 2632, closed(A)))
					then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


obligation to be adopted: respondToRequest(3324, 300) : 3 Jun 2015 19:57:13 GMT, priority 10
[CTAH] Array of Terms: [Lapapl.data.Term;@e9bdbed
[CTAH] The created APLList : [response,2632,accept]
obligation to be adopted: respondToRequest(8185, 300) : 3 Jun 2015 19:57:13 GMT, priority 10
[Planbase]:{	NextStep(2, 1, 8185);
	SentProposal(8185, 0, open, 9)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(2, 1, 8185); SentProposal(8185, 0, open, 9), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(2, 1, 8185);
	SentProposal(8185, 0, open, 9)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3324,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2632)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B(response=response) then ReceivedResponse(accept, 2632)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,3,8185,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2632)
		}
}


[Planbase]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 2632, closed(A)))
			then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(2632, V2)) then skip else if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(acceptRequest(2632, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 2632, closed(A)))
			then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(8185, 0, open, 9)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3324, open)
		}
}


[new scheduled]:[SentProposal(8185, 0, open, 9), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(2, 3324, open)]
[After]:{	SentProposal(8185, 0, open, 9)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3324, open)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8185, open)
		}
},
{	ReceivedResponse(accept, 2632)
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(3, 8185, open), ReceivedResponse(accept, 2632)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8185, open)
		}
},
{	ReceivedResponse(accept, 2632)
}


[Planbase]:{	if	B(not receivedP(0, 2632, closed(A)))
	then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(0, 2632, closed(A))) then adoptz(respondToRequest(2632, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not receivedP(0, 2632, closed(A)))
	then	{	adoptz(respondToRequest(2632, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 3324, open)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(2, 3324, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 3324, open)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(3, 8185, open)
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 1, 2632); ReceivedResponse(noresponse, 2632)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(3, 8185, open)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 1, 2632);
			ReceivedResponse(noresponse, 2632)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(3, 8185, open)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3324, 300)) then skip else if B(not scoreAfterExchange(3324, Score)) then getScoreAfterExchange(3324); B(scoreAfterExchange(3324, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if G(acceptRequest(3324, V2)) then skip else if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3324, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3324, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3324, closed(A)))
							then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	G(acceptRequest(3324, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3324, Score))
			then	{	getScoreAfterExchange(3324)
				}
		};
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8185, 300)) then skip else if B(not scoreAfterExchange(8185, Score)) then getScoreAfterExchange(8185); B(scoreAfterExchange(8185, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if G(acceptRequest(8185, V2)) then skip else if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8185, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8185, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 8185, closed(A)))
							then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	G(acceptRequest(8185, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(8185, Score))
			then	{	getScoreAfterExchange(8185)
				}
		};
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(not scoreAfterExchange(3324, Score))
	then	{	getScoreAfterExchange(3324)
		};
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(not scoreAfterExchange(3324, Score)) then getScoreAfterExchange(3324); B(scoreAfterExchange(3324, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(not scoreAfterExchange(3324, Score))
	then	{	getScoreAfterExchange(3324)
		};
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1, 2632)
},
{	if	B(not scoreAfterExchange(8185, Score))
	then	{	getScoreAfterExchange(8185)
		};
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 4, 1),L2,0); if B(L2=[actionresult([4,1])]) then {B(clock(Clock)); UpdatePosition(4, 1, Clock)}; NoNextStep(4, 1, 2632), if B(not scoreAfterExchange(8185, Score)) then getScoreAfterExchange(8185); B(scoreAfterExchange(8185, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1, 2632)
},
{	if	B(not scoreAfterExchange(8185, Score))
	then	{	getScoreAfterExchange(8185)
		};
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(3324);
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, getScoreAfterExchange(3324); B(scoreAfterExchange(3324, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(3324);
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-03 20:40:34.531, clock=10]
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-03 20:40:34.531, clock=10]
object notification: Obligation [subject=a10, obligation=[makeMove(4, 1, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-03 20:40:34.556, clock=10]
Event processed UpdatePosition(4, 1, 10)
Event processed adoptObligation(makeMove(4, 1, a10), 25, reduce(a10, 300))
org notification: Time [clock=11, time=2015-06-03 20:40:34.614]
object notification: Time [clock=11, time=2015-06-03 20:40:34.614]
object notification: Time [clock=11, time=2015-06-03 20:40:34.614]
object notification: Time [clock=11, time=2015-06-03 20:40:34.614]
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	NoNextStep(4, 1, 2632)
},
{	getScoreAfterExchange(8185);
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 1, 10)
},
{	adoptObligation(makeMove(4, 1, a10), 25, reduce(a10, 300))
}


[new scheduled]:[skip, NoNextStep(4, 1, 2632), getScoreAfterExchange(8185); B(scoreAfterExchange(8185, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(4, 1, 10), adoptObligation(makeMove(4, 1, a10), 25, reduce(a10, 300))]
[After]:{	skip
},
{	NoNextStep(4, 1, 2632)
},
{	getScoreAfterExchange(8185);
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 1, 10)
},
{	adoptObligation(makeMove(4, 1, a10), 25, reduce(a10, 300))
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	GetScoreAfterExchange(3324, yes);
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3324, V2)) then skip else if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, GetScoreAfterExchange(3324, yes); B(scoreAfterExchange(3324, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3324, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3324, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3324, closed(A)))
							then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	GetScoreAfterExchange(3324, yes);
	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(11)
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(11)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	GetScoreAfterExchange(8185, yes);
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(4, 1, 300) : 3 Jun 2015 19:57:14 GMT, priority 10)
},
{	UpdateClock(11)
}


[new scheduled]:[if G(acceptRequest(8185, V2)) then skip else if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), findNextStep(neco, 700), GetScoreAfterExchange(8185, yes); B(scoreAfterExchange(8185, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), adoptz(makeMove(4, 1, 300) : 3 Jun 2015 19:57:14 GMT, priority 10), UpdateClock(11)]
[After]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8185, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8185, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 8185, closed(A)))
							then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(8185, yes);
	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(4, 1, 300) : 3 Jun 2015 19:57:14 GMT, priority 10)
},
{	UpdateClock(11)
}


[Planbase]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), if B(10>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, B(scoreAfterExchange(3324, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(11)]
[After]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(10>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(scoreAfterExchange(3324, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


obligation to be adopted: makeMove(4, 1, 300) : 3 Jun 2015 19:57:14 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(8185, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(8185, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3324, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8185, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3324, V2)) then skip else if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3324, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3324, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3324, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3324, closed(A)))
							then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8185, V2)) then skip else if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8185, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8185, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8185, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 8185, closed(A)))
							then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(accept=accept);
	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, B(accept=accept); sendResponse(3324, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(accept=accept);
	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(8185, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, sendResponse(3324, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	sendResponse(3324, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, sendResponse(8185, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(8185, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	@ctenv(sendResponse(3324, accept),L1,0);
	SentResponse(accept, 3324)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3324, V2)) then skip else if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, @ctenv(sendResponse(3324, accept),L1,0); SentResponse(accept, 3324), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3324, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3324, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3324, closed(A)))
							then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	@ctenv(sendResponse(3324, accept),L1,0);
	SentResponse(accept, 3324)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a10[CTAH] going goal: 2,0 color: neco
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3324, response=accepted, clock=11, time=2015-06-03 20:40:35.698]
Event processed @ctenv(functionToList(message(response, 3324, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3324, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(message(response, 3324, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3324, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@734cce74
[CTAH] The created APLList : [response,3324,accept]
[Planbase]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(3324, V2)) then skip else if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(3324, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3324, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3324, closed(A)))
					then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3324)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(response=response) then ReceivedResponse(accept, 3324)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3324)
		}
}


[Planbase]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3324, closed(A)))
			then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(3324, V2)) then skip else if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(3324, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3324, closed(A)))
			then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 3324)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 3324)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 3324)
}


[Planbase]:{	if	B(not receivedP(2, 3324, closed(A)))
	then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 3324, closed(A))) then adoptz(respondToRequest(3324, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(2, 3324, closed(A)))
	then	{	adoptz(respondToRequest(3324, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(3, 5, 3324); ReceivedResponse(noresponse, 3324)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(3, 5, 3324);
			ReceivedResponse(noresponse, 3324)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 5),L2,0);
	if	B(L2=[actionresult([3,5])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 5, Clock)
		};
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 5),L2,0); if B(L2=[actionresult([3,5])]) then {B(clock(Clock)); UpdatePosition(3, 5, Clock)}; NoNextStep(3, 5, 3324), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 5),L2,0);
	if	B(L2=[actionresult([3,5])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 5, Clock)
		};
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Need to wait 3 more seconds
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=5], time=2015-06-03 20:40:36.261, clock=11]
object notification: Obligation [subject=a30, obligation=[makeMove(3, 5, a30)], sanction=[reduce(a30, 300)], deadline=26, time=2015-06-03 20:40:36.281, clock=11]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=5], time=2015-06-03 20:40:36.261, clock=11]
[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [3,5]
[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed adoptObligation(makeMove(3, 5, a30), 26, reduce(a30, 300))
Event processed UpdatePosition(3, 5, 11)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 5, Clock);
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptObligation(makeMove(3, 5, a30), 26, reduce(a30, 300))
},
{	UpdatePosition(3, 5, 11)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 5, Clock); NoNextStep(3, 5, 3324), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), adoptObligation(makeMove(3, 5, a30), 26, reduce(a30, 300)), UpdatePosition(3, 5, 11)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 5, Clock);
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptObligation(makeMove(3, 5, a30), 26, reduce(a30, 300))
},
{	UpdatePosition(3, 5, 11)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(3, 5, 11);
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptz(makeMove(3, 5, 300) : 3 Jun 2015 19:57:19 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(3, 5, 11); NoNextStep(3, 5, 3324), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), adoptz(makeMove(3, 5, 300) : 3 Jun 2015 19:57:19 GMT, priority 10)]
[After]:{	UpdatePosition(3, 5, 11);
	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptz(makeMove(3, 5, 300) : 3 Jun 2015 19:57:19 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 5, 300) : 3 Jun 2015 19:57:19 GMT, priority 10
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NoNextStep(3, 5, 3324), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NoNextStep(3, 5, 3324)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] going goal: 3,1 color: neco
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=12, time=2015-06-03 20:40:44.616]
object notification: Time [clock=12, time=2015-06-03 20:40:44.616]
object notification: Time [clock=12, time=2015-06-03 20:40:44.616]
object notification: Time [clock=12, time=2015-06-03 20:40:44.616]
[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(12)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [3][5] [3][4] [3][3] [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,4,3,8211]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=8211, agent=a30, agent2=a40, clock=12, time=2015-06-03 20:40:49.703]
object notification: Obligation [subject=a40, obligation=[respondToRequest(8211)], sanction=[reduce(a40, 300)], deadline=17, time=2015-06-03 20:40:49.71, clock=12]
Event processed @ctenv(functionToList(proposal(proposal, 2, 8211, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(8211), 17, reduce(a40, 300))
Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 8211, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8211), 17, reduce(a40, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 2, 8211, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(8211), 17, reduce(a40, 300))]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 8211, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8211), 17, reduce(a40, 300))
}


[Planbase]:{	B(clock(Clock));
	if	B(not 8211=no)
	then	{	NextStep(3, 4, 8211);
			SentProposal(8211, 3, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not 8211=no) then {NextStep(3, 4, 8211); SentProposal(8211, 3, open, Clock)} else NextStep(3, 4), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not 8211=no)
	then	{	NextStep(3, 4, 8211);
			SentProposal(8211, 3, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(12)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5003bf83
[CTAH] The created APLList : [proposal,2,8211,open]
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8211, 300) : 3 Jun 2015 19:57:29 GMT, priority 10)
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8211, 300) : 3 Jun 2015 19:57:29 GMT, priority 10)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8211, 300) : 3 Jun 2015 19:57:29 GMT, priority 10)
}


obligation to be adopted: respondToRequest(8211, 300) : 3 Jun 2015 19:57:29 GMT, priority 10
[Planbase]:{	if	B(not 8211=no)
	then	{	NextStep(3, 4, 8211);
			SentProposal(8211, 3, open, 11)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not 8211=no) then {NextStep(3, 4, 8211); SentProposal(8211, 3, open, 11)} else NextStep(3, 4), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not 8211=no)
	then	{	NextStep(3, 4, 8211);
			SentProposal(8211, 3, open, 11)
		}
	else	{	NextStep(3, 4)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,8211,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	NextStep(3, 4, 8211);
	SentProposal(8211, 3, open, 11)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 4, 8211); SentProposal(8211, 3, open, 11), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NextStep(3, 4, 8211);
	SentProposal(8211, 3, open, 11)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 8211, open)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(2, 8211, open)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 8211, open)
		}
}


[Planbase]:{	SentProposal(8211, 3, open, 11)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[SentProposal(8211, 3, open, 11), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	SentProposal(8211, 3, open, 11)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 8211, open)
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(2, 8211, open)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 8211, open)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8211, 300)) then skip else if B(not scoreAfterExchange(8211, Score)) then getScoreAfterExchange(8211); B(scoreAfterExchange(8211, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if G(acceptRequest(8211, V2)) then skip else if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8211, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8211, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 8211, closed(A)))
							then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	G(acceptRequest(8211, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(8211, Score))
			then	{	getScoreAfterExchange(8211)
				}
		};
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(not scoreAfterExchange(8211, Score))
	then	{	getScoreAfterExchange(8211)
		};
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(not scoreAfterExchange(8211, Score)) then getScoreAfterExchange(8211); B(scoreAfterExchange(8211, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(not scoreAfterExchange(8211, Score))
	then	{	getScoreAfterExchange(8211)
		};
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	getScoreAfterExchange(8211);
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, getScoreAfterExchange(8211); B(scoreAfterExchange(8211, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	getScoreAfterExchange(8211);
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(8211, yes);
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8211, V2)) then skip else if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), findNextStep(neco, 700), GetScoreAfterExchange(8211, yes); B(scoreAfterExchange(8211, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8211, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8211, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 8211, closed(A)))
							then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(8211, yes);
	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, B(scoreAfterExchange(8211, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(scoreAfterExchange(8211, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8211, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8211, V2)) then skip else if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), findNextStep(neco, 700), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8211, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8211, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8211, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 8211, closed(A)))
							then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(accept=accept);
	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, B(accept=accept); sendResponse(8211, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	B(accept=accept);
	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, sendResponse(8211, accept), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	sendResponse(8211, accept)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(8211, accept),L1,0);
	SentResponse(accept, 8211)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8211, V2)) then skip else if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), findNextStep(neco, 700), @ctenv(sendResponse(8211, accept),L1,0); SentResponse(accept, 8211), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8211, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8211, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 8211, closed(A)))
							then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	@ctenv(sendResponse(8211, accept),L1,0);
	SentResponse(accept, 8211)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

org notification: Response [id=8211, response=accepted, clock=12, time=2015-06-03 20:40:50.889]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8211, V2)) then skip else if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8211, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8211, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 8211, closed(A)))
					then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 8211, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8211, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(message(response, 8211, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8211, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 8211, closed(A)))
			then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8211, V2)) then skip else if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8211, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 8211, closed(A)))
			then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@10d3cc5
[CTAH] The created APLList : [response,8211,accept]
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8211)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(response=response) then ReceivedResponse(accept, 8211)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8211)
		}
}


[Planbase]:{	if	B(not receivedP(2, 8211, closed(A)))
	then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(2, 8211, closed(A))) then adoptz(respondToRequest(8211, 50) : Infinite, priority 10), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(2, 8211, closed(A)))
	then	{	adoptz(respondToRequest(8211, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8211)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8211)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8211)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 4, 8211); ReceivedResponse(noresponse, 8211)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 4, 8211);
			ReceivedResponse(noresponse, 8211)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 4),L2,0); if B(L2=[actionresult([3,4])]) then {B(clock(Clock)); UpdatePosition(3, 4, Clock)}; NoNextStep(3, 4, 8211), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Need to wait 2 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=4], time=2015-06-03 20:40:51.376, clock=12]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=4], time=2015-06-03 20:40:51.376, clock=12]
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][1] [4][0] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:0)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,0,3,4284]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=4284, agent=a10, agent2=a40, clock=12, time=2015-06-03 20:40:53.238]
[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


object notification: Obligation [subject=a40, obligation=[respondToRequest(4284)], sanction=[reduce(a40, 300)], deadline=17, time=2015-06-03 20:40:53.243, clock=12]
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not 4284=no)
	then	{	NextStep(4, 0, 4284);
			SentProposal(4284, 3, open, Clock)
		}
	else	{	NextStep(4, 0)
		}
},
{	@ctenv(sendResponse(8185, accept),L1,0);
	SentResponse(accept, 8185)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[if G(acceptRequest(8185, V2)) then skip else if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), B(clock(Clock)); if B(not 4284=no) then {NextStep(4, 0, 4284); SentProposal(4284, 3, open, Clock)} else NextStep(4, 0), @ctenv(sendResponse(8185, accept),L1,0); SentResponse(accept, 8185), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(12)]
[After]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8185, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8185, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 8185, closed(A)))
							then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(clock(Clock));
	if	B(not 4284=no)
	then	{	NextStep(4, 0, 4284);
			SentProposal(4284, 3, open, Clock)
		}
	else	{	NextStep(4, 0)
		}
},
{	@ctenv(sendResponse(8185, accept),L1,0);
	SentResponse(accept, 8185)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 4284, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(4284), 17, reduce(a40, 300))
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=8185, response=accepted, clock=12, time=2015-06-03 20:40:53.319]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 4284, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4284), 17, reduce(a40, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 0, 4284, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(4284), 17, reduce(a40, 300))]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 4284, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4284), 17, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@326cc610
[CTAH] The created APLList : [proposal,0,4284,open]
a30[CTAH] moveStepToGoal returns: [3,4]
[Planbase]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not 4284=no)
	then	{	NextStep(4, 0, 4284);
			SentProposal(4284, 3, open, 11)
		}
	else	{	NextStep(4, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8185, V2)) then skip else if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), if B(not 4284=no) then {NextStep(4, 0, 4284); SentProposal(4284, 3, open, 11)} else NextStep(4, 0), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8185, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8185, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 8185, closed(A)))
					then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not 4284=no)
	then	{	NextStep(4, 0, 4284);
			SentProposal(4284, 3, open, 11)
		}
	else	{	NextStep(4, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 8185, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdatePosition(3, 4, 12)
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4284, 300) : 3 Jun 2015 19:57:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 8185, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(4284, 300) : 3 Jun 2015 19:57:33 GMT, priority 10), @ctenv(functionToList(message(response, 8185, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4284, 300) : 3 Jun 2015 19:57:33 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 8185, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdatePosition(3, 4, 12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 4, Clock); NoNextStep(3, 4, 8211), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdatePosition(3, 4, 12)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdatePosition(3, 4, 12)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@f7f68c
[CTAH] The created APLList : [response,8185,accept]
obligation to be adopted: respondToRequest(4284, 300) : 3 Jun 2015 19:57:33 GMT, priority 10
[Planbase]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 8185, closed(A)))
			then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
				}
		}
},
{	NextStep(4, 0, 4284);
	SentProposal(4284, 3, open, 11)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8185, V2)) then skip else if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), NextStep(4, 0, 4284); SentProposal(4284, 3, open, 11), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(8185, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 8185, closed(A)))
			then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
				}
		}
},
{	NextStep(4, 0, 4284);
	SentProposal(4284, 3, open, 11)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8185)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B(response=response) then ReceivedResponse(accept, 8185)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,0,4284,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8185)
		}
}


[Planbase]:{	UpdatePosition(3, 4, 12);
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(3, 4, 12); NoNextStep(3, 4, 8211), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	UpdatePosition(3, 4, 12);
	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(3, 8185, closed(A)))
	then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
		}
},
{	SentProposal(4284, 3, open, 11)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(3, 8185, closed(A))) then adoptz(respondToRequest(8185, 50) : Infinite, priority 10), SentProposal(4284, 3, open, 11), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(3, 8185, closed(A)))
	then	{	adoptz(respondToRequest(8185, 50) : Infinite, priority 10)
		}
},
{	SentProposal(4284, 3, open, 11)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4284, open)
		}
},
{	ReceivedResponse(accept, 8185)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(0, 4284, open), ReceivedResponse(accept, 8185)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4284, open)
		}
},
{	ReceivedResponse(accept, 8185)
}


[Planbase]:{	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NoNextStep(3, 4, 8211), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NoNextStep(3, 4, 8211)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(0, 4284, open)
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(2, 1, 8185); ReceivedResponse(noresponse, 8185)}, if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(0, 4284, open)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(2, 1, 8185);
			ReceivedResponse(noresponse, 8185)
		}
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(0, 4284, open)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(4284, 300)) then skip else if B(not scoreAfterExchange(4284, Score)) then getScoreAfterExchange(4284); B(scoreAfterExchange(4284, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer), if G(acceptRequest(4284, V2)) then skip else if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), findNextStep(neco, 700), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4284, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4284, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 4284, closed(A)))
							then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	G(acceptRequest(4284, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(4284, Score))
			then	{	getScoreAfterExchange(4284)
				}
		};
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1, 8185)
},
{	if	B(not scoreAfterExchange(4284, Score))
	then	{	getScoreAfterExchange(4284)
		};
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1, 8185), if B(not scoreAfterExchange(4284, Score)) then getScoreAfterExchange(4284); B(scoreAfterExchange(4284, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1, 8185)
},
{	if	B(not scoreAfterExchange(4284, Score))
	then	{	getScoreAfterExchange(4284)
		};
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=2, y=1], time=2015-06-03 20:40:54.006, clock=12]
object notification: Obligation [subject=a40, obligation=[makeMove(2, 1, a40)], sanction=[reduce(a40, 300)], deadline=27, time=2015-06-03 20:40:54.014, clock=12]
object notification: Position [subject=a40, id=null, cell=Cell [x=2, y=1], time=2015-06-03 20:40:54.006, clock=12]
object notification: Points [subject=a40, time=2015-06-03 20:40:54.03, clock=12, value=900, id=null]
[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a30[CTAH] going goal: 3,1 color: neco
[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=13, time=2015-06-03 20:40:54.62]
object notification: Time [clock=13, time=2015-06-03 20:40:54.62]
object notification: Time [clock=13, time=2015-06-03 20:40:54.62]
object notification: Time [clock=13, time=2015-06-03 20:40:54.62]
[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(13)
[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(13)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [2,1]
Event processed adoptObligation(makeMove(2, 1, a40), 27, reduce(a40, 300))
Event processed UpdatePosition(2, 1, 12)
Event processed UpdatePoints(900)
Event processed UpdateClock(13)
[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1, 8185)
},
{	getScoreAfterExchange(4284);
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptObligation(makeMove(2, 1, a40), 27, reduce(a40, 300))
},
{	UpdatePosition(2, 1, 12)
},
{	UpdatePoints(900)
},
{	UpdateClock(13)
}


[new scheduled]:[skip, B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1, 8185), getScoreAfterExchange(4284); B(scoreAfterExchange(4284, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), adoptObligation(makeMove(2, 1, a40), 27, reduce(a40, 300)), UpdatePosition(2, 1, 12), UpdatePoints(900), UpdateClock(13)]
[After]:{	skip
},
{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1, 8185)
},
{	getScoreAfterExchange(4284);
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptObligation(makeMove(2, 1, a40), 27, reduce(a40, 300))
},
{	UpdatePosition(2, 1, 12)
},
{	UpdatePoints(900)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(2, 1, 12);
	NoNextStep(2, 1, 8185)
},
{	GetScoreAfterExchange(4284, yes);
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(2, 1, 300) : 3 Jun 2015 19:57:37 GMT, priority 10)
}


[new scheduled]:[if G(acceptRequest(4284, V2)) then skip else if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), UpdatePosition(2, 1, 12); NoNextStep(2, 1, 8185), GetScoreAfterExchange(4284, yes); B(scoreAfterExchange(4284, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer), if B(tile(white, 1, 3)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), adoptz(makeMove(2, 1, 300) : 3 Jun 2015 19:57:37 GMT, priority 10)]
[After]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4284, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4284, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 4284, closed(A)))
							then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	UpdatePosition(2, 1, 12);
	NoNextStep(2, 1, 8185)
},
{	GetScoreAfterExchange(4284, yes);
	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
},
{	if	B(tile(white, 1, 3))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(2, 1, 300) : 3 Jun 2015 19:57:37 GMT, priority 10)
}


obligation to be adopted: makeMove(2, 1, 300) : 3 Jun 2015 19:57:37 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NoNextStep(2, 1, 8185)
},
{	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
}


[new scheduled]:[if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), NoNextStep(2, 1, 8185), B(scoreAfterExchange(4284, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer)]
[After]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NoNextStep(2, 1, 8185)
},
{	B(scoreAfterExchange(4284, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
}


[new scheduled]:[findNextStep(neco, 700), skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4284, Answer)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, Answer)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, accept)
}


[new scheduled]:[if G(acceptRequest(4284, V2)) then skip else if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(4284, accept)]
[After]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4284, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4284, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 4284, closed(A)))
							then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4284, accept)
}


a30[CTAH] paths: 1000
Need to wait 2 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(4284, accept)
}


[new scheduled]:[if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(4284, accept)]
[After]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(4284, accept)
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(4284, accept)
}


[new scheduled]:[skip, if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, sendResponse(4284, accept)]
[After]:{	skip
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(4284, accept)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	@ctenv(sendResponse(4284, accept),L1,0);
	SentResponse(accept, 4284)
}


[new scheduled]:[if G(acceptRequest(4284, V2)) then skip else if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, @ctenv(sendResponse(4284, accept),L1,0); SentResponse(accept, 4284)]
[After]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4284, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4284, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 4284, closed(A)))
							then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	@ctenv(sendResponse(4284, accept),L1,0);
	SentResponse(accept, 4284)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=4284, response=accepted, clock=13, time=2015-06-03 20:40:57.791]
Event processed @ctenv(functionToList(message(response, 4284, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 4284, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 4284, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 4284, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(respondToRequest(4284, V2)) then skip else if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(respondToRequest(4284, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4284, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 4284, closed(A)))
					then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@24b0a1ab
[CTAH] The created APLList : [response,4284,accept]
a40[CTAH] going goal: 2,2 color: neco
[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4284)
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 4284)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4284)
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 4284)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 4284)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 4284)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>11+Wait) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>11+Wait)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>11+7) then {NoNextStep(4, 0, 4284); ReceivedResponse(noresponse, 4284)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>11+7)
	then	{	NoNextStep(4, 0, 4284);
			ReceivedResponse(noresponse, 4284)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 0),L2,0);
	if	B(L2=[actionresult([4,0])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 0, Clock)
		};
	NoNextStep(4, 0, 4284)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 0),L2,0); if B(L2=[actionresult([4,0])]) then {B(clock(Clock)); UpdatePosition(4, 0, Clock)}; NoNextStep(4, 0, 4284), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 0),L2,0);
	if	B(L2=[actionresult([4,0])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 0, Clock)
		};
	NoNextStep(4, 0, 4284)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=0], time=2015-06-03 20:40:58.261, clock=13]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=0], time=2015-06-03 20:40:58.261, clock=13]
Event processed UpdatePosition(4, 0, 13)
[Planbase]:{	NoNextStep(4, 0, 4284)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 0, 13)
}


[new scheduled]:[NoNextStep(4, 0, 4284), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(4, 0, 13)]
[After]:{	NoNextStep(4, 0, 4284)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 0, 13)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] going goal: 2,0 color: neco
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][4] [3][3] [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,3,1,1493]
org notification: Proposal [id=1493, agent=a30, agent2=a20, clock=13, time=2015-06-03 20:40:59.566]
Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	if	B(not 1493=no)
	then	{	NextStep(3, 3, 1493);
			SentProposal(1493, 1, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not 1493=no) then {NextStep(3, 3, 1493); SentProposal(1493, 1, open, Clock)} else NextStep(3, 3), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not 1493=no)
	then	{	NextStep(3, 3, 1493);
			SentProposal(1493, 1, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(not 1493=no)
	then	{	NextStep(3, 3, 1493);
			SentProposal(1493, 1, open, 12)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not 1493=no) then {NextStep(3, 3, 1493); SentProposal(1493, 1, open, 12)} else NextStep(3, 3), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not 1493=no)
	then	{	NextStep(3, 3, 1493);
			SentProposal(1493, 1, open, 12)
		}
	else	{	NextStep(3, 3)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(3, 3, 1493);
	SentProposal(1493, 1, open, 12)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 3, 1493); SentProposal(1493, 1, open, 12), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NextStep(3, 3, 1493);
	SentProposal(1493, 1, open, 12)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(1493, 1, open, 12)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[SentProposal(1493, 1, open, 12), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	SentProposal(1493, 1, open, 12)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Time [clock=14, time=2015-06-03 20:41:04.622]
object notification: Time [clock=14, time=2015-06-03 20:41:04.622]
object notification: Time [clock=14, time=2015-06-03 20:41:04.622]
object notification: Time [clock=14, time=2015-06-03 20:41:04.622]
Event processed UpdateClock(14)
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(14)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [2][1] [2][2]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:2,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [2,2,1,2117]
[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Proposal [id=2117, agent=a40, agent2=a20, clock=14, time=2015-06-03 20:41:12.954]
Event processed UpdateClock(14)
[Planbase]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 4284, closed(A)))
			then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
				}
		}
},
{	B(clock(Clock));
	if	B(not 2117=no)
	then	{	NextStep(2, 2, 2117);
			SentProposal(2117, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if G(acceptRequest(4284, V2)) then skip else if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), B(clock(Clock)); if B(not 2117=no) then {NextStep(2, 2, 2117); SentProposal(2117, 1, open, Clock)} else NextStep(2, 2), UpdateClock(14)]
[After]:{	if	G(acceptRequest(4284, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 4284, closed(A)))
			then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
				}
		}
},
{	B(clock(Clock));
	if	B(not 2117=no)
	then	{	NextStep(2, 2, 2117);
			SentProposal(2117, 1, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(0, 4284, closed(A)))
	then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
		}
},
{	if	B(not 2117=no)
	then	{	NextStep(2, 2, 2117);
			SentProposal(2117, 1, open, 13)
		}
	else	{	NextStep(2, 2)
		}
}


[new scheduled]:[if B(not receivedP(0, 4284, closed(A))) then adoptz(respondToRequest(4284, 50) : Infinite, priority 10), if B(not 2117=no) then {NextStep(2, 2, 2117); SentProposal(2117, 1, open, 13)} else NextStep(2, 2)]
[After]:{	if	B(not receivedP(0, 4284, closed(A)))
	then	{	adoptz(respondToRequest(4284, 50) : Infinite, priority 10)
		}
},
{	if	B(not 2117=no)
	then	{	NextStep(2, 2, 2117);
			SentProposal(2117, 1, open, 13)
		}
	else	{	NextStep(2, 2)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(2, 2, 2117);
	SentProposal(2117, 1, open, 13)
}


[new scheduled]:[NextStep(2, 2, 2117); SentProposal(2117, 1, open, 13)]
[After]:{	NextStep(2, 2, 2117);
	SentProposal(2117, 1, open, 13)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(2117, 1, open, 13)
}


[new scheduled]:[SentProposal(2117, 1, open, 13)]
[After]:{	SentProposal(2117, 1, open, 13)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Time [clock=15, time=2015-06-03 20:41:14.63]
object notification: Time [clock=15, time=2015-06-03 20:41:14.63]
object notification: Time [clock=15, time=2015-06-03 20:41:14.63]
object notification: Time [clock=15, time=2015-06-03 20:41:14.63]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdateClock(15)
[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(15)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


org notification: Time [clock=16, time=2015-06-03 20:41:24.637]
object notification: Time [clock=16, time=2015-06-03 20:41:24.637]
object notification: Time [clock=16, time=2015-06-03 20:41:24.637]
object notification: Time [clock=16, time=2015-06-03 20:41:24.637]
Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(16)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, UpdateClock(16)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][0] [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:0)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,0,3,7116]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=7116, agent=a10, agent2=a40, clock=16, time=2015-06-03 20:41:27.55]
object notification: Obligation [subject=a40, obligation=[respondToRequest(7116)], sanction=[reduce(a40, 300)], deadline=21, time=2015-06-03 20:41:27.555, clock=16]
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


Event processed UpdateClock(14)
Event processed UpdateClock(15)
Event processed UpdateClock(16)
[Planbase]:{	B(clock(Clock));
	if	B(not 7116=no)
	then	{	NextStep(3, 0, 7116);
			SentProposal(7116, 3, open, Clock)
		}
	else	{	NextStep(3, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(15)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); if B(not 7116=no) then {NextStep(3, 0, 7116); SentProposal(7116, 3, open, Clock)} else NextStep(3, 0), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(14), UpdateClock(15), UpdateClock(16)]
[After]:{	B(clock(Clock));
	if	B(not 7116=no)
	then	{	NextStep(3, 0, 7116);
			SentProposal(7116, 3, open, Clock)
		}
	else	{	NextStep(3, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(15)
},
{	UpdateClock(16)
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 7116, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(7116), 21, reduce(a40, 300))
[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(functionToList(proposal(proposal, 0, 7116, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7116), 21, reduce(a40, 300))
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(proposal(proposal, 0, 7116, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(7116), 21, reduce(a40, 300))]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(proposal(proposal, 0, 7116, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7116), 21, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6d430d9e
[CTAH] The created APLList : [proposal,0,7116,open]
[Planbase]:{	if	B(not 7116=no)
	then	{	NextStep(3, 0, 7116);
			SentProposal(7116, 3, open, 13)
		}
	else	{	NextStep(3, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 7116=no) then {NextStep(3, 0, 7116); SentProposal(7116, 3, open, 13)} else NextStep(3, 0), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 7116=no)
	then	{	NextStep(3, 0, 7116);
			SentProposal(7116, 3, open, 13)
		}
	else	{	NextStep(3, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7116, 300) : 3 Jun 2015 19:58:07 GMT, priority 10)
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, if B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(7116, 300) : 3 Jun 2015 19:58:07 GMT, priority 10)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7116, 300) : 3 Jun 2015 19:58:07 GMT, priority 10)
}


obligation to be adopted: respondToRequest(7116, 300) : 3 Jun 2015 19:58:07 GMT, priority 10
[Planbase]:{	NextStep(3, 0, 7116);
	SentProposal(7116, 3, open, 13)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 0, 7116); SentProposal(7116, 3, open, 13), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(3, 0, 7116);
	SentProposal(7116, 3, open, 13)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, if B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B([actionresult([proposal,0,7116,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(7116, 3, open, 13)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(7116, 3, open, 13), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(7116, 3, open, 13)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7116, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(proposal=proposal) then ReceivedProposal(0, 7116, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7116, open)
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	ReceivedProposal(0, 7116, open)
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, ReceivedProposal(0, 7116, open)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	ReceivedProposal(0, 7116, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if G(acceptRequest(7116, 300)) then skip else if B(not scoreAfterExchange(7116, Score)) then getScoreAfterExchange(7116); B(scoreAfterExchange(7116, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer), if G(acceptRequest(7116, V2)) then skip else if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7116, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7116, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 7116, closed(A)))
							then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	G(acceptRequest(7116, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(7116, Score))
			then	{	getScoreAfterExchange(7116)
				}
		};
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7116, Score))
	then	{	getScoreAfterExchange(7116)
		};
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(not scoreAfterExchange(7116, Score)) then getScoreAfterExchange(7116); B(scoreAfterExchange(7116, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer)]
[After]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(not scoreAfterExchange(7116, Score))
	then	{	getScoreAfterExchange(7116)
		};
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	getScoreAfterExchange(7116);
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, getScoreAfterExchange(7116); B(scoreAfterExchange(7116, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	getScoreAfterExchange(7116);
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	GetScoreAfterExchange(7116, yes);
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[new scheduled]:[if G(acceptRequest(7116, V2)) then skip else if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, GetScoreAfterExchange(7116, yes); B(scoreAfterExchange(7116, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer)]
[After]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7116, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7116, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 7116, closed(A)))
							then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	GetScoreAfterExchange(7116, yes);
	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), B(scoreAfterExchange(7116, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer)]
[After]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	B(scoreAfterExchange(7116, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7116, Answer)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, accept)
}


[new scheduled]:[if G(acceptRequest(7116, V2)) then skip else if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7116, accept)]
[After]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7116, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7116, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 7116, closed(A)))
							then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7116, accept)
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7116, accept)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7116, accept)]
[After]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	B(accept=accept);
	sendResponse(7116, accept)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	sendResponse(7116, accept)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, sendResponse(7116, accept)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	sendResponse(7116, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	@ctenv(sendResponse(7116, accept),L1,0);
	SentResponse(accept, 7116)
}


[new scheduled]:[if G(acceptRequest(7116, V2)) then skip else if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, @ctenv(sendResponse(7116, accept),L1,0); SentResponse(accept, 7116)]
[After]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7116, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7116, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 7116, closed(A)))
							then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	@ctenv(sendResponse(7116, accept),L1,0);
	SentResponse(accept, 7116)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

org notification: Response [id=7116, response=accepted, clock=16, time=2015-06-03 20:41:29.123]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(7116, V2)) then skip else if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(7116, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7116, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 7116, closed(A)))
					then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
}


Event processed @ctenv(functionToList(message(response, 7116, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7116, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 7116, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7116, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3b06d395
[CTAH] The created APLList : [response,7116,accept]
[Planbase]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7116, closed(A)))
			then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if G(acceptRequest(7116, V2)) then skip else if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	G(acceptRequest(7116, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7116, closed(A)))
			then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7116)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 7116)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7116)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(0, 7116, closed(A)))
	then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(not receivedP(0, 7116, closed(A))) then adoptz(respondToRequest(7116, 50) : Infinite, priority 10), if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(not receivedP(0, 7116, closed(A)))
	then	{	adoptz(respondToRequest(7116, 50) : Infinite, priority 10)
		}
},
{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7116)
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(3, 0, 7116); ReceivedResponse(noresponse, 7116)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7116)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(3, 0, 7116);
			ReceivedResponse(noresponse, 7116)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7116)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 0),L2,0);
	if	B(L2=[actionresult([3,0])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 0, Clock)
		};
	NoNextStep(3, 0, 7116)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 0),L2,0); if B(L2=[actionresult([3,0])]) then {B(clock(Clock)); UpdatePosition(3, 0, Clock)}; NoNextStep(3, 0, 7116), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 0),L2,0);
	if	B(L2=[actionresult([3,0])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 0, Clock)
		};
	NoNextStep(3, 0, 7116)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=0], time=2015-06-03 20:41:29.689, clock=16]
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=0], time=2015-06-03 20:41:29.689, clock=16]
Event processed UpdatePosition(3, 0, 16)
[Planbase]:{	NoNextStep(3, 0, 7116)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(3, 0, 16)
}


[new scheduled]:[NoNextStep(3, 0, 7116), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(3, 0, 16)]
[After]:{	NoNextStep(3, 0, 7116)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(3, 0, 16)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[2,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B([A,B]=[2,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 2, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] going goal: 2,0 color: neco
[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1493, response=accepted, clock=16, time=2015-06-03 20:41:34.027]
Event processed @ctenv(functionToList(message(response, 1493, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1493, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(message(response, 1493, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1493, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@44c85fc5
[CTAH] The created APLList : [response,1493,accept]
[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1493)
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(response=response) then ReceivedResponse(accept, 1493)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1493)
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=2117, response=accepted, clock=16, time=2015-06-03 20:41:34.226]
Event processed @ctenv(functionToList(message(response, 2117, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 1493)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 1493)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 1493)
}


[Planbase]:{	@ctenv(functionToList(message(response, 2117, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 2117, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 2117, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@e98b74d
[CTAH] The created APLList : [response,2117,accept]
[Planbase]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>12+Wait) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>12+Wait)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2117)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>13+Wait) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, if B(response=response) then ReceivedResponse(accept, 2117)]
[After]:{	B(timetowait(Wait));
	if	B(16>13+Wait)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2117)
		}
}


[Planbase]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(16>12+7) then {NoNextStep(3, 3, 1493); ReceivedResponse(noresponse, 1493)}, if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(16>12+7)
	then	{	NoNextStep(3, 3, 1493);
			ReceivedResponse(noresponse, 1493)
		}
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	ReceivedResponse(accept, 2117)
}


[new scheduled]:[if B(16>13+7) then {NoNextStep(2, 2, 2117); ReceivedResponse(noresponse, 2117)}, ReceivedResponse(accept, 2117)]
[After]:{	if	B(16>13+7)
	then	{	NoNextStep(2, 2, 2117);
			ReceivedResponse(noresponse, 2117)
		}
},
{	ReceivedResponse(accept, 2117)
}


[Planbase]:{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


object notification: Time [clock=17, time=2015-06-03 20:41:34.639]
org notification: Time [clock=17, time=2015-06-03 20:41:34.639]
object notification: Time [clock=17, time=2015-06-03 20:41:34.639]
object notification: Time [clock=17, time=2015-06-03 20:41:34.639]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdateClock(17)
[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3, 1493), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(17)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(17)
}


Event processed UpdateClock(17)
Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=3], time=2015-06-03 20:41:34.755, clock=17]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=3], time=2015-06-03 20:41:34.755, clock=17]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 2117)
},
{	UpdateClock(17)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2, 2117), UpdateClock(17)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 2117)
},
{	UpdateClock(17)
}


Need to wait 4 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=2, y=2], time=2015-06-03 20:41:34.791, clock=17]
org notification: Position [subject=a40, id=null, cell=Cell [x=2, y=2], time=2015-06-03 20:41:34.791, clock=17]
object notification: Points [subject=a30, time=2015-06-03 20:41:34.778, clock=17, value=900, id=null]
a30[CTAH] moveStepToGoal returns: [3,3]
Event processed UpdatePosition(3, 3, 17)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdatePosition(3, 3, 17)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 3, Clock); NoNextStep(3, 3, 1493), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdatePosition(3, 3, 17), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdatePosition(3, 3, 17)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(3, 3, 17);
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(3, 3, 17); NoNextStep(3, 3, 1493), if B(tile(brown, 6, 3)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	UpdatePosition(3, 3, 17);
	NoNextStep(3, 3, 1493)
},
{	if	B(tile(brown, 6, 3))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NoNextStep(3, 3, 1493)
}


[new scheduled]:[NoNextStep(3, 3, 1493)]
[After]:{	NoNextStep(3, 3, 1493)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=0], time=2015-06-03 20:41:38.06, clock=17]
[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 3,1 color: neco
a40[CTAH] moveStepToGoal returns: [2,2]
Event processed UpdatePosition(2, 2, 17)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2, 2117)
},
{	UpdatePosition(2, 2, 17)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 2, Clock); NoNextStep(2, 2, 2117), UpdatePosition(2, 2, 17)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2, 2117)
},
{	UpdatePosition(2, 2, 17)
}


[Planbase]:{	UpdatePosition(2, 2, 17);
	NoNextStep(2, 2, 2117)
}


[new scheduled]:[UpdatePosition(2, 2, 17); NoNextStep(2, 2, 2117)]
[After]:{	UpdatePosition(2, 2, 17);
	NoNextStep(2, 2, 2117)
}


[Planbase]:


[new scheduled]:[]
[After]:


a30[CTAH] paths: 1000
Need to wait 2 more seconds
object notification: Time [clock=18, time=2015-06-03 20:41:44.641]
object notification: Time [clock=18, time=2015-06-03 20:41:44.641]
object notification: Time [clock=18, time=2015-06-03 20:41:44.641]
org notification: Time [clock=18, time=2015-06-03 20:41:44.641]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


a30[CTAH] path: 0
a30[CTAH] path: Path: [3][3] [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,2,0,6954]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=6954, agent=a30, agent2=a10, clock=18, time=2015-06-03 20:41:46.41]
object notification: Obligation [subject=a10, obligation=[respondToRequest(6954)], sanction=[reduce(a10, 300)], deadline=23, time=2015-06-03 20:41:46.418, clock=18]
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(not 6954=no)
	then	{	NextStep(3, 2, 6954);
			SentProposal(6954, 0, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not 6954=no) then {NextStep(3, 2, 6954); SentProposal(6954, 0, open, Clock)} else NextStep(3, 2), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not 6954=no)
	then	{	NextStep(3, 2, 6954);
			SentProposal(6954, 0, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(not 6954=no)
	then	{	NextStep(3, 2, 6954);
			SentProposal(6954, 0, open, 17)
		}
	else	{	NextStep(3, 2)
		}
}


[new scheduled]:[if B(not 6954=no) then {NextStep(3, 2, 6954); SentProposal(6954, 0, open, 17)} else NextStep(3, 2)]
[After]:{	if	B(not 6954=no)
	then	{	NextStep(3, 2, 6954);
			SentProposal(6954, 0, open, 17)
		}
	else	{	NextStep(3, 2)
		}
}


[Planbase]:{	NextStep(3, 2, 6954);
	SentProposal(6954, 0, open, 17)
}


[new scheduled]:[NextStep(3, 2, 6954); SentProposal(6954, 0, open, 17)]
[After]:{	NextStep(3, 2, 6954);
	SentProposal(6954, 0, open, 17)
}


[Planbase]:{	SentProposal(6954, 0, open, 17)
}


[new scheduled]:[SentProposal(6954, 0, open, 17)]
[After]:{	SentProposal(6954, 0, open, 17)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][0] [2][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:2,C:0)
a10[CTAH] moveStepToGoalTest sent proposal for: [2,0,1,7024]
org notification: Proposal [id=7024, agent=a10, agent2=a20, clock=18, time=2015-06-03 20:41:47.811]
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


Event processed UpdateClock(17)
Event processed UpdateClock(18)
Event processed @ctenv(functionToList(proposal(proposal, 2, 6954, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(6954), 23, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not 7024=no)
	then	{	NextStep(2, 0, 7024);
			SentProposal(7024, 1, open, Clock)
		}
	else	{	NextStep(2, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(18)
},
{	@ctenv(functionToList(proposal(proposal, 2, 6954, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6954), 23, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); if B(not 7024=no) then {NextStep(2, 0, 7024); SentProposal(7024, 1, open, Clock)} else NextStep(2, 0), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(17), UpdateClock(18), @ctenv(functionToList(proposal(proposal, 2, 6954, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(6954), 23, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	if	B(not 7024=no)
	then	{	NextStep(2, 0, 7024);
			SentProposal(7024, 1, open, Clock)
		}
	else	{	NextStep(2, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(18)
},
{	@ctenv(functionToList(proposal(proposal, 2, 6954, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6954), 23, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2d55488b
[CTAH] The created APLList : [proposal,2,6954,open]
[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(not 7024=no)
	then	{	NextStep(2, 0, 7024);
			SentProposal(7024, 1, open, 16)
		}
	else	{	NextStep(2, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6954, 300) : 3 Jun 2015 19:58:27 GMT, priority 10)
}


[new scheduled]:[if B(not 7024=no) then {NextStep(2, 0, 7024); SentProposal(7024, 1, open, 16)} else NextStep(2, 0), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(6954, 300) : 3 Jun 2015 19:58:27 GMT, priority 10)]
[After]:{	if	B(not 7024=no)
	then	{	NextStep(2, 0, 7024);
			SentProposal(7024, 1, open, 16)
		}
	else	{	NextStep(2, 0)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6954, 300) : 3 Jun 2015 19:58:27 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


obligation to be adopted: respondToRequest(6954, 300) : 3 Jun 2015 19:58:27 GMT, priority 10
[Planbase]:{	NextStep(2, 0, 7024);
	SentProposal(7024, 1, open, 16)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(2, 0, 7024); SentProposal(7024, 1, open, 16), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(2, 0, 7024);
	SentProposal(7024, 1, open, 16)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,6954,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	SentProposal(7024, 1, open, 16)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6954, open)
		}
}


[new scheduled]:[SentProposal(7024, 1, open, 16), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(2, 6954, open)]
[After]:{	SentProposal(7024, 1, open, 16)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6954, open)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 6954, open)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(2, 6954, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 6954, open)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=7077, agent=a20, agent2=a10, clock=18, time=2015-06-03 20:41:48.238]
object notification: Obligation [subject=a10, obligation=[respondToRequest(7077)], sanction=[reduce(a10, 300)], deadline=23, time=2015-06-03 20:41:48.243, clock=18]
[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequest(6954, 300)) then skip else if B(not scoreAfterExchange(6954, Score)) then getScoreAfterExchange(6954); B(scoreAfterExchange(6954, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if G(acceptRequest(6954, V2)) then skip else if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6954, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6954, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6954, closed(A)))
							then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	G(acceptRequest(6954, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(6954, Score))
			then	{	getScoreAfterExchange(6954)
				}
		};
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 7077, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(7077), 23, reduce(a10, 300))
[Planbase]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(6954, Score))
	then	{	getScoreAfterExchange(6954)
		};
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 7077, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7077), 23, reduce(a10, 300))
}


[new scheduled]:[if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), if B(18>16+7) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, if B(not scoreAfterExchange(6954, Score)) then getScoreAfterExchange(6954); B(scoreAfterExchange(6954, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 1, 7077, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(7077), 23, reduce(a10, 300))]
[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[After]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(6954, Score))
	then	{	getScoreAfterExchange(6954)
		};
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 7077, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7077), 23, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1cd20112
[CTAH] The created APLList : [proposal,1,7077,open]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(6954);
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7077, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), skip, getScoreAfterExchange(6954); B(scoreAfterExchange(6954, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(7077, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(6954);
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7077, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)
}


obligation to be adopted: respondToRequest(7077, 300) : 3 Jun 2015 19:58:28 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	GetScoreAfterExchange(6954, yes);
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if G(acceptRequest(6954, V2)) then skip else if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, GetScoreAfterExchange(6954, yes); B(scoreAfterExchange(6954, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6954, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6954, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6954, closed(A)))
							then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	GetScoreAfterExchange(6954, yes);
	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,7077,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7077, open)
		}
}


[new scheduled]:[if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), if B(18>16+7) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, B(scoreAfterExchange(6954, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(1, 7077, open)]
[After]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	B(scoreAfterExchange(6954, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7077, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8469, agent=a20, agent2=a10, clock=18, time=2015-06-03 20:41:48.687]
object notification: Obligation [subject=a10, obligation=[respondToRequest(8469)], sanction=[reduce(a10, 300)], deadline=23, time=2015-06-03 20:41:48.698, clock=18]
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 7077, open)
}


[new scheduled]:[findNextStep(neco, 700), skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6954, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(1, 7077, open)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 7077, open)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 8469, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(8469), 23, reduce(a10, 300))
[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 8469, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8469), 23, reduce(a10, 300))
}


[new scheduled]:[if G(acceptRequest(7077, 300)) then skip else if B(not scoreAfterExchange(7077, Score)) then getScoreAfterExchange(7077); B(scoreAfterExchange(7077, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), if G(acceptRequest(6954, V2)) then skip else if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(6954, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 1, 8469, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(8469), 23, reduce(a10, 300))]
[After]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6954, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6954, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6954, closed(A)))
							then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	G(acceptRequest(7077, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(7077, Score))
			then	{	getScoreAfterExchange(7077)
				}
		};
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 8469, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8469), 23, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5a1d89d8
[CTAH] The created APLList : [proposal,1,8469,open]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(7077, Score))
	then	{	getScoreAfterExchange(7077)
		};
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	B(accept=accept);
	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8469, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)
}


[new scheduled]:[if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), if B(18>16+7) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, if B(not scoreAfterExchange(7077, Score)) then getScoreAfterExchange(7077); B(scoreAfterExchange(7077, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), B(accept=accept); sendResponse(6954, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8469, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)]
[After]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(7077, Score))
	then	{	getScoreAfterExchange(7077)
		};
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	B(accept=accept);
	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8469, 300) : 3 Jun 2015 19:58:28 GMT, priority 10)
}


obligation to be adopted: respondToRequest(8469, 300) : 3 Jun 2015 19:58:28 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(7077);
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), skip, getScoreAfterExchange(7077); B(scoreAfterExchange(7077, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), sendResponse(6954, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(7077);
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	sendResponse(6954, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,8469,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	GetScoreAfterExchange(7077, yes);
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	@ctenv(sendResponse(6954, accept),L1,0);
	SentResponse(accept, 6954)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8469, open)
		}
}


[new scheduled]:[if G(acceptRequest(6954, V2)) then skip else if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, GetScoreAfterExchange(7077, yes); B(scoreAfterExchange(7077, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), @ctenv(sendResponse(6954, accept),L1,0); SentResponse(accept, 6954), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(1, 8469, open)]
[After]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6954, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6954, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6954, closed(A)))
							then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	GetScoreAfterExchange(7077, yes);
	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	@ctenv(sendResponse(6954, accept),L1,0);
	SentResponse(accept, 6954)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8469, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=6954, response=accepted, clock=18, time=2015-06-03 20:41:49.448]
Event processed @ctenv(functionToList(message(response, 6954, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
},
{	@ctenv(functionToList(message(response, 6954, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}, @ctenv(functionToList(message(response, 6954, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
},
{	@ctenv(functionToList(message(response, 6954, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 8469, open)
}


[new scheduled]:[if G(respondToRequest(6954, V2)) then skip else if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), if B(18>16+7) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, B(scoreAfterExchange(7077, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(1, 8469, open)]
[After]:{	if	G(respondToRequest(6954, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6954, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6954, closed(A)))
					then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	B(scoreAfterExchange(7077, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 8469, open)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@36bd439
[CTAH] The created APLList : [response,6954,accept]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=7024, response=accepted, clock=18, time=2015-06-03 20:41:49.582]
[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}, if B(response=response) then ReceivedResponse(accept, 6954)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6954)
		}
}


Event processed @ctenv(functionToList(message(response, 7024, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 6954, closed(A)))
			then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7024, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if G(acceptRequest(8469, 300)) then skip else if B(not scoreAfterExchange(8469, Score)) then getScoreAfterExchange(8469); B(scoreAfterExchange(8469, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), findNextStep(neco, 700), if G(acceptRequest(6954, V2)) then skip else if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7077, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 7024, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequest(6954, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 6954, closed(A)))
			then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	G(acceptRequest(8469, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(8469, Score))
			then	{	getScoreAfterExchange(8469)
				}
		};
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 7024, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@19f8d79d
[CTAH] The created APLList : [response,7024,accept]
[Planbase]:{	ReceivedResponse(accept, 6954)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 6954)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 6954)
}


[Planbase]:{	if	B(not receivedP(2, 6954, closed(A)))
	then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(8469, Score))
	then	{	getScoreAfterExchange(8469)
		};
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7024)
		}
}


[new scheduled]:[if B(not receivedP(2, 6954, closed(A))) then adoptz(respondToRequest(6954, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, if B(not scoreAfterExchange(8469, Score)) then getScoreAfterExchange(8469); B(scoreAfterExchange(8469, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7077, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 7024)]
[After]:{	if	B(not receivedP(2, 6954, closed(A)))
	then	{	adoptz(respondToRequest(6954, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	if	B(not scoreAfterExchange(8469, Score))
	then	{	getScoreAfterExchange(8469)
		};
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7024)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	getScoreAfterExchange(8469);
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	B(accept=accept);
	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7024)
}


[new scheduled]:[if G(acceptRequest(7077, V2)) then skip else if G(respondToRequest(7077, V2)) then skip else if G(acceptRequest(7077, V2)) then skip else if B(not receivedP(1, 7077, closed(A))) then adoptz(respondToRequest(7077, 50) : Infinite, priority 10), if B(18>16+7) then {NoNextStep(2, 0, 7024); ReceivedResponse(noresponse, 7024)}, getScoreAfterExchange(8469); B(scoreAfterExchange(8469, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), B(accept=accept); sendResponse(7077, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 7024)]
[After]:{	if	G(acceptRequest(7077, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7077, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7077, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 7077, closed(A)))
							then	{	adoptz(respondToRequest(7077, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(18>16+7)
	then	{	NoNextStep(2, 0, 7024);
			ReceivedResponse(noresponse, 7024)
		}
},
{	getScoreAfterExchange(8469);
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	B(accept=accept);
	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 7024)
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(3, 2, 6954); ReceivedResponse(noresponse, 6954)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(3, 2, 6954);
			ReceivedResponse(noresponse, 6954)
		}
}


[Planbase]:{	if	G(respondToRequest(7077, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7077, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7077, closed(A)))
					then	{	adoptz(respondToRequest(7077, 50) : Infinite, priority 10)
						}
				}
		}
},
{	GetScoreAfterExchange(8469, yes);
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(7077, V2)) then skip else if G(acceptRequest(7077, V2)) then skip else if B(not receivedP(1, 7077, closed(A))) then adoptz(respondToRequest(7077, 50) : Infinite, priority 10), GetScoreAfterExchange(8469, yes); B(scoreAfterExchange(8469, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), sendResponse(7077, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(7077, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7077, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7077, closed(A)))
					then	{	adoptz(respondToRequest(7077, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(8469, yes);
	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	sendResponse(7077, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	@ctenv(moveStepToGoal(neco, 2, 0),L2,0);
	if	B(L2=[actionresult([2,0])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 0, Clock)
		};
	NoNextStep(2, 0, 7024)
},
{	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	@ctenv(sendResponse(7077, accept),L1,0);
	SentResponse(accept, 7077)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[skip, @ctenv(moveStepToGoal(neco, 2, 0),L2,0); if B(L2=[actionresult([2,0])]) then {B(clock(Clock)); UpdatePosition(2, 0, Clock)}; NoNextStep(2, 0, 7024), B(scoreAfterExchange(8469, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), @ctenv(sendResponse(7077, accept),L1,0); SentResponse(accept, 7077), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	@ctenv(moveStepToGoal(neco, 2, 0),L2,0);
	if	B(L2=[actionresult([2,0])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 0, Clock)
		};
	NoNextStep(2, 0, 7024)
},
{	B(scoreAfterExchange(8469, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	@ctenv(sendResponse(7077, accept),L1,0);
	SentResponse(accept, 7077)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2, 6954)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2, 6954)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2, 6954)
}


a10[CTAH] moveStepToGoal returns: no
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=0], time=2015-06-03 20:41:50.006, clock=18]
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=0], time=2015-06-03 20:41:50.006, clock=18]
org notification: Response [id=7077, response=accepted, clock=18, time=2015-06-03 20:41:50.012]
Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-03 20:41:50.044, clock=18]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-03 20:41:50.044, clock=18]
Event processed UpdatePosition(2, 0, 18)
[Planbase]:{	NoNextStep(2, 0, 7024)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(2, 0, 18)
}


[new scheduled]:[if G(acceptRequest(8469, V2)) then skip else if G(respondToRequest(8469, V2)) then skip else if G(acceptRequest(8469, V2)) then skip else if B(not receivedP(1, 8469, closed(A))) then adoptz(respondToRequest(8469, 50) : Infinite, priority 10), NoNextStep(2, 0, 7024), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8469, Answer), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(2, 0, 18)]
[After]:{	if	G(acceptRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8469, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8469, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8469, closed(A)))
							then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	NoNextStep(2, 0, 7024)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, Answer)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(2, 0, 18)
}


[Planbase]:{	if	G(respondToRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8469, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8469, closed(A)))
					then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(respondToRequest(8469, V2)) then skip else if G(acceptRequest(8469, V2)) then skip else if B(not receivedP(1, 8469, closed(A))) then adoptz(respondToRequest(8469, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8469, accept), if B(tile(white, 2, 4)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(respondToRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8469, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8469, closed(A)))
					then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8469, accept)
},
{	if	B(tile(white, 2, 4))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(accept=accept);
	sendResponse(8469, accept)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[skip, B(accept=accept); sendResponse(8469, accept), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	B(accept=accept);
	sendResponse(8469, accept)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	sendResponse(8469, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(8469, V2)) then skip else if G(respondToRequest(8469, V2)) then skip else if G(acceptRequest(8469, V2)) then skip else if B(not receivedP(1, 8469, closed(A))) then adoptz(respondToRequest(8469, 50) : Infinite, priority 10), sendResponse(8469, accept), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8469, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8469, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8469, closed(A)))
							then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	sendResponse(8469, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	G(respondToRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8469, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8469, closed(A)))
					then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(sendResponse(8469, accept),L1,0);
	SentResponse(accept, 8469)
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if G(respondToRequest(8469, V2)) then skip else if G(acceptRequest(8469, V2)) then skip else if B(not receivedP(1, 8469, closed(A))) then adoptz(respondToRequest(8469, 50) : Infinite, priority 10), @ctenv(sendResponse(8469, accept),L1,0); SentResponse(accept, 8469)]
[After]:{	if	G(respondToRequest(8469, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8469, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8469, closed(A)))
					then	{	adoptz(respondToRequest(8469, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(sendResponse(8469, accept),L1,0);
	SentResponse(accept, 8469)
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=8469, response=accepted, clock=18, time=2015-06-03 20:41:50.327]
[Planbase]:{	skip
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[skip, if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=0], time=2015-06-03 20:41:51.666, clock=18]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


a30[CTAH] moveStepToGoal returns: [3,2]
Event processed UpdatePosition(3, 2, 18)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2, 6954)
},
{	UpdatePosition(3, 2, 18)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 2, Clock); NoNextStep(3, 2, 6954), UpdatePosition(3, 2, 18)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2, 6954)
},
{	UpdatePosition(3, 2, 18)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(3, 2, 18);
	NoNextStep(3, 2, 6954)
}


[new scheduled]:[UpdatePosition(3, 2, 18); NoNextStep(3, 2, 6954)]
[After]:{	UpdatePosition(3, 2, 18);
	NoNextStep(3, 2, 6954)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	NoNextStep(3, 2, 6954)
}


[new scheduled]:[NoNextStep(3, 2, 6954)]
[After]:{	NoNextStep(3, 2, 6954)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[3,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[3,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 3, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 3,1 color: neco
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


object notification: Time [clock=19, time=2015-06-03 20:41:54.644]
object notification: Time [clock=19, time=2015-06-03 20:41:54.644]
org notification: Time [clock=19, time=2015-06-03 20:41:54.644]
object notification: Time [clock=19, time=2015-06-03 20:41:54.644]
Event processed UpdateClock(19)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10), UpdateClock(19)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(19)
}


Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=1], time=2015-06-03 20:42:04.626, clock=19]
org notification: Time [clock=20, time=2015-06-03 20:42:04.646]
object notification: Time [clock=20, time=2015-06-03 20:42:04.646]
object notification: Time [clock=20, time=2015-06-03 20:42:04.646]
object notification: Time [clock=20, time=2015-06-03 20:42:04.646]
Event processed UpdateClock(20)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(20)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	UpdateClock(20)
}


Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [3][2] [3][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:1)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,1,0,1154]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1154, agent=a30, agent2=a10, clock=20, time=2015-06-03 20:42:08.083]
object notification: Obligation [subject=a10, obligation=[respondToRequest(1154)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-03 20:42:08.087, clock=20]
Event processed @ctenv(functionToList(proposal(proposal, 2, 1154, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1154), 25, reduce(a10, 300))
Event processed UpdateClock(19)
Event processed UpdateClock(20)
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 1154, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1154), 25, reduce(a10, 300))
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 2, 1154, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1154), 25, reduce(a10, 300))]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 1154, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1154), 25, reduce(a10, 300))
}


[Planbase]:{	B(clock(Clock));
	if	B(not 1154=no)
	then	{	NextStep(3, 1, 1154);
			SentProposal(1154, 0, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	UpdateClock(19)
},
{	UpdateClock(20)
}


[new scheduled]:[B(clock(Clock)); if B(not 1154=no) then {NextStep(3, 1, 1154); SentProposal(1154, 0, open, Clock)} else NextStep(3, 1), UpdateClock(19), UpdateClock(20)]
[After]:{	B(clock(Clock));
	if	B(not 1154=no)
	then	{	NextStep(3, 1, 1154);
			SentProposal(1154, 0, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	UpdateClock(19)
},
{	UpdateClock(20)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@33a775f8
[CTAH] The created APLList : [proposal,2,1154,open]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1154, 300) : 3 Jun 2015 19:58:48 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1154, 300) : 3 Jun 2015 19:58:48 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1154, 300) : 3 Jun 2015 19:58:48 GMT, priority 10)
}


[Planbase]:{	if	B(not 1154=no)
	then	{	NextStep(3, 1, 1154);
			SentProposal(1154, 0, open, 18)
		}
	else	{	NextStep(3, 1)
		}
}


[new scheduled]:[if B(not 1154=no) then {NextStep(3, 1, 1154); SentProposal(1154, 0, open, 18)} else NextStep(3, 1)]
[After]:{	if	B(not 1154=no)
	then	{	NextStep(3, 1, 1154);
			SentProposal(1154, 0, open, 18)
		}
	else	{	NextStep(3, 1)
		}
}


obligation to be adopted: respondToRequest(1154, 300) : 3 Jun 2015 19:58:48 GMT, priority 10
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10), if B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,1154,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	NextStep(3, 1, 1154);
	SentProposal(1154, 0, open, 18)
}


[new scheduled]:[NextStep(3, 1, 1154); SentProposal(1154, 0, open, 18)]
[After]:{	NextStep(3, 1, 1154);
	SentProposal(1154, 0, open, 18)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1154, open)
		}
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(2, 1154, open)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1154, open)
		}
}


[Planbase]:{	SentProposal(1154, 0, open, 18)
}


[new scheduled]:[SentProposal(1154, 0, open, 18)]
[After]:{	SentProposal(1154, 0, open, 18)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	ReceivedProposal(2, 1154, open)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(2, 1154, open)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	ReceivedProposal(2, 1154, open)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(1154, 300)) then skip else if B(not scoreAfterExchange(1154, Score)) then getScoreAfterExchange(1154); B(scoreAfterExchange(1154, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer), if G(acceptRequest(1154, V2)) then skip else if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1154, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1154, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1154, closed(A)))
							then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(1154, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1154, Score))
			then	{	getScoreAfterExchange(1154)
				}
		};
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1154, Score))
	then	{	getScoreAfterExchange(1154)
		};
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), if B(not scoreAfterExchange(1154, Score)) then getScoreAfterExchange(1154); B(scoreAfterExchange(1154, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer)]
[After]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1154, Score))
	then	{	getScoreAfterExchange(1154)
		};
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(1154);
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[skip, getScoreAfterExchange(1154); B(scoreAfterExchange(1154, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	getScoreAfterExchange(1154);
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	GetScoreAfterExchange(1154, yes);
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(1154, V2)) then skip else if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), GetScoreAfterExchange(1154, yes); B(scoreAfterExchange(1154, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1154, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1154, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1154, closed(A)))
							then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(1154, yes);
	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), B(scoreAfterExchange(1154, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer)]
[After]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1154, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1154, Answer), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(1154, V2)) then skip else if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1154, accept), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1154, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1154, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1154, closed(A)))
							then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1154, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1154, accept)
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), B(accept=accept); sendResponse(1154, accept)]
[After]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1154, accept)
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	skip
},
{	sendResponse(1154, accept)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[skip, sendResponse(1154, accept), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	skip
},
{	sendResponse(1154, accept)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(sendResponse(1154, accept),L1,0);
	SentResponse(accept, 1154)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(1154, V2)) then skip else if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), @ctenv(sendResponse(1154, accept),L1,0); SentResponse(accept, 1154), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1154, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1154, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1154, closed(A)))
							then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(1154, accept),L1,0);
	SentResponse(accept, 1154)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1154, response=accepted, clock=20, time=2015-06-03 20:42:09.275]
Event processed @ctenv(functionToList(message(response, 1154, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if G(respondToRequest(1154, V2)) then skip else if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(1154, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1154, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1154, closed(A)))
					then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
},
{	@ctenv(functionToList(message(response, 1154, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}, @ctenv(functionToList(message(response, 1154, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
},
{	@ctenv(functionToList(message(response, 1154, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@80e0244
[CTAH] The created APLList : [response,1154,accept]
[Planbase]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 1154, closed(A)))
			then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if G(acceptRequest(1154, V2)) then skip else if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequest(1154, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 1154, closed(A)))
			then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1154)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 1154)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1154)
		}
}


[Planbase]:{	if	B(not receivedP(2, 1154, closed(A)))
	then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(2, 1154, closed(A))) then adoptz(respondToRequest(1154, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(2, 1154, closed(A)))
	then	{	adoptz(respondToRequest(1154, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
},
{	ReceivedResponse(accept, 1154)
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}, ReceivedResponse(accept, 1154)]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
},
{	ReceivedResponse(accept, 1154)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(3, 1, 1154); ReceivedResponse(noresponse, 1154)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(3, 1, 1154);
			ReceivedResponse(noresponse, 1154)
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 1154)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 1),L2,0); if B(L2=[actionresult([3,1])]) then {B(clock(Clock)); UpdatePosition(3, 1, Clock)}; NoNextStep(3, 1, 1154)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 1154)
}


Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-03 20:42:09.712, clock=20]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-03 20:42:09.712, clock=20]
[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [3,1]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


Event processed UpdatePosition(3, 1, 20)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 1154)
},
{	UpdatePosition(3, 1, 20)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 1, Clock); NoNextStep(3, 1, 1154), UpdatePosition(3, 1, 20)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 1154)
},
{	UpdatePosition(3, 1, 20)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	UpdatePosition(3, 1, 20);
	NoNextStep(3, 1, 1154)
}


[new scheduled]:[UpdatePosition(3, 1, 20); NoNextStep(3, 1, 1154)]
[After]:{	UpdatePosition(3, 1, 20);
	NoNextStep(3, 1, 1154)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


org notification: Time [clock=21, time=2015-06-03 20:42:14.649]
object notification: Time [clock=21, time=2015-06-03 20:42:14.649]
object notification: Time [clock=21, time=2015-06-03 20:42:14.649]
object notification: Time [clock=21, time=2015-06-03 20:42:14.649]
Event processed UpdateClock(21)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10), UpdateClock(21)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(21)
}


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[CTAH] Array of Terms: [Lapapl.data.Term;@669951aa
[CTAH] The created APLList : [phasechange]
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@50acf1e2
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@22077e75
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedEvent(phasechange)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[update, if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	update
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 2, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(tile(white, 2, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(100>100) then dropgoal(useColor(white, 100) : Infinite, priority 10)]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:2,C:2).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':5 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:3,C:1).
Chips: { chips  'blue':8 'white':0 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:2,C:0).
Chips: { chips  'blue':0 'white':4 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@28dde412
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@1a7d911c
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@7ab7b9fd
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=22, time=2015-06-03 20:42:24.652]
object notification: Time [clock=22, time=2015-06-03 20:42:24.652]
object notification: Time [clock=22, time=2015-06-03 20:42:24.652]
object notification: Time [clock=22, time=2015-06-03 20:42:24.652]
object notification: Points [subject=a10, time=2015-06-03 20:42:24.67, clock=22, value=900, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdatePoints(900)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
},
{	UpdatePoints(900)
}


[new scheduled]:[UpdateClock(22), UpdatePoints(900)]
[After]:{	UpdateClock(22)
},
{	UpdatePoints(900)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=23, time=2015-06-03 20:42:34.656]
object notification: Time [clock=23, time=2015-06-03 20:42:34.656]
object notification: Time [clock=23, time=2015-06-03 20:42:34.656]
org notification: Time [clock=23, time=2015-06-03 20:42:34.656]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-03 20:42:44.66]
object notification: Time [clock=24, time=2015-06-03 20:42:44.66]
org notification: Time [clock=24, time=2015-06-03 20:42:44.66]
object notification: Time [clock=24, time=2015-06-03 20:42:44.66]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=25, time=2015-06-03 20:42:54.664]
object notification: Time [clock=25, time=2015-06-03 20:42:54.664]
object notification: Time [clock=25, time=2015-06-03 20:42:54.664]
org notification: Time [clock=25, time=2015-06-03 20:42:54.664]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-06-03 20:43:04.668]
org notification: Time [clock=26, time=2015-06-03 20:43:04.668]
object notification: Time [clock=26, time=2015-06-03 20:43:04.668]
object notification: Time [clock=26, time=2015-06-03 20:43:04.668]
object notification: Points [subject=a10, time=2015-06-03 20:43:04.686, clock=26, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


Event processed UpdateClock(26)
Event processed UpdatePoints(600)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(26), UpdatePoints(600)]
[After]:{	UpdateClock(26)
},
{	UpdatePoints(600)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=27, time=2015-06-03 20:43:14.672]
object notification: Time [clock=27, time=2015-06-03 20:43:14.672]
org notification: Time [clock=27, time=2015-06-03 20:43:14.672]
object notification: Time [clock=27, time=2015-06-03 20:43:14.672]
object notification: Points [subject=a30, time=2015-06-03 20:43:14.694, clock=27, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdatePoints(600)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(27), UpdatePoints(600)]
[After]:{	UpdateClock(27)
},
{	UpdatePoints(600)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=28, time=2015-06-03 20:43:24.676]
object notification: Time [clock=28, time=2015-06-03 20:43:24.676]
object notification: Time [clock=28, time=2015-06-03 20:43:24.676]
object notification: Time [clock=28, time=2015-06-03 20:43:24.676]
object notification: Points [subject=a40, time=2015-06-03 20:43:24.698, clock=28, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
Event processed UpdatePoints(600)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(28), UpdatePoints(600)]
[After]:{	UpdateClock(28)
},
{	UpdatePoints(600)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=29, time=2015-06-03 20:43:34.681]
object notification: Time [clock=29, time=2015-06-03 20:43:34.681]
org notification: Time [clock=29, time=2015-06-03 20:43:34.681]
object notification: Time [clock=29, time=2015-06-03 20:43:34.681]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-03 20:43:44.683]
object notification: Time [clock=30, time=2015-06-03 20:43:44.683]
org notification: Time [clock=30, time=2015-06-03 20:43:44.683]
object notification: Time [clock=30, time=2015-06-03 20:43:44.683]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=31, time=2015-06-03 20:43:54.685]
object notification: Time [clock=31, time=2015-06-03 20:43:54.685]
object notification: Time [clock=31, time=2015-06-03 20:43:54.685]
object notification: Time [clock=31, time=2015-06-03 20:43:54.685]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=32, time=2015-06-03 20:44:04.687]
object notification: Time [clock=32, time=2015-06-03 20:44:04.687]
object notification: Time [clock=32, time=2015-06-03 20:44:04.687]
org notification: Time [clock=32, time=2015-06-03 20:44:04.687]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(32)
Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=33, time=2015-06-03 20:44:14.689]
org notification: Time [clock=33, time=2015-06-03 20:44:14.689]
object notification: Time [clock=33, time=2015-06-03 20:44:14.689]
object notification: Time [clock=33, time=2015-06-03 20:44:14.689]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=34, time=2015-06-03 20:44:24.693]
object notification: Time [clock=34, time=2015-06-03 20:44:24.693]
object notification: Time [clock=34, time=2015-06-03 20:44:24.693]
object notification: Time [clock=34, time=2015-06-03 20:44:24.693]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=35, time=2015-06-03 20:44:34.695]
org notification: Time [clock=35, time=2015-06-03 20:44:34.695]
object notification: Time [clock=35, time=2015-06-03 20:44:34.695]
object notification: Time [clock=35, time=2015-06-03 20:44:34.695]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(35)
Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=36, time=2015-06-03 20:44:44.699]
object notification: Time [clock=36, time=2015-06-03 20:44:44.699]
object notification: Time [clock=36, time=2015-06-03 20:44:44.699]
org notification: Time [clock=36, time=2015-06-03 20:44:44.699]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=37, time=2015-06-03 20:44:54.703]
object notification: Time [clock=37, time=2015-06-03 20:44:54.703]
object notification: Time [clock=37, time=2015-06-03 20:44:54.703]
object notification: Time [clock=37, time=2015-06-03 20:44:54.703]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=38, time=2015-06-03 20:45:04.705]
object notification: Time [clock=38, time=2015-06-03 20:45:04.705]
object notification: Time [clock=38, time=2015-06-03 20:45:04.705]
object notification: Time [clock=38, time=2015-06-03 20:45:04.705]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


