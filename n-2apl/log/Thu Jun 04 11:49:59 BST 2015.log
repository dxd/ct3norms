2015-06-04 11:50:01,185 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-04~11.50-gigaspaces-service-192.168.0.40-68206.log
-------------------------last log tuples start--------------------------------
Goal [id=null, cell=Cell [x=3, y=2], agent=null, time=2015-06-04 11:45:52.711, clock=0]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=1], goal=Cell [x=3, y=2], sanction=100, clock=7, time=2015-06-04 11:46:52.876]
Proposal [id=5699, agent=a40, agent2=a10, clock=10, time=2015-06-04 11:47:17.516]
Time [clock=7, time=2015-06-04 11:46:45.817]
Proposal [id=7886, agent=a40, agent2=a20, clock=14, time=2015-06-04 11:48:03.52]
Obligation [subject=a30, obligation=[at(4, 2, a30)], sanction=[reduce(a30, 700)], deadline=24, time=2015-06-04 11:46:43.377, clock=6]
Time [clock=15, time=2015-06-04 11:48:05.841]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-04 11:46:02.533]
Time [clock=23, time=2015-06-04 11:49:25.865]
Time [clock=10, time=2015-06-04 11:47:15.827]
Proposal [id=7440, agent=a30, agent2=a40, clock=13, time=2015-06-04 11:47:47.145]
Obligation [subject=a10, obligation=[respondToRequest(5699)], sanction=[reduce(a10, 300)], deadline=15, time=2015-06-04 11:47:17.531, clock=10]
SetGoal [id=null, agent=a20, cell=Cell [x=3, y=3], goal=Cell [x=3, y=2], sanction=100, clock=8, time=2015-06-04 11:47:02.783]
Group [name=g, ra=a20, type=raaa, clock=2, time=2015-06-04 11:46:02.475]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=2], goal=Cell [x=3, y=2], sanction=100, clock=6, time=2015-06-04 11:46:43.367]
Obligation [subject=a40, obligation=[makeMove(0, 4, a40)], sanction=[reduce(a40, 300)], deadline=27, time=2015-06-04 11:47:43.707, clock=12]
Position [subject=a10, id=null, cell=Cell [x=3, y=0], time=2015-06-04 11:47:43.58, clock=12]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=2, time=2015-06-04 11:46:02.514]
SetGoal [id=null, agent=a40, cell=Cell [x=2, y=2], goal=Cell [x=3, y=2], sanction=100, clock=9, time=2015-06-04 11:47:09.219]
Obligation [subject=a20, obligation=[surround(3, 2)], sanction=[reduce(g, 700)], deadline=24, time=2015-06-04 11:46:02.487, clock=2]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 11:45:52.658, clock=0]
Time [clock=19, time=2015-06-04 11:48:45.853]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=2, time=2015-06-04 11:46:02.501]
Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-04 11:48:00.736, clock=14]
Time [clock=9, time=2015-06-04 11:47:05.824]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-04 11:46:02.536]
Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-04 11:45:52.631, clock=0]
Response [id=5699, response=accepted, clock=12, time=2015-06-04 11:47:43.273]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=2, time=2015-06-04 11:46:02.49]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-04 11:46:02.517]
Response [id=7440, response=accepted, clock=14, time=2015-06-04 11:48:00.224]
Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-04 11:47:34.041, clock=11]
Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 11:45:52.634, clock=0]
Time [clock=13, time=2015-06-04 11:47:45.835]
Time [clock=14, time=2015-06-04 11:47:55.838]
Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 11:45:52.68, clock=0]
Obligation [subject=a20, obligation=[makeMove(3, 3, a20)], sanction=[reduce(a20, 300)], deadline=25, time=2015-06-04 11:47:23.582, clock=10]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=2, time=2015-06-04 11:46:02.492]
Response [id=7886, response=accepted, clock=15, time=2015-06-04 11:48:06.245]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=2, time=2015-06-04 11:46:02.529]
Obligation [subject=a10, obligation=[at(3, 1, a10)], sanction=[reduce(a10, 700)], deadline=25, time=2015-06-04 11:46:52.881, clock=7]
Obligation [subject=a20, obligation=[at(3, 3, a20)], sanction=[reduce(a20, 700)], deadline=26, time=2015-06-04 11:47:02.79, clock=8]
Obligation [subject=a20, obligation=[respondToRequest(7886)], sanction=[reduce(a20, 300)], deadline=19, time=2015-06-04 11:48:03.524, clock=14]
Position [subject=a40, id=null, cell=Cell [x=0, y=2], time=2015-06-04 11:47:51.861, clock=13]
Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-04 11:47:23.897, clock=10]
Obligation [subject=a40, obligation=[respondToRequest(7440)], sanction=[reduce(a40, 300)], deadline=18, time=2015-06-04 11:47:47.152, clock=13]
Position [subject=a40, id=null, cell=Cell [x=0, y=3], time=2015-06-04 11:47:46.218, clock=13]
Position [subject=a10, id=null, cell=Cell [x=3, y=1], time=2015-06-04 11:48:04.372, clock=14]
Obligation [subject=a30, obligation=[makeMove(5, 4, a30)], sanction=[reduce(a30, 300)], deadline=25, time=2015-06-04 11:47:23.909, clock=10]
Obligation [subject=a40, obligation=[at(2, 2, a40)], sanction=[reduce(a40, 700)], deadline=27, time=2015-06-04 11:47:09.224, clock=9]
Obligation [subject=a10, obligation=[makeMove(4, 0, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-04 11:47:25.283, clock=10]
Points [subject=a40, time=2015-06-04 11:47:51.875, clock=13, value=700, id=null]
Position [subject=a20, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:47:23.557, clock=10]
Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-04 11:48:14.109, clock=15]
Position [subject=a10, id=null, cell=Cell [x=4, y=0], time=2015-06-04 11:47:25.28, clock=10]
Position [subject=a40, id=null, cell=Cell [x=2, y=2], time=2015-06-04 11:48:06.482, clock=15]
Time [clock=8, time=2015-06-04 11:46:55.821]
Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-04 11:48:00.309, clock=14]
Position [subject=a40, id=null, cell=Cell [x=0, y=4], time=2015-06-04 11:47:43.69, clock=12]
Time [clock=16, time=2015-06-04 11:48:15.844]
Time [clock=3, time=2015-06-04 11:46:05.803]
Time [clock=18, time=2015-06-04 11:48:35.85]
Time [clock=11, time=2015-06-04 11:47:25.83]
Time [clock=20, time=2015-06-04 11:48:55.856]
Time [clock=22, time=2015-06-04 11:49:15.861]
Time [clock=1, time=2015-06-04 11:45:45.78]
Time [clock=2, time=2015-06-04 11:45:55.8]
Time [clock=24, time=2015-06-04 11:49:35.869]
Time [clock=25, time=2015-06-04 11:49:45.872]
Time [clock=17, time=2015-06-04 11:48:25.848]
Time [clock=6, time=2015-06-04 11:46:35.813]
Time [clock=21, time=2015-06-04 11:49:05.86]
Time [clock=4, time=2015-06-04 11:46:15.805]
Time [clock=12, time=2015-06-04 11:47:35.831]
Time [clock=5, time=2015-06-04 11:46:25.809]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 11:45:52.642, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 11:45:52.645, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 11:45:52.651, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 11:45:52.625, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 11:45:52.665, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 11:45:52.669, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 11:45:52.639, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 11:45:52.59, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=yellow, time=2015-06-04 11:45:52.552, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 11:45:52.598, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 11:45:52.57, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-04 11:45:52.559, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 11:45:52.62, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 11:45:52.607, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 11:45:52.55, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 11:45:52.555, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 11:45:52.587, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 11:45:52.578, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 11:45:52.572, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 11:45:52.565, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 11:45:52.567, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-04 11:45:52.604, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-06-04 11:45:52.584, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 11:45:52.595, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 11:45:52.557, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-04 11:45:52.581, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-04 11:45:52.575, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 11:45:52.6, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-04 11:45:52.613, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 11:45:52.593, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 11:45:52.495, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 11:45:52.61, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
object notification: Time [clock=1, time=2015-06-04 11:50:12.384]
org notification: Time [clock=1, time=2015-06-04 11:50:12.384]
object notification: Time [clock=1, time=2015-06-04 11:50:12.384]
object notification: Time [clock=1, time=2015-06-04 11:50:12.384]
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Setup Phase
setPhases in ClientGameStatus, the current phase is Setup Phase
setPhases in ClientGameStatus, the current phase is Setup Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 11:50:17.526, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 11:50:17.526, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 11:50:17.526, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 11:50:17.526, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 11:50:17.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 11:50:17.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 11:50:17.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 11:50:17.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 11:50:17.572, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 11:50:17.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-04 11:50:17.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-04 11:50:17.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 11:50:17.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 11:50:17.572, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-04 11:50:17.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-04 11:50:17.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-04 11:50:17.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-04 11:50:17.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-04 11:50:17.586, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-04 11:50:17.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-04 11:50:17.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-04 11:50:17.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-04 11:50:17.591, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-04 11:50:17.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 11:50:17.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 11:50:17.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 11:50:17.594, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 11:50:17.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 11:50:17.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 11:50:17.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 11:50:17.597, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 11:50:17.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 11:50:17.601, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 11:50:17.601, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 11:50:17.601, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 11:50:17.601, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-04 11:50:17.605, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-04 11:50:17.605, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-04 11:50:17.605, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-04 11:50:17.605, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 11:50:17.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 11:50:17.61, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 11:50:17.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 11:50:17.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-04 11:50:17.616, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-04 11:50:17.616, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-04 11:50:17.616, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-04 11:50:17.616, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 11:50:17.621, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 11:50:17.621, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 11:50:17.621, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 11:50:17.621, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 11:50:17.625, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 11:50:17.625, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 11:50:17.625, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 11:50:17.625, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 11:50:17.629, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 11:50:17.629, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 11:50:17.629, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 11:50:17.629, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 11:50:17.633, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 11:50:17.633, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 11:50:17.633, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 11:50:17.633, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 11:50:17.638, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 11:50:17.638, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 11:50:17.638, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 11:50:17.638, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 11:50:17.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 11:50:17.642, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 11:50:17.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 11:50:17.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 11:50:17.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 11:50:17.647, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 11:50:17.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 11:50:17.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 11:50:17.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 11:50:17.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 11:50:17.652, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 11:50:17.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 11:50:17.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 11:50:17.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 11:50:17.656, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 11:50:17.656, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 11:50:17.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 11:50:17.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 11:50:17.661, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 11:50:17.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 11:50:17.691, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 11:50:17.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 11:50:17.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 11:50:17.691, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 11:50:17.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 11:50:17.702, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 11:50:17.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 11:50:17.702, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 11:50:17.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 11:50:17.709, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 11:50:17.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 11:50:17.709, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 11:50:17.713, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 11:50:17.713, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 11:50:17.713, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 11:50:17.713, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 11:50:17.718, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 11:50:17.718, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 11:50:17.718, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 11:50:17.718, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 11:50:17.722, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 11:50:17.722, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 11:50:17.722, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 11:50:17.722, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 11:50:17.727, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 11:50:17.727, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 11:50:17.727, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 11:50:17.727, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-04 11:50:17.732, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-04 11:50:17.732, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-04 11:50:17.732, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-04 11:50:17.732, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 11:50:17.737, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 11:50:17.737, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 11:50:17.737, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 11:50:17.737, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 11:50:17.743, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 11:50:17.743, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 11:50:17.743, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 11:50:17.743, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 11:50:17.748, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 11:50:17.748, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 11:50:17.748, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 11:50:17.748, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 11:50:17.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 11:50:17.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 11:50:17.753, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 11:50:17.753, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 11:50:17.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 11:50:17.762, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 11:50:17.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 11:50:17.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 11:50:17.766, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 11:50:17.766, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 11:50:17.766, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 11:50:17.766, clock=0]
org notification: Goal [id=null, cell=Cell [x=4, y=2], agent=null, time=2015-06-04 11:50:17.823, clock=0]
#########################Game Initialized
AGENT Thread-16: current phase name: Setup Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-14: current phase name: Setup Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-12: current phase name: Setup Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(white, 0, 1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(white, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(yellow, 5, 5)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(yellow, 5, 5)
Event processed UpdateTile(white, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(yellow, 5, 5)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(white, 0, 1), UpdateTile(white, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(white, 1, 5), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(yellow, 5, 5)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(white, 0, 1), UpdateTile(white, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(white, 1, 5), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(yellow, 5, 5)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(white, 0, 1), UpdateTile(white, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(white, 1, 0), UpdateTile(white, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(white, 1, 5), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(white, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(yellow, 5, 5)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(white, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2f2faeca
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@21b7682d
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@72810768
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(setupphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(setupphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(setupphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [3,4]
[CTAH] Agentposition: [1,0]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 4, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 4, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 4, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(1, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(1, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(1, 0, C)
}


[CTAH] Agentposition: [4,2]
[Planbase]:{	B(clock(C));
	GetAgentPos(4, 2, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(4, 2, C)]
[After]:{	B(clock(C));
	GetAgentPos(4, 2, C)
}


[Planbase]:{	GetAgentPos(3, 4, 1)
}


[new scheduled]:[GetAgentPos(3, 4, 1)]
[After]:{	GetAgentPos(3, 4, 1)
}


[Planbase]:{	GetAgentPos(1, 0, 1)
}


[new scheduled]:[GetAgentPos(1, 0, 1)]
[After]:{	GetAgentPos(1, 0, 1)
}


[Planbase]:{	GetAgentPos(4, 2, 1)
}


[new scheduled]:[GetAgentPos(4, 2, 1)]
[After]:{	GetAgentPos(4, 2, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=2, time=2015-06-04 11:50:22.404]
object notification: Time [clock=2, time=2015-06-04 11:50:22.404]
object notification: Time [clock=2, time=2015-06-04 11:50:22.404]
object notification: Time [clock=2, time=2015-06-04 11:50:22.404]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Group [name=g, ra=a10, type=ra, clock=2, time=2015-06-04 11:50:27.527]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=2, time=2015-06-04 11:50:27.538]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=2, time=2015-06-04 11:50:27.541]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-04 11:50:27.547]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=2, time=2015-06-04 11:50:27.543]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-04 11:50:27.552]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-04 11:50:27.555]
object notification: Obligation [subject=a10, obligation=[surround(4, 2)], sanction=[reduce(g, 700)], deadline=20, time=2015-06-04 11:50:27.633, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptObligation(surround(4, 2), 20, reduce(g, 700))
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
[Planbase]:{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 2), 20, reduce(g, 700))
}


[new scheduled]:[adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(4, 2), 20, reduce(g, 700))]
[After]:{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 2), 20, reduce(g, 700))
}


[Planbase]:{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 2, 700) : 4 Jun 2015 11:07:07 GMT, priority 10)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(4, 2, 700) : 4 Jun 2015 11:07:07 GMT, priority 10)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 2, 700) : 4 Jun 2015 11:07:07 GMT, priority 10)
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(4, 2, 700) : 4 Jun 2015 11:07:07 GMT, priority 10
[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(4, 2); sendSouth(a10, 4, 2, 100); sendWest(a20, 4, 2, 100); sendEast(a30, 4, 2, 100); sendNorth(a40, 4, 2, 100); dropgoal(surround(4, 2, 700) : Infinite, priority 10), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Surround(4, 2);
	sendSouth(a10, 4, 2, 100);
	sendWest(a20, 4, 2, 100);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 4, 2, 100);
	sendWest(a20, 4, 2, 100);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 4, 2, 100); sendWest(a20, 4, 2, 100); sendEast(a30, 4, 2, 100); sendNorth(a40, 4, 2, 100); dropgoal(surround(4, 2, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 4, 2, 100);
	sendWest(a20, 4, 2, 100);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a10, 4, 1, 4, 2, 100),L,0);
	sendWest(a20, 4, 2, 100);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 4, 1, 4, 2, 100),L,0); sendWest(a20, 4, 2, 100); sendEast(a30, 4, 2, 100); sendNorth(a40, 4, 2, 100); dropgoal(surround(4, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 4, 1, 4, 2, 100),L,0);
	sendWest(a20, 4, 2, 100);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=1], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.106]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=1], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.106]
object notification: Obligation [subject=a10, obligation=[at(4, 1, a10)], sanction=[reduce(a10, 700)], deadline=16, time=2015-06-04 11:50:28.115, clock=2]
Event processed adoptObligation(at(4, 1, a10), 16, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 3, 2, 4, 2, 100),L,0);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(4, 1, a10), 16, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 3, 2, 4, 2, 100),L,0); sendEast(a30, 4, 2, 100); sendNorth(a40, 4, 2, 100); dropgoal(surround(4, 2, 700) : Infinite, priority 10), adoptObligation(at(4, 1, a10), 16, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 3, 2, 4, 2, 100),L,0);
	sendEast(a30, 4, 2, 100);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(4, 1, a10), 16, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=2], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.156]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=2], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.156]
[Planbase]:{	@ctenv(setGoal(a30, 5, 2, 4, 2, 100),L,0);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 1, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 5, 2, 4, 2, 100),L,0); sendNorth(a40, 4, 2, 100); dropgoal(surround(4, 2, 700) : Infinite, priority 10), adoptz(at(4, 1, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 5, 2, 4, 2, 100),L,0);
	sendNorth(a40, 4, 2, 100);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 1, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=2], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.214]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=2], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.214]
obligation to be adopted: at(4, 1, 700) : 4 Jun 2015 11:07:08 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(5, 2, a30)], sanction=[reduce(a30, 700)], deadline=16, time=2015-06-04 11:50:28.218, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 4, 3, 4, 2, 100),L,0);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 4, 3, 4, 2, 100),L,0); dropgoal(surround(4, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 4, 3, 4, 2, 100),L,0);
	dropgoal(surround(4, 2, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(5, 2, a30), 16, reduce(a30, 700))
agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=3], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.303]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=3], goal=Cell [x=4, y=2], sanction=100, clock=2, time=2015-06-04 11:50:28.303]
[Planbase]:{	adoptObligation(at(5, 2, a30), 16, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(5, 2, a30), 16, reduce(a30, 700))]
[After]:{	adoptObligation(at(5, 2, a30), 16, reduce(a30, 700))
}


object notification: Obligation [subject=a40, obligation=[at(4, 3, a40)], sanction=[reduce(a40, 700)], deadline=16, time=2015-06-04 11:50:28.307, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(5, 2, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


[new scheduled]:[adoptz(at(5, 2, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)]
[After]:{	adoptz(at(5, 2, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


Event processed adoptObligation(at(4, 3, a40), 16, reduce(a40, 700))
obligation to be adopted: at(5, 2, 700) : 4 Jun 2015 11:07:08 GMT, priority 10
[Planbase]:{	adoptObligation(at(4, 3, a40), 16, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(4, 3, a40), 16, reduce(a40, 700))]
[After]:{	adoptObligation(at(4, 3, a40), 16, reduce(a40, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(4, 3, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 3, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)]
[After]:{	adoptz(at(4, 3, 700) : 4 Jun 2015 11:07:08 GMT, priority 10)
}


obligation to be adopted: at(4, 3, 700) : 4 Jun 2015 11:07:08 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-06-04 11:50:32.408]
org notification: Time [clock=3, time=2015-06-04 11:50:32.408]
object notification: Time [clock=3, time=2015-06-04 11:50:32.408]
object notification: Time [clock=3, time=2015-06-04 11:50:32.408]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-04 11:50:42.411]
org notification: Time [clock=4, time=2015-06-04 11:50:42.411]
object notification: Time [clock=4, time=2015-06-04 11:50:42.411]
object notification: Time [clock=4, time=2015-06-04 11:50:42.411]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-06-04 11:50:52.415]
object notification: Time [clock=5, time=2015-06-04 11:50:52.415]
object notification: Time [clock=5, time=2015-06-04 11:50:52.415]
org notification: Time [clock=5, time=2015-06-04 11:50:52.415]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=6, time=2015-06-04 11:51:02.419]
object notification: Time [clock=6, time=2015-06-04 11:51:02.419]
org notification: Time [clock=6, time=2015-06-04 11:51:02.419]
object notification: Time [clock=6, time=2015-06-04 11:51:02.419]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-04 11:51:12.423]
object notification: Time [clock=7, time=2015-06-04 11:51:12.423]
org notification: Time [clock=7, time=2015-06-04 11:51:12.423]
object notification: Time [clock=7, time=2015-06-04 11:51:12.423]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-04 11:51:22.427]
object notification: Time [clock=8, time=2015-06-04 11:51:22.427]
org notification: Time [clock=8, time=2015-06-04 11:51:22.427]
object notification: Time [clock=8, time=2015-06-04 11:51:22.427]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-04 11:51:32.431]
object notification: Time [clock=9, time=2015-06-04 11:51:32.431]
object notification: Time [clock=9, time=2015-06-04 11:51:32.431]
org notification: Time [clock=9, time=2015-06-04 11:51:32.431]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5bd35a6f
[CTAH] The created APLList : [phasechange]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4f7c2b90
[CTAH] The created APLList : [phasechange]
[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3515afd9
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 4,1 color: neco
[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 4,3 color: neco
[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,2 color: neco
object notification: Time [clock=10, time=2015-06-04 11:51:42.434]
object notification: Time [clock=10, time=2015-06-04 11:51:42.434]
org notification: Time [clock=10, time=2015-06-04 11:51:42.434]
object notification: Time [clock=10, time=2015-06-04 11:51:42.434]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [0][1] [1][1] [2][1] [3][1] [4][1] [5][1] [5][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [1,1,no,no]
Event processed UpdateClock(10)
a10[CTAH] paths: 1000
Need to wait 2 more seconds
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, Clock)} else NextStep(1, 1), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, 9)} else NextStep(1, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
}


[Planbase]:{	NextStep(1, 1)
}


[new scheduled]:[NextStep(1, 1)]
[After]:{	NextStep(1, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=1, y=1], time=2015-06-04 11:51:43.493, clock=10]
org notification: Position [subject=a30, id=null, cell=Cell [x=1, y=1], time=2015-06-04 11:51:43.493, clock=10]
object notification: Obligation [subject=a30, obligation=[makeMove(1, 1, a30)], sanction=[reduce(a30, 300)], deadline=25, time=2015-06-04 11:51:43.517, clock=10]
[Planbase]:{	NoNextStep(1, 1)
}


[new scheduled]:[NoNextStep(1, 1)]
[After]:{	NoNextStep(1, 1)
}


Event processed UpdatePosition(1, 1, 10)
Event processed adoptObligation(makeMove(1, 1, a30), 25, reduce(a30, 300))
[Planbase]:{	UpdatePosition(1, 1, 10)
},
{	adoptObligation(makeMove(1, 1, a30), 25, reduce(a30, 300))
}


[new scheduled]:[findNextStep(neco, 700), UpdatePosition(1, 1, 10), adoptObligation(makeMove(1, 1, a30), 25, reduce(a30, 300))]
[After]:{	findNextStep(neco, 700)
},
{	UpdatePosition(1, 1, 10)
},
{	adoptObligation(makeMove(1, 1, a30), 25, reduce(a30, 300))
}


a40[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 11:08:23 GMT, priority 10)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, adoptz(makeMove(1, 1, 300) : 4 Jun 2015 11:08:23 GMT, priority 10)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 11:08:23 GMT, priority 10)
}


obligation to be adopted: makeMove(1, 1, 300) : 4 Jun 2015 11:08:23 GMT, priority 10
[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,2 color: neco
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][3] [4][2] [4][1]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,2,2,1928]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=1928, agent=a10, agent2=a30, clock=10, time=2015-06-04 11:51:45.305]
Event processed UpdateClock(10)
object notification: Obligation [subject=a30, obligation=[respondToRequest(1928)], sanction=[reduce(a30, 300)], deadline=15, time=2015-06-04 11:51:45.324, clock=10]
[Planbase]:{	B(clock(Clock));
	if	B(not 1928=no)
	then	{	NextStep(4, 2, 1928);
			SentProposal(1928, 2, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 1928=no) then {NextStep(4, 2, 1928); SentProposal(1928, 2, open, Clock)} else NextStep(4, 2), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 1928=no)
	then	{	NextStep(4, 2, 1928);
			SentProposal(1928, 2, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not 1928=no)
	then	{	NextStep(4, 2, 1928);
			SentProposal(1928, 2, open, 9)
		}
	else	{	NextStep(4, 2)
		}
}


[new scheduled]:[if B(not 1928=no) then {NextStep(4, 2, 1928); SentProposal(1928, 2, open, 9)} else NextStep(4, 2)]
[After]:{	if	B(not 1928=no)
	then	{	NextStep(4, 2, 1928);
			SentProposal(1928, 2, open, 9)
		}
	else	{	NextStep(4, 2)
		}
}


[Planbase]:{	NextStep(4, 2, 1928);
	SentProposal(1928, 2, open, 9)
}


[new scheduled]:[NextStep(4, 2, 1928); SentProposal(1928, 2, open, 9)]
[After]:{	NextStep(4, 2, 1928);
	SentProposal(1928, 2, open, 9)
}


[Planbase]:{	SentProposal(1928, 2, open, 9)
}


[new scheduled]:[SentProposal(1928, 2, open, 9)]
[After]:{	SentProposal(1928, 2, open, 9)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=5], time=2015-06-04 11:51:46.086, clock=10]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [2][4] [3][4] [3][3] [4][3]

a40[CTAH] moveStepToGoalTest returns I have chip: [3,4,no,no]
Event processed UpdateClock(10)
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 4, no); SentProposal(no, no, open, Clock)} else NextStep(3, 4), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
},
{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 4)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 4, no); SentProposal(no, no, open, 9)} else NextStep(3, 4)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 4)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	NextStep(3, 4)
}


[new scheduled]:[NextStep(3, 4)]
[After]:{	NextStep(3, 4)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 4),L2,0); if B(L2=[actionresult([3,4])]) then {B(clock(Clock)); UpdatePosition(3, 4, Clock)}; NoNextStep(3, 4)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4)
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-06-04 11:51:48.018, clock=10]
object notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-06-04 11:51:48.018, clock=10]
object notification: Obligation [subject=a40, obligation=[makeMove(3, 4, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-04 11:51:48.026, clock=10]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [1][1] [2][1] [2][2] [3][2] [4][2] [5][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [2,1,no,no]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 1928, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1928), 15, reduce(a30, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 1928, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1928), 15, reduce(a30, 300))
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, Clock)} else NextStep(2, 1), @ctenv(functionToList(proposal(proposal, 0, 1928, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1928), 15, reduce(a30, 300))]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 1928, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1928), 15, reduce(a30, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3675f94a
[CTAH] The created APLList : [proposal,0,1928,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1928, 300) : 4 Jun 2015 11:08:28 GMT, priority 10)
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, 10)} else NextStep(2, 1), if B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1928, 300) : 4 Jun 2015 11:08:28 GMT, priority 10)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		}
},
{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1928, 300) : 4 Jun 2015 11:08:28 GMT, priority 10)
}


obligation to be adopted: respondToRequest(1928, 300) : 4 Jun 2015 11:08:28 GMT, priority 10
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	NextStep(2, 1)
},
{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(2, 1), if B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(2, 1)
},
{	if	B([actionresult([proposal,0,1928,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 1928, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(proposal=proposal) then ReceivedProposal(0, 1928, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 1928, open)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
},
{	ReceivedProposal(0, 1928, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1), ReceivedProposal(0, 1928, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
},
{	ReceivedProposal(0, 1928, open)
}


org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=1], time=2015-06-04 11:51:48.549, clock=10]
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=1], time=2015-06-04 11:51:48.549, clock=10]
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a30[CTAH] moveStepToGoal returns: [2,1]
object notification: Points [subject=a30, time=2015-06-04 11:51:48.571, clock=10, value=700, id=null]
Event processed UpdatePosition(2, 1, 10)
Event processed UpdatePoints(700)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1)
},
{	UpdatePosition(2, 1, 10)
},
{	UpdatePoints(700)
}


[new scheduled]:[if G(acceptRequest(1928, 300)) then skip else if B(not scoreAfterExchange(1928, Score)) then getScoreAfterExchange(1928); B(scoreAfterExchange(1928, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer), if G(acceptRequest(1928, V2)) then skip else if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1), UpdatePosition(2, 1, 10), UpdatePoints(700)]
[After]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1928, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1928, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 1928, closed(A)))
							then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1)
},
{	if	G(acceptRequest(1928, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1928, Score))
			then	{	getScoreAfterExchange(1928)
				}
		};
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
},
{	UpdatePosition(2, 1, 10)
},
{	UpdatePoints(700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(2, 1, 10);
	NoNextStep(2, 1)
},
{	if	B(not scoreAfterExchange(1928, Score))
	then	{	getScoreAfterExchange(1928)
		};
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[new scheduled]:[if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), UpdatePosition(2, 1, 10); NoNextStep(2, 1), if B(not scoreAfterExchange(1928, Score)) then getScoreAfterExchange(1928); B(scoreAfterExchange(1928, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer)]
[After]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(2, 1, 10);
	NoNextStep(2, 1)
},
{	if	B(not scoreAfterExchange(1928, Score))
	then	{	getScoreAfterExchange(1928)
		};
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	skip
},
{	NoNextStep(2, 1)
},
{	getScoreAfterExchange(1928);
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[new scheduled]:[skip, NoNextStep(2, 1), getScoreAfterExchange(1928); B(scoreAfterExchange(1928, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer)]
[After]:{	skip
},
{	NoNextStep(2, 1)
},
{	getScoreAfterExchange(1928);
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	GetScoreAfterExchange(1928, yes);
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[new scheduled]:[if G(acceptRequest(1928, V2)) then skip else if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), findNextStep(neco, 700), GetScoreAfterExchange(1928, yes); B(scoreAfterExchange(1928, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer)]
[After]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1928, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1928, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 1928, closed(A)))
							then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(1928, yes);
	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[new scheduled]:[if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(1928, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer)]
[After]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(1928, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	skip
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[new scheduled]:[skip, B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1928, Answer)]
[After]:{	skip
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, Answer)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, accept)
}


[new scheduled]:[if G(acceptRequest(1928, V2)) then skip else if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1928, accept)]
[After]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1928, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1928, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 1928, closed(A)))
							then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1928, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(1928, accept)
}


[new scheduled]:[if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(1928, accept)]
[After]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(1928, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a30[CTAH] going goal: 5,2 color: neco
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a40[CTAH] moveStepToGoal returns: [3,4]
Event processed UpdatePosition(3, 4, 10)
Event processed adoptObligation(makeMove(3, 4, a40), 25, reduce(a40, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4)
},
{	UpdatePosition(3, 4, 10)
},
{	adoptObligation(makeMove(3, 4, a40), 25, reduce(a40, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 4, Clock); NoNextStep(3, 4), UpdatePosition(3, 4, 10), adoptObligation(makeMove(3, 4, a40), 25, reduce(a40, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4)
},
{	UpdatePosition(3, 4, 10)
},
{	adoptObligation(makeMove(3, 4, a40), 25, reduce(a40, 300))
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	UpdatePosition(3, 4, 10);
	NoNextStep(3, 4)
},
{	adoptz(makeMove(3, 4, 300) : 4 Jun 2015 11:08:32 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(3, 4, 10); NoNextStep(3, 4), adoptz(makeMove(3, 4, 300) : 4 Jun 2015 11:08:32 GMT, priority 10)]
[After]:{	UpdatePosition(3, 4, 10);
	NoNextStep(3, 4)
},
{	adoptz(makeMove(3, 4, 300) : 4 Jun 2015 11:08:32 GMT, priority 10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


obligation to be adopted: makeMove(3, 4, 300) : 4 Jun 2015 11:08:32 GMT, priority 10
[Planbase]:{	NoNextStep(3, 4)
}


[new scheduled]:[NoNextStep(3, 4)]
[After]:{	NoNextStep(3, 4)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


object notification: Time [clock=11, time=2015-06-04 11:51:52.435]
object notification: Time [clock=11, time=2015-06-04 11:51:52.435]
object notification: Time [clock=11, time=2015-06-04 11:51:52.435]
org notification: Time [clock=11, time=2015-06-04 11:51:52.435]
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, UpdateClock(11)]
[After]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}, UpdateClock(11)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a40[CTAH] going goal: 4,3 color: neco
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][1] [3][1] [3][2] [4][2] [5][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,1,no,no]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


Event processed UpdateClock(11)
[Planbase]:{	skip
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	sendResponse(1928, accept)
},
{	UpdateClock(11)
}


[new scheduled]:[skip, B(clock(Clock)); if B(not no=no) then {NextStep(3, 1, no); SentProposal(no, no, open, Clock)} else NextStep(3, 1), sendResponse(1928, accept), UpdateClock(11)]
[After]:{	skip
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	sendResponse(1928, accept)
},
{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(3, 1)
		}
},
{	@ctenv(sendResponse(1928, accept),L1,0);
	SentResponse(accept, 1928)
}


[new scheduled]:[if G(acceptRequest(1928, V2)) then skip else if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), if B(not no=no) then {NextStep(3, 1, no); SentProposal(no, no, open, 10)} else NextStep(3, 1), @ctenv(sendResponse(1928, accept),L1,0); SentResponse(accept, 1928)]
[After]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1928, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1928, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(0, 1928, closed(A)))
							then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(3, 1)
		}
},
{	@ctenv(sendResponse(1928, accept),L1,0);
	SentResponse(accept, 1928)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 0.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=1928, response=accepted, clock=11, time=2015-06-04 11:51:52.913]
Event processed @ctenv(functionToList(message(response, 1928, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NextStep(3, 1)
}


[new scheduled]:[if G(respondToRequest(1928, V2)) then skip else if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), NextStep(3, 1)]
[After]:{	if	G(respondToRequest(1928, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1928, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(0, 1928, closed(A)))
					then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NextStep(3, 1)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	@ctenv(functionToList(message(response, 1928, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}, @ctenv(functionToList(message(response, 1928, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	@ctenv(functionToList(message(response, 1928, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@726fc469
[CTAH] The created APLList : [response,1928,accept]
[Planbase]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 1928, closed(A)))
			then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(1928, V2)) then skip else if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1928, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 1928, closed(A)))
			then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1928)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 1928)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1928)
		}
}


[Planbase]:{	if	B(not receivedP(0, 1928, closed(A)))
	then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1)
}


[new scheduled]:[if B(not receivedP(0, 1928, closed(A))) then adoptz(respondToRequest(1928, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 3, 1),L2,0); if B(L2=[actionresult([3,1])]) then {B(clock(Clock)); UpdatePosition(3, 1, Clock)}; NoNextStep(3, 1)]
[After]:{	if	B(not receivedP(0, 1928, closed(A)))
	then	{	adoptz(respondToRequest(1928, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	ReceivedResponse(accept, 1928)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}, ReceivedResponse(accept, 1928)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
},
{	ReceivedResponse(accept, 1928)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-04 11:51:53.251, clock=11]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-04 11:51:53.251, clock=11]
Event processed UpdatePosition(3, 1, 11)
[Planbase]:{	NoNextStep(3, 1)
},
{	UpdatePosition(3, 1, 11)
}


[new scheduled]:[NoNextStep(3, 1), UpdatePosition(3, 1, 11)]
[After]:{	NoNextStep(3, 1)
},
{	UpdatePosition(3, 1, 11)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 2, 1928); ReceivedResponse(noresponse, 1928)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 2, 1928);
			ReceivedResponse(noresponse, 1928)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 1928)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2, 1928)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 1928)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-04 11:51:53.689, clock=11]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-04 11:51:53.689, clock=11]
object notification: Obligation [subject=a10, obligation=[makeMove(4, 2, a10)], sanction=[reduce(a10, 300)], deadline=26, time=2015-06-04 11:51:53.694, clock=11]
[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,2 color: neco
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a10[CTAH] moveStepToGoal returns: [4,2]
Event processed UpdatePosition(4, 2, 11)
Event processed adoptObligation(makeMove(4, 2, a10), 26, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2, 1928)
},
{	UpdatePosition(4, 2, 11)
},
{	adoptObligation(makeMove(4, 2, a10), 26, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 2, Clock); NoNextStep(4, 2, 1928), UpdatePosition(4, 2, 11), adoptObligation(makeMove(4, 2, a10), 26, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2, 1928)
},
{	UpdatePosition(4, 2, 11)
},
{	adoptObligation(makeMove(4, 2, a10), 26, reduce(a10, 300))
}


[Planbase]:{	UpdatePosition(4, 2, 11);
	NoNextStep(4, 2, 1928)
},
{	adoptz(makeMove(4, 2, 300) : 4 Jun 2015 11:08:36 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(4, 2, 11); NoNextStep(4, 2, 1928), adoptz(makeMove(4, 2, 300) : 4 Jun 2015 11:08:36 GMT, priority 10)]
[After]:{	UpdatePosition(4, 2, 11);
	NoNextStep(4, 2, 1928)
},
{	adoptz(makeMove(4, 2, 300) : 4 Jun 2015 11:08:36 GMT, priority 10)
}


obligation to be adopted: makeMove(4, 2, 300) : 4 Jun 2015 11:08:36 GMT, priority 10
[Planbase]:{	NoNextStep(4, 2, 1928)
}


[new scheduled]:[NoNextStep(4, 2, 1928)]
[After]:{	NoNextStep(4, 2, 1928)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 4,1 color: neco
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][1] [4][1] [4][2] [5][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [4,1,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, Clock)} else NextStep(4, 1)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, 11)} else NextStep(4, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[Planbase]:{	NextStep(4, 1)
}


[new scheduled]:[NextStep(4, 1)]
[After]:{	NextStep(4, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 1),L2,0); if B(L2=[actionresult([4,1])]) then {B(clock(Clock)); UpdatePosition(4, 1, Clock)}; NoNextStep(4, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=1], time=2015-06-04 11:51:59.641, clock=11]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=1], time=2015-06-04 11:51:59.641, clock=11]
[Planbase]:{	NoNextStep(4, 1)
}


[new scheduled]:[NoNextStep(4, 1)]
[After]:{	NoNextStep(4, 1)
}


Event processed UpdatePosition(4, 1, 11)
[Planbase]:{	UpdatePosition(4, 1, 11)
}


[new scheduled]:[findNextStep(neco, 700), UpdatePosition(4, 1, 11)]
[After]:{	findNextStep(neco, 700)
},
{	UpdatePosition(4, 1, 11)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,2 color: neco
a40[CTAH] path: 0
a40[CTAH] path: Path: [3][4] [3][3] [4][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:3,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [3,3,1,3178]
org notification: Proposal [id=3178, agent=a40, agent2=a20, clock=11, time=2015-06-04 11:51:59.982]
[Planbase]:{	B(clock(Clock));
	if	B(not 3178=no)
	then	{	NextStep(3, 3, 3178);
			SentProposal(3178, 1, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 3178=no) then {NextStep(3, 3, 3178); SentProposal(3178, 1, open, Clock)} else NextStep(3, 3)]
[After]:{	B(clock(Clock));
	if	B(not 3178=no)
	then	{	NextStep(3, 3, 3178);
			SentProposal(3178, 1, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


[Planbase]:{	if	B(not 3178=no)
	then	{	NextStep(3, 3, 3178);
			SentProposal(3178, 1, open, 11)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[if B(not 3178=no) then {NextStep(3, 3, 3178); SentProposal(3178, 1, open, 11)} else NextStep(3, 3)]
[After]:{	if	B(not 3178=no)
	then	{	NextStep(3, 3, 3178);
			SentProposal(3178, 1, open, 11)
		}
	else	{	NextStep(3, 3)
		}
}


[Planbase]:{	NextStep(3, 3, 3178);
	SentProposal(3178, 1, open, 11)
}


[new scheduled]:[NextStep(3, 3, 3178); SentProposal(3178, 1, open, 11)]
[After]:{	NextStep(3, 3, 3178);
	SentProposal(3178, 1, open, 11)
}


[Planbase]:{	SentProposal(3178, 1, open, 11)
}


[new scheduled]:[SentProposal(3178, 1, open, 11)]
[After]:{	SentProposal(3178, 1, open, 11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=5], time=2015-06-04 11:52:01.709, clock=11]
[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


object notification: Time [clock=12, time=2015-06-04 11:52:02.438]
object notification: Time [clock=12, time=2015-06-04 11:52:02.438]
object notification: Time [clock=12, time=2015-06-04 11:52:02.438]
org notification: Time [clock=12, time=2015-06-04 11:52:02.438]
Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}, UpdateClock(12)]
[After]:{	B(timetowait(Wait));
	if	B(11>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(11>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(11>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [4][2] [4][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [4,1,no,no]
Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, Clock)} else NextStep(4, 1), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, 11)} else NextStep(4, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	NextStep(4, 1)
}


[new scheduled]:[NextStep(4, 1)]
[After]:{	NextStep(4, 1)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 1),L2,0); if B(L2=[actionresult([4,1])]) then {B(clock(Clock)); UpdatePosition(4, 1, Clock)}; NoNextStep(4, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-04 11:52:08.912, clock=12]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-04 11:52:08.912, clock=12]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=3178, response=rejected, clock=12, time=2015-06-04 11:52:08.985]
Event processed @ctenv(functionToList(message(response, 3178, reject)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	@ctenv(functionToList(message(response, 3178, reject)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}, @ctenv(functionToList(message(response, 3178, reject)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	@ctenv(functionToList(message(response, 3178, reject)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@45378e64
[CTAH] The created APLList : [response,3178,reject]
[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(reject, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}, if B(response=response) then ReceivedResponse(reject, 3178)]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(reject, 3178)
		}
}


[Planbase]:{	ReceivedResponse(reject, 3178)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(reject, 3178)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(reject, 3178)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>11+Wait) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(12>11+Wait)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(12>11+7) then {NoNextStep(3, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(12>11+7)
	then	{	NoNextStep(3, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 3178)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3, 3178)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 3178)
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:52:09.309, clock=12]
object notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:52:09.309, clock=12]
a10[CTAH] moveStepToGoal returns: [4,1]
Event processed UpdatePosition(4, 1, 12)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1)
},
{	UpdatePosition(4, 1, 12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 1, Clock); NoNextStep(4, 1), UpdatePosition(4, 1, 12)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1)
},
{	UpdatePosition(4, 1, 12)
}


[Planbase]:{	UpdatePosition(4, 1, 12);
	NoNextStep(4, 1)
}


[new scheduled]:[UpdatePosition(4, 1, 12); NoNextStep(4, 1)]
[After]:{	UpdatePosition(4, 1, 12);
	NoNextStep(4, 1)
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [4][1] [4][2] [5][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [4,2,no,no]
Event processed UpdateClock(12)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 2, no); SentProposal(no, no, open, Clock)} else NextStep(4, 2), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 2, no); SentProposal(no, no, open, 11)} else NextStep(4, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 2)
		}
}


[Planbase]:{	NextStep(4, 2)
}


[new scheduled]:[NextStep(4, 2)]
[After]:{	NextStep(4, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-04 11:52:12.247, clock=12]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-04 11:52:12.247, clock=12]
Event processed UpdatePosition(4, 2, 12)
[Planbase]:{	NoNextStep(4, 2)
},
{	UpdatePosition(4, 2, 12)
}


[new scheduled]:[NoNextStep(4, 2), UpdatePosition(4, 2, 12)]
[After]:{	NoNextStep(4, 2)
},
{	UpdatePosition(4, 2, 12)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a40[CTAH] moveStepToGoal returns: no
Event processed UpdatePosition(3, 3, 12)
[Planbase]:{	NoNextStep(3, 3, 3178)
},
{	UpdatePosition(3, 3, 12)
}


[new scheduled]:[NoNextStep(3, 3, 3178), UpdatePosition(3, 3, 12)]
[After]:{	NoNextStep(3, 3, 3178)
},
{	UpdatePosition(3, 3, 12)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


object notification: Time [clock=13, time=2015-06-04 11:52:12.44]
object notification: Time [clock=13, time=2015-06-04 11:52:12.44]
org notification: Time [clock=13, time=2015-06-04 11:52:12.44]
object notification: Time [clock=13, time=2015-06-04 11:52:12.44]
Event processed UpdateClock(13)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, UpdateClock(13)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, UpdateClock(13)]
[After]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,2 color: neco
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 4,3 color: neco
a40[CTAH] paths: 1000
Need to wait 4 more seconds
org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=4], time=2015-06-04 11:52:16.382, clock=13]
a40[CTAH] path: 0
a40[CTAH] path: Path: [3][4] [3][3] [4][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:3,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [3,3,0,7003]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=7003, agent=a40, agent2=a10, clock=13, time=2015-06-04 11:52:19.92]
object notification: Obligation [subject=a10, obligation=[respondToRequest(7003)], sanction=[reduce(a10, 300)], deadline=18, time=2015-06-04 11:52:19.923, clock=13]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(not 7003=no)
	then	{	NextStep(3, 3, 7003);
			SentProposal(7003, 0, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 7003=no) then {NextStep(3, 3, 7003); SentProposal(7003, 0, open, Clock)} else NextStep(3, 3)]
[After]:{	B(clock(Clock));
	if	B(not 7003=no)
	then	{	NextStep(3, 3, 7003);
			SentProposal(7003, 0, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 3, 7003, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(7003), 18, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 3, 7003, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7003), 18, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 3, 7003, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(7003), 18, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 3, 7003, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7003), 18, reduce(a10, 300))
}


[Planbase]:{	if	B(not 7003=no)
	then	{	NextStep(3, 3, 7003);
			SentProposal(7003, 0, open, 13)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[if B(not 7003=no) then {NextStep(3, 3, 7003); SentProposal(7003, 0, open, 13)} else NextStep(3, 3)]
[After]:{	if	B(not 7003=no)
	then	{	NextStep(3, 3, 7003);
			SentProposal(7003, 0, open, 13)
		}
	else	{	NextStep(3, 3)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6ea132cb
[CTAH] The created APLList : [proposal,3,7003,open]
[Planbase]:{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7003, 300) : 4 Jun 2015 11:09:00 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(7003, 300) : 4 Jun 2015 11:09:00 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7003, 300) : 4 Jun 2015 11:09:00 GMT, priority 10)
}


[Planbase]:{	NextStep(3, 3, 7003);
	SentProposal(7003, 0, open, 13)
}


[new scheduled]:[NextStep(3, 3, 7003); SentProposal(7003, 0, open, 13)]
[After]:{	NextStep(3, 3, 7003);
	SentProposal(7003, 0, open, 13)
}


obligation to be adopted: respondToRequest(7003, 300) : 4 Jun 2015 11:09:00 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,3,7003,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(7003, 0, open, 13)
}


[new scheduled]:[SentProposal(7003, 0, open, 13)]
[After]:{	SentProposal(7003, 0, open, 13)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7003, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(3, 7003, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7003, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(3, 7003, open)
}


[new scheduled]:[ReceivedProposal(3, 7003, open)]
[After]:{	ReceivedProposal(3, 7003, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(7003, 300)) then skip else if B(not scoreAfterExchange(7003, Score)) then getScoreAfterExchange(7003); B(scoreAfterExchange(7003, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer), if G(acceptRequest(7003, V2)) then skip else if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7003, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7003, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7003, closed(A)))
							then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(7003, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(7003, Score))
			then	{	getScoreAfterExchange(7003)
				}
		};
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7003, Score))
	then	{	getScoreAfterExchange(7003)
		};
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[new scheduled]:[if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), if B(not scoreAfterExchange(7003, Score)) then getScoreAfterExchange(7003); B(scoreAfterExchange(7003, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer)]
[After]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7003, Score))
	then	{	getScoreAfterExchange(7003)
		};
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(7003);
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(7003); B(scoreAfterExchange(7003, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(7003);
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	GetScoreAfterExchange(7003, yes);
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[new scheduled]:[if G(acceptRequest(7003, V2)) then skip else if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), GetScoreAfterExchange(7003, yes); B(scoreAfterExchange(7003, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer)]
[After]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7003, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7003, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7003, closed(A)))
							then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(7003, yes);
	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[new scheduled]:[if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), B(scoreAfterExchange(7003, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer)]
[After]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7003, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7003, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, accept)
}


[new scheduled]:[if G(acceptRequest(7003, V2)) then skip else if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7003, accept)]
[After]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7003, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7003, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7003, closed(A)))
							then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7003, accept)
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7003, accept)
}


[new scheduled]:[if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7003, accept)]
[After]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7003, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(7003, accept)
}


[new scheduled]:[skip, sendResponse(7003, accept)]
[After]:{	skip
},
{	sendResponse(7003, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[Planbase]:{	@ctenv(sendResponse(7003, accept),L1,0);
	SentResponse(accept, 7003)
}


[new scheduled]:[if G(acceptRequest(7003, V2)) then skip else if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10), @ctenv(sendResponse(7003, accept),L1,0); SentResponse(accept, 7003)]
[After]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7003, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7003, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7003, closed(A)))
							then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(7003, accept),L1,0);
	SentResponse(accept, 7003)
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
}


Need to wait 0 more seconds
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=7003, response=accepted, clock=13, time=2015-06-04 11:52:21.199]
Event processed @ctenv(functionToList(message(response, 7003, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(7003, V2)) then skip else if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(7003, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7003, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7003, closed(A)))
					then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 7003, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 7003, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 7003, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7b958d2f
[CTAH] The created APLList : [response,7003,accept]
[Planbase]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 7003, closed(A)))
			then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(7003, V2)) then skip else if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7003, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 7003, closed(A)))
			then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7003)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}, if B(response=response) then ReceivedResponse(accept, 7003)]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7003)
		}
}


[Planbase]:{	if	B(not receivedP(3, 7003, closed(A)))
	then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(3, 7003, closed(A))) then adoptz(respondToRequest(7003, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(3, 7003, closed(A)))
	then	{	adoptz(respondToRequest(7003, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
},
{	ReceivedResponse(accept, 7003)
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(3, 3, 7003); ReceivedResponse(noresponse, 7003)}, ReceivedResponse(accept, 7003)]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(3, 3, 7003);
			ReceivedResponse(noresponse, 7003)
		}
},
{	ReceivedResponse(accept, 7003)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 7003)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3, 7003)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 7003)
}


Need to wait 3 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:52:21.613, clock=13]
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:52:21.613, clock=13]
object notification: Time [clock=14, time=2015-06-04 11:52:22.443]
object notification: Time [clock=14, time=2015-06-04 11:52:22.443]
object notification: Time [clock=14, time=2015-06-04 11:52:22.443]
org notification: Time [clock=14, time=2015-06-04 11:52:22.443]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] moveStepToGoal returns: [3,3]
Event processed UpdatePosition(3, 3, 13)
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3, 7003)
},
{	UpdatePosition(3, 3, 13)
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 3, Clock); NoNextStep(3, 3, 7003), UpdatePosition(3, 3, 13), UpdateClock(14)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 3, Clock);
	NoNextStep(3, 3, 7003)
},
{	UpdatePosition(3, 3, 13)
},
{	UpdateClock(14)
}


[Planbase]:{	UpdatePosition(3, 3, 13);
	NoNextStep(3, 3, 7003)
}


[new scheduled]:[UpdatePosition(3, 3, 13); NoNextStep(3, 3, 7003)]
[After]:{	UpdatePosition(3, 3, 13);
	NoNextStep(3, 3, 7003)
}


[Planbase]:{	NoNextStep(3, 3, 7003)
}


[new scheduled]:[NoNextStep(3, 3, 7003)]
[After]:{	NoNextStep(3, 3, 7003)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 4,3 color: neco
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [4][2] [5][2]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,2,0,6379]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=6379, agent=a30, agent2=a10, clock=14, time=2015-06-04 11:52:27.041]
object notification: Obligation [subject=a10, obligation=[respondToRequest(6379)], sanction=[reduce(a10, 300)], deadline=19, time=2015-06-04 11:52:27.044, clock=14]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	if	B(not 6379=no)
	then	{	NextStep(5, 2, 6379);
			SentProposal(6379, 0, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(not 6379=no) then {NextStep(5, 2, 6379); SentProposal(6379, 0, open, Clock)} else NextStep(5, 2), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(not 6379=no)
	then	{	NextStep(5, 2, 6379);
			SentProposal(6379, 0, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(14)
}


Event processed @ctenv(functionToList(proposal(proposal, 2, 6379, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(6379), 19, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 6379, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6379), 19, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 2, 6379, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(6379), 19, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 2, 6379, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6379), 19, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@273bfe0e
[CTAH] The created APLList : [proposal,2,6379,open]
[Planbase]:{	if	B(not 6379=no)
	then	{	NextStep(5, 2, 6379);
			SentProposal(6379, 0, open, 13)
		}
	else	{	NextStep(5, 2)
		}
}


[new scheduled]:[if B(not 6379=no) then {NextStep(5, 2, 6379); SentProposal(6379, 0, open, 13)} else NextStep(5, 2)]
[After]:{	if	B(not 6379=no)
	then	{	NextStep(5, 2, 6379);
			SentProposal(6379, 0, open, 13)
		}
	else	{	NextStep(5, 2)
		}
}


[Planbase]:{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6379, 300) : 4 Jun 2015 11:09:07 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(6379, 300) : 4 Jun 2015 11:09:07 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6379, 300) : 4 Jun 2015 11:09:07 GMT, priority 10)
}


[Planbase]:{	NextStep(5, 2, 6379);
	SentProposal(6379, 0, open, 13)
}


[new scheduled]:[NextStep(5, 2, 6379); SentProposal(6379, 0, open, 13)]
[After]:{	NextStep(5, 2, 6379);
	SentProposal(6379, 0, open, 13)
}


obligation to be adopted: respondToRequest(6379, 300) : 4 Jun 2015 11:09:07 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,2,6379,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(6379, 0, open, 13)
}


[new scheduled]:[SentProposal(6379, 0, open, 13)]
[After]:{	SentProposal(6379, 0, open, 13)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6379, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(2, 6379, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6379, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(2, 6379, open)
}


[new scheduled]:[ReceivedProposal(2, 6379, open)]
[After]:{	ReceivedProposal(2, 6379, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(6379, 300)) then skip else if B(not scoreAfterExchange(6379, Score)) then getScoreAfterExchange(6379); B(scoreAfterExchange(6379, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer), if G(acceptRequest(6379, V2)) then skip else if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6379, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6379, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6379, closed(A)))
							then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(6379, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(6379, Score))
			then	{	getScoreAfterExchange(6379)
				}
		};
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(6379, Score))
	then	{	getScoreAfterExchange(6379)
		};
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[new scheduled]:[if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), if B(not scoreAfterExchange(6379, Score)) then getScoreAfterExchange(6379); B(scoreAfterExchange(6379, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer)]
[After]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(6379, Score))
	then	{	getScoreAfterExchange(6379)
		};
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(6379);
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(6379); B(scoreAfterExchange(6379, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(6379);
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	GetScoreAfterExchange(6379, yes);
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[new scheduled]:[if G(acceptRequest(6379, V2)) then skip else if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), GetScoreAfterExchange(6379, yes); B(scoreAfterExchange(6379, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer)]
[After]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6379, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6379, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6379, closed(A)))
							then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(6379, yes);
	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[new scheduled]:[if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), B(scoreAfterExchange(6379, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer)]
[After]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(6379, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6379, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, accept)
}


[new scheduled]:[if G(acceptRequest(6379, V2)) then skip else if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(6379, accept)]
[After]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6379, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6379, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6379, closed(A)))
							then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6379, accept)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(6379, accept)
}


[new scheduled]:[if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), B(accept=accept); sendResponse(6379, accept)]
[After]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(6379, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(6379, accept)
}


[new scheduled]:[skip, sendResponse(6379, accept)]
[After]:{	skip
},
{	sendResponse(6379, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[Planbase]:{	@ctenv(sendResponse(6379, accept),L1,0);
	SentResponse(accept, 6379)
}


[new scheduled]:[if G(acceptRequest(6379, V2)) then skip else if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10), @ctenv(sendResponse(6379, accept),L1,0); SentResponse(accept, 6379)]
[After]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(6379, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(6379, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 6379, closed(A)))
							then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(6379, accept),L1,0);
	SentResponse(accept, 6379)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
}


Need to wait 0 more seconds
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=6379, response=accepted, clock=14, time=2015-06-04 11:52:28.366]
Event processed @ctenv(functionToList(message(response, 6379, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(6379, V2)) then skip else if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(6379, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(6379, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 6379, closed(A)))
					then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 6379, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 6379, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 6379, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@65595687
[CTAH] The created APLList : [response,6379,accept]
[Planbase]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 6379, closed(A)))
			then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(6379, V2)) then skip else if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(6379, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 6379, closed(A)))
			then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6379)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}, if B(response=response) then ReceivedResponse(accept, 6379)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6379)
		}
}


[Planbase]:{	if	B(not receivedP(2, 6379, closed(A)))
	then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(2, 6379, closed(A))) then adoptz(respondToRequest(6379, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(2, 6379, closed(A)))
	then	{	adoptz(respondToRequest(6379, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
},
{	ReceivedResponse(accept, 6379)
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(5, 2, 6379); ReceivedResponse(noresponse, 6379)}, ReceivedResponse(accept, 6379)]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(5, 2, 6379);
			ReceivedResponse(noresponse, 6379)
		}
},
{	ReceivedResponse(accept, 6379)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 6379)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2, 6379)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 6379)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-04 11:52:28.797, clock=14]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-04 11:52:28.797, clock=14]
Event processed UpdatePosition(5, 2, 14)
[Planbase]:{	NoNextStep(5, 2, 6379)
},
{	UpdatePosition(5, 2, 14)
}


[new scheduled]:[NoNextStep(5, 2, 6379), UpdatePosition(5, 2, 14)]
[After]:{	NoNextStep(5, 2, 6379)
},
{	UpdatePosition(5, 2, 14)
}


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] paths: 1000
Need to wait 3 more seconds
org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=3], time=2015-06-04 11:52:30.182, clock=14]
a40[CTAH] path: 0
a40[CTAH] path: Path: [3][3] [4][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found any chip....: (R:4,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [4,3,0,7731]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=7731, agent=a40, agent2=a10, clock=14, time=2015-06-04 11:52:31.941]
object notification: Obligation [subject=a10, obligation=[respondToRequest(7731)], sanction=[reduce(a10, 300)], deadline=19, time=2015-06-04 11:52:31.945, clock=14]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(not 7731=no)
	then	{	NextStep(4, 3, 7731);
			SentProposal(7731, 0, open, Clock)
		}
	else	{	NextStep(4, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 7731=no) then {NextStep(4, 3, 7731); SentProposal(7731, 0, open, Clock)} else NextStep(4, 3)]
[After]:{	B(clock(Clock));
	if	B(not 7731=no)
	then	{	NextStep(4, 3, 7731);
			SentProposal(7731, 0, open, Clock)
		}
	else	{	NextStep(4, 3)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 3, 7731, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(7731), 19, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 3, 7731, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7731), 19, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 3, 7731, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(7731), 19, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 3, 7731, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7731), 19, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@21c41d0d
[CTAH] The created APLList : [proposal,3,7731,open]
[Planbase]:{	if	B(not 7731=no)
	then	{	NextStep(4, 3, 7731);
			SentProposal(7731, 0, open, 14)
		}
	else	{	NextStep(4, 3)
		}
}


[new scheduled]:[if B(not 7731=no) then {NextStep(4, 3, 7731); SentProposal(7731, 0, open, 14)} else NextStep(4, 3)]
[After]:{	if	B(not 7731=no)
	then	{	NextStep(4, 3, 7731);
			SentProposal(7731, 0, open, 14)
		}
	else	{	NextStep(4, 3)
		}
}


[Planbase]:{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7731, 300) : 4 Jun 2015 11:09:12 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(7731, 300) : 4 Jun 2015 11:09:12 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7731, 300) : 4 Jun 2015 11:09:12 GMT, priority 10)
}


obligation to be adopted: respondToRequest(7731, 300) : 4 Jun 2015 11:09:12 GMT, priority 10
[Planbase]:{	NextStep(4, 3, 7731);
	SentProposal(7731, 0, open, 14)
}


[new scheduled]:[NextStep(4, 3, 7731); SentProposal(7731, 0, open, 14)]
[After]:{	NextStep(4, 3, 7731);
	SentProposal(7731, 0, open, 14)
}


[Planbase]:{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,3,7731,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(7731, 0, open, 14)
}


[new scheduled]:[SentProposal(7731, 0, open, 14)]
[After]:{	SentProposal(7731, 0, open, 14)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7731, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(3, 7731, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7731, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(3, 7731, open)
}


[new scheduled]:[ReceivedProposal(3, 7731, open)]
[After]:{	ReceivedProposal(3, 7731, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(7731, 300)) then skip else if B(not scoreAfterExchange(7731, Score)) then getScoreAfterExchange(7731); B(scoreAfterExchange(7731, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer), if G(acceptRequest(7731, V2)) then skip else if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7731, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7731, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7731, closed(A)))
							then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(7731, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(7731, Score))
			then	{	getScoreAfterExchange(7731)
				}
		};
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7731, Score))
	then	{	getScoreAfterExchange(7731)
		};
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[new scheduled]:[if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), if B(not scoreAfterExchange(7731, Score)) then getScoreAfterExchange(7731); B(scoreAfterExchange(7731, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer)]
[After]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7731, Score))
	then	{	getScoreAfterExchange(7731)
		};
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


object notification: Time [clock=15, time=2015-06-04 11:52:32.445]
object notification: Time [clock=15, time=2015-06-04 11:52:32.445]
org notification: Time [clock=15, time=2015-06-04 11:52:32.445]
object notification: Time [clock=15, time=2015-06-04 11:52:32.445]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
[Planbase]:{	skip
},
{	getScoreAfterExchange(7731);
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
},
{	UpdateClock(15)
}


[new scheduled]:[skip, getScoreAfterExchange(7731); B(scoreAfterExchange(7731, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer), UpdateClock(15)]
[After]:{	skip
},
{	getScoreAfterExchange(7731);
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}, UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	GetScoreAfterExchange(7731, yes);
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[new scheduled]:[if G(acceptRequest(7731, V2)) then skip else if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), GetScoreAfterExchange(7731, yes); B(scoreAfterExchange(7731, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer)]
[After]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7731, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7731, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7731, closed(A)))
							then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(7731, yes);
	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[new scheduled]:[if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), B(scoreAfterExchange(7731, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer)]
[After]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7731, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7731, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, accept)
}


[new scheduled]:[if G(acceptRequest(7731, V2)) then skip else if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7731, accept)]
[After]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7731, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7731, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7731, closed(A)))
							then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7731, accept)
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7731, accept)
}


[new scheduled]:[if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7731, accept)]
[After]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7731, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(7731, accept)
}


[new scheduled]:[skip, sendResponse(7731, accept)]
[After]:{	skip
},
{	sendResponse(7731, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	@ctenv(sendResponse(7731, accept),L1,0);
	SentResponse(accept, 7731)
}


[new scheduled]:[if G(acceptRequest(7731, V2)) then skip else if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10), @ctenv(sendResponse(7731, accept),L1,0); SentResponse(accept, 7731)]
[After]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7731, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7731, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 7731, closed(A)))
							then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(7731, accept),L1,0);
	SentResponse(accept, 7731)
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


Need to wait 1 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=7731, response=accepted, clock=15, time=2015-06-04 11:52:34.101]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(7731, V2)) then skip else if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(7731, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7731, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 7731, closed(A)))
					then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
						}
				}
		}
}


Event processed @ctenv(functionToList(message(response, 7731, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	@ctenv(functionToList(message(response, 7731, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}, @ctenv(functionToList(message(response, 7731, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	@ctenv(functionToList(message(response, 7731, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3a9d93cc
[CTAH] The created APLList : [response,7731,accept]
[Planbase]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 7731, closed(A)))
			then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(7731, V2)) then skip else if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7731, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 7731, closed(A)))
			then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}, if B(response=response) then ReceivedResponse(accept, 7731)]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7731)
		}
}


[Planbase]:{	if	B(not receivedP(3, 7731, closed(A)))
	then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(3, 7731, closed(A))) then adoptz(respondToRequest(7731, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(3, 7731, closed(A)))
	then	{	adoptz(respondToRequest(7731, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	ReceivedResponse(accept, 7731)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7731)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7731)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>14+Wait) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	B(timetowait(Wait));
	if	B(15>14+Wait)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[new scheduled]:[if B(15>14+7) then {NoNextStep(4, 3, 7731); ReceivedResponse(noresponse, 7731)}]
[After]:{	if	B(15>14+7)
	then	{	NoNextStep(4, 3, 7731);
			ReceivedResponse(noresponse, 7731)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3, 7731)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 3),L2,0); if B(L2=[actionresult([4,3])]) then {B(clock(Clock)); UpdatePosition(4, 3, Clock)}; NoNextStep(4, 3, 7731)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3, 7731)
}


Need to wait 3 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-06-04 11:52:34.511, clock=15]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-06-04 11:52:34.511, clock=15]
a40[CTAH] moveStepToGoal returns: [4,3]
Event processed UpdatePosition(4, 3, 15)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3, 7731)
},
{	UpdatePosition(4, 3, 15)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 3, Clock); NoNextStep(4, 3, 7731), UpdatePosition(4, 3, 15)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3, 7731)
},
{	UpdatePosition(4, 3, 15)
}


[Planbase]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3, 7731)
}


[new scheduled]:[UpdatePosition(4, 3, 15); NoNextStep(4, 3, 7731)]
[After]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3, 7731)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=16, time=2015-06-04 11:52:42.447]
org notification: Time [clock=16, time=2015-06-04 11:52:42.447]
object notification: Time [clock=16, time=2015-06-04 11:52:42.447]
object notification: Time [clock=16, time=2015-06-04 11:52:42.447]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=2], time=2015-06-04 11:52:42.94, clock=16]
org notification: Time [clock=17, time=2015-06-04 11:52:52.451]
object notification: Time [clock=17, time=2015-06-04 11:52:52.451]
object notification: Time [clock=17, time=2015-06-04 11:52:52.451]
object notification: Time [clock=17, time=2015-06-04 11:52:52.451]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=18, time=2015-06-04 11:53:02.454]
org notification: Time [clock=18, time=2015-06-04 11:53:02.454]
object notification: Time [clock=18, time=2015-06-04 11:53:02.454]
object notification: Time [clock=18, time=2015-06-04 11:53:02.454]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=19, time=2015-06-04 11:53:12.457]
object notification: Time [clock=19, time=2015-06-04 11:53:12.457]
object notification: Time [clock=19, time=2015-06-04 11:53:12.457]
object notification: Time [clock=19, time=2015-06-04 11:53:12.457]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=20, time=2015-06-04 11:53:22.461]
object notification: Time [clock=20, time=2015-06-04 11:53:22.461]
org notification: Time [clock=20, time=2015-06-04 11:53:22.461]
object notification: Time [clock=20, time=2015-06-04 11:53:22.461]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=21, time=2015-06-04 11:53:32.464]
org notification: Time [clock=21, time=2015-06-04 11:53:32.464]
object notification: Time [clock=21, time=2015-06-04 11:53:32.464]
object notification: Time [clock=21, time=2015-06-04 11:53:32.464]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@385580a7
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@3bfcc480
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@56eca1ec
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-06-04 11:53:42.468]
object notification: Time [clock=22, time=2015-06-04 11:53:42.468]
object notification: Time [clock=22, time=2015-06-04 11:53:42.468]
org notification: Time [clock=22, time=2015-06-04 11:53:42.468]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:4,C:3).
Chips: { chips  'blue':2 'white':3 'brown':0 'yellow':3 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:5,C:2).
Chips: { chips  'blue':3 'white':2 'brown':0 'yellow':1 }.
Score: 700.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:4,C:1).
Chips: { chips  'blue':2 'white':0 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7e537f90
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@17e6c5d4
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@12ca8dfe
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=23, time=2015-06-04 11:53:52.471]
object notification: Time [clock=23, time=2015-06-04 11:53:52.471]
object notification: Time [clock=23, time=2015-06-04 11:53:52.471]
object notification: Time [clock=23, time=2015-06-04 11:53:52.471]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=24, time=2015-06-04 11:54:02.474]
object notification: Time [clock=24, time=2015-06-04 11:54:02.474]
object notification: Time [clock=24, time=2015-06-04 11:54:02.474]
object notification: Time [clock=24, time=2015-06-04 11:54:02.474]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=25, time=2015-06-04 11:54:12.476]
org notification: Time [clock=25, time=2015-06-04 11:54:12.476]
object notification: Time [clock=25, time=2015-06-04 11:54:12.476]
object notification: Time [clock=25, time=2015-06-04 11:54:12.476]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-06-04 11:54:22.478]
object notification: Time [clock=26, time=2015-06-04 11:54:22.478]
org notification: Time [clock=26, time=2015-06-04 11:54:22.478]
object notification: Time [clock=26, time=2015-06-04 11:54:22.478]
object notification: Points [subject=a40, time=2015-06-04 11:54:22.498, clock=26, value=700, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdatePoints(700)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
},
{	UpdatePoints(700)
}


[new scheduled]:[UpdateClock(26), UpdatePoints(700)]
[After]:{	UpdateClock(26)
},
{	UpdatePoints(700)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=27, time=2015-06-04 11:54:32.482]
object notification: Time [clock=27, time=2015-06-04 11:54:32.482]
object notification: Time [clock=27, time=2015-06-04 11:54:32.482]
object notification: Time [clock=27, time=2015-06-04 11:54:32.482]
object notification: Points [subject=a10, time=2015-06-04 11:54:32.497, clock=27, value=700, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdatePoints(700)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
},
{	UpdatePoints(700)
}


[new scheduled]:[UpdateClock(27), UpdatePoints(700)]
[After]:{	UpdateClock(27)
},
{	UpdatePoints(700)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=28, time=2015-06-04 11:54:42.486]
object notification: Time [clock=28, time=2015-06-04 11:54:42.486]
object notification: Time [clock=28, time=2015-06-04 11:54:42.486]
object notification: Time [clock=28, time=2015-06-04 11:54:42.486]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=29, time=2015-06-04 11:54:52.488]
object notification: Time [clock=29, time=2015-06-04 11:54:52.488]
object notification: Time [clock=29, time=2015-06-04 11:54:52.488]
object notification: Time [clock=29, time=2015-06-04 11:54:52.488]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-04 11:55:02.492]
object notification: Time [clock=30, time=2015-06-04 11:55:02.492]
object notification: Time [clock=30, time=2015-06-04 11:55:02.492]
org notification: Time [clock=30, time=2015-06-04 11:55:02.492]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=31, time=2015-06-04 11:55:12.495]
object notification: Time [clock=31, time=2015-06-04 11:55:12.495]
object notification: Time [clock=31, time=2015-06-04 11:55:12.495]
org notification: Time [clock=31, time=2015-06-04 11:55:12.495]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=32, time=2015-06-04 11:55:22.497]
object notification: Time [clock=32, time=2015-06-04 11:55:22.497]
org notification: Time [clock=32, time=2015-06-04 11:55:22.497]
object notification: Time [clock=32, time=2015-06-04 11:55:22.497]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(32)
Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=33, time=2015-06-04 11:55:32.5]
object notification: Time [clock=33, time=2015-06-04 11:55:32.5]
org notification: Time [clock=33, time=2015-06-04 11:55:32.5]
object notification: Time [clock=33, time=2015-06-04 11:55:32.5]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=34, time=2015-06-04 11:55:42.503]
object notification: Time [clock=34, time=2015-06-04 11:55:42.503]
object notification: Time [clock=34, time=2015-06-04 11:55:42.503]
org notification: Time [clock=34, time=2015-06-04 11:55:42.503]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=35, time=2015-06-04 11:55:52.505]
object notification: Time [clock=35, time=2015-06-04 11:55:52.505]
object notification: Time [clock=35, time=2015-06-04 11:55:52.505]
object notification: Time [clock=35, time=2015-06-04 11:55:52.505]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=36, time=2015-06-04 11:56:02.509]
object notification: Time [clock=36, time=2015-06-04 11:56:02.509]
org notification: Time [clock=36, time=2015-06-04 11:56:02.509]
object notification: Time [clock=36, time=2015-06-04 11:56:02.509]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=37, time=2015-06-04 11:56:12.513]
object notification: Time [clock=37, time=2015-06-04 11:56:12.513]
object notification: Time [clock=37, time=2015-06-04 11:56:12.513]
org notification: Time [clock=37, time=2015-06-04 11:56:12.513]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=38, time=2015-06-04 11:56:22.518]
object notification: Time [clock=38, time=2015-06-04 11:56:22.518]
object notification: Time [clock=38, time=2015-06-04 11:56:22.518]
org notification: Time [clock=38, time=2015-06-04 11:56:22.518]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=39, time=2015-06-04 11:56:32.521]
object notification: Time [clock=39, time=2015-06-04 11:56:32.521]
object notification: Time [clock=39, time=2015-06-04 11:56:32.521]
org notification: Time [clock=39, time=2015-06-04 11:56:32.521]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(39)
Event processed UpdateClock(39)
Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=40, time=2015-06-04 11:56:42.525]
org notification: Time [clock=40, time=2015-06-04 11:56:42.525]
object notification: Time [clock=40, time=2015-06-04 11:56:42.525]
object notification: Time [clock=40, time=2015-06-04 11:56:42.525]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(40)
Event processed UpdateClock(40)
Event processed UpdateClock(40)
[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=41, time=2015-06-04 11:56:52.527]
object notification: Time [clock=41, time=2015-06-04 11:56:52.527]
object notification: Time [clock=41, time=2015-06-04 11:56:52.527]
org notification: Time [clock=41, time=2015-06-04 11:56:52.527]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(41)
Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


