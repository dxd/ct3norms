2015-06-04 07:21:33,902 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-04~07.21-gigaspaces-service-192.168.1.101-66529.log
-------------------------last log tuples start--------------------------------
Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-06-04 07:20:34.749, clock=4]
Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-04 07:20:34.679, clock=4]
Obligation [subject=a10, obligation=[at(3, 1, a10)], sanction=[reduce(a10, 700)], deadline=22, time=2015-06-04 07:20:33.962, clock=4]
Group [name=g, ra=a30, type=raaa, clock=0, time=2015-06-04 07:20:02.059]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=3], goal=Cell [x=3, y=2], sanction=100, clock=4, time=2015-06-04 07:20:34.259]
Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-06-04 07:20:34.823, clock=4]
Obligation [subject=a40, obligation=[at(3, 3, a40)], sanction=[reduce(a40, 700)], deadline=22, time=2015-06-04 07:20:34.262, clock=4]
Time [clock=2, time=2015-06-04 07:20:13.665]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=2], goal=Cell [x=3, y=2], sanction=100, clock=4, time=2015-06-04 07:20:34.186]
Goal [id=null, cell=Cell [x=3, y=2], agent=null, time=2015-06-04 07:20:01.644, clock=0]
Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-04 07:20:34.889, clock=4]
Time [clock=3, time=2015-06-04 07:20:23.668]
Time [clock=4, time=2015-06-04 07:20:33.67]
Time [clock=1, time=2015-06-04 07:20:03.65]
Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 07:20:01.585, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:20:01.587, clock=0]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=2], goal=Cell [x=3, y=2], sanction=100, clock=4, time=2015-06-04 07:20:34.108]
Obligation [subject=a30, obligation=[surround(3, 2)], sanction=[reduce(g, 700)], deadline=25, time=2015-06-04 07:20:32.92, clock=3]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=1], goal=Cell [x=3, y=2], sanction=100, clock=4, time=2015-06-04 07:20:33.948]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=3, time=2015-06-04 07:20:32.972]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=3, time=2015-06-04 07:20:32.979]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=3, time=2015-06-04 07:20:33.031]
Prohibition [subject=a10, prohibition=[color(yellow, a10)], sanction=[reduce(a10, 100)], clock=4, time=2015-06-04 07:20:34.689]
Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:20:01.484, clock=0]
Prohibition [subject=a20, prohibition=[color(blue, a20)], sanction=[reduce(a20, 100)], clock=4, time=2015-06-04 07:20:34.754]
Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-04 07:20:01.594, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:20:01.598, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 07:20:01.613, clock=0]
Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=4, time=2015-06-04 07:20:34.827]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=3, time=2015-06-04 07:20:32.961]
Prohibition [subject=a40, prohibition=[color(white, a40)], sanction=[reduce(a40, 100)], clock=4, time=2015-06-04 07:20:34.892]
Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:20:01.519, clock=0]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=3, time=2015-06-04 07:20:32.965]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=3, time=2015-06-04 07:20:32.975]
Obligation [subject=a30, obligation=[at(4, 2, a30)], sanction=[reduce(a30, 700)], deadline=22, time=2015-06-04 07:20:34.189, clock=4]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=3, time=2015-06-04 07:20:32.967]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=3, time=2015-06-04 07:20:32.942]
Obligation [subject=a20, obligation=[at(2, 2, a20)], sanction=[reduce(a20, 700)], deadline=22, time=2015-06-04 07:20:34.114, clock=4]
Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:20:01.522, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-04 07:20:01.527, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 07:20:01.575, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 07:20:01.539, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-04 07:20:01.542, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:20:01.544, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 07:20:01.563, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 07:20:01.571, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 07:20:01.56, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 07:20:01.547, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 07:20:01.556, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 07:20:01.536, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 07:20:01.577, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=blue, time=2015-06-04 07:20:01.579, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-04 07:20:01.471, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:20:01.479, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-04 07:20:01.59, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:20:01.461, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 07:20:01.49, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:20:01.444, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 07:20:01.496, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 07:20:01.469, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 07:20:01.474, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 07:20:01.441, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 07:20:01.493, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:20:01.455, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 07:20:01.413, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:20:01.451, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-04 07:20:01.459, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=1, time=2015-06-04 07:21:45.029]
object notification: Time [clock=1, time=2015-06-04 07:21:45.029]
object notification: Time [clock=1, time=2015-06-04 07:21:45.029]
object notification: Time [clock=1, time=2015-06-04 07:21:45.029]
org notification: Time [clock=2, time=2015-06-04 07:21:55.045]
object notification: Time [clock=2, time=2015-06-04 07:21:55.045]
object notification: Time [clock=2, time=2015-06-04 07:21:55.045]
object notification: Time [clock=2, time=2015-06-04 07:21:55.045]
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:21:57.282, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:21:57.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:21:57.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:21:57.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 07:21:57.315, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 07:21:57.315, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:21:57.317, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 07:21:57.315, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 07:21:57.315, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:21:57.317, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:21:57.317, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 07:21:57.321, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:21:57.317, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 07:21:57.321, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:21:57.324, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:21:57.324, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:21:57.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 07:21:57.321, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:21:57.324, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 07:21:57.321, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:21:57.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:21:57.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-04 07:21:57.329, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-04 07:21:57.329, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:21:57.324, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-04 07:21:57.329, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 07:21:57.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 07:21:57.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 07:21:57.333, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:21:57.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 07:21:57.336, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 07:21:57.336, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 07:21:57.336, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 07:21:57.34, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-04 07:21:57.329, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 07:21:57.34, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 07:21:57.34, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 07:21:57.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:21:57.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:21:57.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:21:57.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:21:57.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:21:57.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:21:57.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:21:57.345, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 07:21:57.336, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:21:57.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:21:57.348, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 07:21:57.34, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:21:57.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:21:57.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:21:57.351, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:21:57.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:21:57.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:21:57.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:21:57.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:21:57.363, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:21:57.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:21:57.363, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:21:57.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:21:57.363, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:21:57.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:21:57.366, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:21:57.366, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:21:57.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:21:57.369, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:21:57.369, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:21:57.366, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-04 07:21:57.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-04 07:21:57.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:21:57.369, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 07:21:57.376, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 07:21:57.376, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-04 07:21:57.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 07:21:57.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 07:21:57.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 07:21:57.376, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 07:21:57.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 07:21:57.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 07:21:57.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:21:57.391, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 07:21:57.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:21:57.393, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:21:57.391, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:21:57.393, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 07:21:57.398, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 07:21:57.398, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 07:21:57.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 07:21:57.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-04 07:21:57.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-04 07:21:57.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 07:21:57.404, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 07:21:57.404, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 07:21:57.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:21:57.391, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:21:57.393, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 07:21:57.406, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 07:21:57.398, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 07:21:57.406, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-04 07:21:57.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 07:21:57.408, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 07:21:57.408, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 07:21:57.404, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 07:21:57.406, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:21:57.363, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:21:57.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:21:57.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 07:21:57.408, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 07:21:57.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:21:57.366, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:21:57.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 07:21:57.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 07:21:57.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:21:57.369, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-04 07:21:57.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:21:57.415, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:21:57.415, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:21:57.415, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 07:21:57.422, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 07:21:57.422, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 07:21:57.422, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:21:57.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:21:57.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 07:21:57.428, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 07:21:57.428, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:21:57.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 07:21:57.428, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 07:21:57.376, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 07:21:57.378, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 07:21:57.385, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 07:21:57.388, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:21:57.391, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:21:57.393, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 07:21:57.398, clock=0]
org notification: Goal [id=null, cell=Cell [x=2, y=2], agent=null, time=2015-06-04 07:21:57.456, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-04 07:21:57.4, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 07:21:57.404, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 07:21:57.406, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 07:21:57.408, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:21:57.41, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 07:21:57.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:21:57.415, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 07:21:57.422, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:21:57.426, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 07:21:57.428, clock=0]
org notification: Group [name=g, ra=a30, type=ra, clock=0, time=2015-06-04 07:21:57.789]
object notification: Obligation [subject=a30, obligation=[surround(2, 2)], sanction=[reduce(g, 700)], deadline=24, time=2015-06-04 07:21:57.812, clock=2]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=2, time=2015-06-04 07:21:57.826]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-04 07:21:57.837]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=2, time=2015-06-04 07:21:57.832]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=2, time=2015-06-04 07:21:57.834]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-04 07:21:57.841]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-04 07:21:57.843]
#########################Game Initialized
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(2)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(white, 0, 1)
Event processed UpdateTile(white, 0, 1)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateTile(brown, 0, 4)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(white, 0, 1)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(yellow, 1, 0)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(yellow, 1, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(brown, 1, 3)
Event processed UpdateTile(yellow, 1, 0)
Event processed UpdateTile(brown, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(brown, 1, 3)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(white, 3, 4)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(white, 3, 4)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(white, 3, 4)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(white, 5, 3)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(brown, 5, 5)
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed UpdateTile(white, 5, 3)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed UpdateTile(blue, 5, 4)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(brown, 5, 5)
Event processed adoptObligation(surround(2, 2), 24, reduce(g, 700))
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(blue, 0, 0), UpdateTile(white, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(white, 1, 2), UpdateTile(brown, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(white, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7b1b315c
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(blue, 0, 0), UpdateTile(white, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(white, 1, 2), UpdateTile(brown, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(white, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptObligation(surround(2, 2), 24, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(blue, 0, 0), UpdateTile(white, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(white, 1, 2), UpdateTile(brown, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(white, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), adoptObligation(surround(2, 2), 24, reduce(g, 700)), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(white, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(white, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	adoptObligation(surround(2, 2), 24, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4eb07663
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@76c3c6af
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adopta(surround(2, 2, 700) : 4 Jun 2015 06:38:40 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adopta(surround(2, 2, 700) : 4 Jun 2015 06:38:40 GMT, priority 10), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adopta(surround(2, 2, 700) : 4 Jun 2015 06:38:40 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(2, 2, 700) : 4 Jun 2015 06:38:40 GMT, priority 10
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	GetRole(0, none);
	getPos
}


[new scheduled]:[GetRole(0, none); getPos]
[After]:{	GetRole(0, none);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	GetRole(2, ra);
	getPos
}


[new scheduled]:[GetRole(2, ra); getPos]
[After]:{	GetRole(2, ra);
	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [1,0]
[CTAH] Agentposition: [3,1]
[Planbase]:{	getPos
}


[new scheduled]:[Surround(2, 2); sendSouth(a10, 2, 2, 100); sendWest(a20, 2, 2, 100); sendEast(a30, 2, 2, 100); sendNorth(a40, 2, 2, 100); dropgoal(surround(2, 2, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(2, 2);
	sendSouth(a10, 2, 2, 100);
	sendWest(a20, 2, 2, 100);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	B(clock(C));
	GetAgentPos(1, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(1, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(1, 0, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 1, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 1, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 1, C)
}


[Planbase]:{	sendSouth(a10, 2, 2, 100);
	sendWest(a20, 2, 2, 100);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 2, 2, 100); sendWest(a20, 2, 2, 100); sendEast(a30, 2, 2, 100); sendNorth(a40, 2, 2, 100); dropgoal(surround(2, 2, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 2, 2, 100);
	sendWest(a20, 2, 2, 100);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	GetAgentPos(1, 0, 2)
}


[new scheduled]:[GetAgentPos(1, 0, 2)]
[After]:{	GetAgentPos(1, 0, 2)
}


[Planbase]:{	GetAgentPos(3, 1, 2)
}


[new scheduled]:[GetAgentPos(3, 1, 2)]
[After]:{	GetAgentPos(3, 1, 2)
}


[CTAH] Agentposition: [0,4]
[Planbase]:{	@ctenv(setGoal(a10, 2, 1, 2, 2, 100),L,0);
	sendWest(a20, 2, 2, 100);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 4, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 2, 1, 2, 2, 100),L,0); sendWest(a20, 2, 2, 100); sendEast(a30, 2, 2, 100); sendNorth(a40, 2, 2, 100); dropgoal(surround(2, 2, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(0, 4, C)]
[After]:{	@ctenv(setGoal(a10, 2, 1, 2, 2, 100),L,0);
	sendWest(a20, 2, 2, 100);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 4, C)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=1], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:03.85]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=1], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:03.85]
object notification: Obligation [subject=a10, obligation=[at(2, 1, a10)], sanction=[reduce(a10, 700)], deadline=20, time=2015-06-04 07:22:03.858, clock=2]
Event processed adoptObligation(at(2, 1, a10), 20, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 1, 2, 2, 2, 100),L,0);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 4, 2)
}


[new scheduled]:[@ctenv(setGoal(a20, 1, 2, 2, 2, 100),L,0); sendEast(a30, 2, 2, 100); sendNorth(a40, 2, 2, 100); dropgoal(surround(2, 2, 700) : Infinite, priority 10), GetAgentPos(0, 4, 2)]
[After]:{	@ctenv(setGoal(a20, 1, 2, 2, 2, 100),L,0);
	sendEast(a30, 2, 2, 100);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 4, 2)
}


[Planbase]:{	adoptObligation(at(2, 1, a10), 20, reduce(a10, 700))
}


[new scheduled]:[adoptObligation(at(2, 1, a10), 20, reduce(a10, 700))]
[After]:{	adoptObligation(at(2, 1, a10), 20, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=2], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:03.959]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=2], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:03.959]
[Planbase]:{	@ctenv(setGoal(a30, 3, 2, 2, 2, 100),L,0);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 3, 2, 2, 2, 100),L,0); sendNorth(a40, 2, 2, 100); dropgoal(surround(2, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a30, 3, 2, 2, 2, 100),L,0);
	sendNorth(a40, 2, 2, 100);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(at(2, 1, 700) : 4 Jun 2015 06:38:43 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 1, 700) : 4 Jun 2015 06:38:43 GMT, priority 10)]
[After]:{	adoptz(at(2, 1, 700) : 4 Jun 2015 06:38:43 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=2], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:04.044]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=2], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:04.044]
obligation to be adopted: at(2, 1, 700) : 4 Jun 2015 06:38:43 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(3, 2, a30)], sanction=[reduce(a30, 700)], deadline=20, time=2015-06-04 07:22:04.048, clock=2]
Event processed adoptObligation(at(3, 2, a30), 20, reduce(a30, 700))
[Planbase]:{	@ctenv(setGoal(a40, 2, 3, 2, 2, 100),L,0);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a30), 20, reduce(a30, 700))
}


[new scheduled]:[@ctenv(setGoal(a40, 2, 3, 2, 2, 100),L,0); dropgoal(surround(2, 2, 700) : Infinite, priority 10), adoptObligation(at(3, 2, a30), 20, reduce(a30, 700))]
[After]:{	@ctenv(setGoal(a40, 2, 3, 2, 2, 100),L,0);
	dropgoal(surround(2, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a30), 20, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=3], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:04.152]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=3], goal=Cell [x=2, y=2], sanction=100, clock=2, time=2015-06-04 07:22:04.152]
object notification: Obligation [subject=a40, obligation=[at(2, 3, a40)], sanction=[reduce(a40, 700)], deadline=20, time=2015-06-04 07:22:04.156, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(3, 2, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 2, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)]
[After]:{	adoptz(at(3, 2, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)
}


obligation to be adopted: at(3, 2, 700) : 4 Jun 2015 06:38:44 GMT, priority 10
Event processed adoptObligation(at(2, 3, a40), 20, reduce(a40, 700))
[Planbase]:{	adoptObligation(at(2, 3, a40), 20, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(2, 3, a40), 20, reduce(a40, 700))]
[After]:{	adoptObligation(at(2, 3, a40), 20, reduce(a40, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(2, 3, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 3, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)]
[After]:{	adoptz(at(2, 3, 700) : 4 Jun 2015 06:38:44 GMT, priority 10)
}


obligation to be adopted: at(2, 3, 700) : 4 Jun 2015 06:38:44 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=3, time=2015-06-04 07:22:05.047]
object notification: Time [clock=3, time=2015-06-04 07:22:05.047]
object notification: Time [clock=3, time=2015-06-04 07:22:05.047]
object notification: Time [clock=3, time=2015-06-04 07:22:05.047]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-04 07:22:15.05]
org notification: Time [clock=4, time=2015-06-04 07:22:15.05]
object notification: Time [clock=4, time=2015-06-04 07:22:15.05]
object notification: Time [clock=4, time=2015-06-04 07:22:15.05]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-06-04 07:22:25.054]
object notification: Time [clock=5, time=2015-06-04 07:22:25.054]
object notification: Time [clock=5, time=2015-06-04 07:22:25.054]
org notification: Time [clock=5, time=2015-06-04 07:22:25.054]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=6, time=2015-06-04 07:22:35.057]
org notification: Time [clock=6, time=2015-06-04 07:22:35.057]
object notification: Time [clock=6, time=2015-06-04 07:22:35.057]
object notification: Time [clock=6, time=2015-06-04 07:22:35.057]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-06-04 07:22:45.061]
object notification: Time [clock=7, time=2015-06-04 07:22:45.061]
object notification: Time [clock=7, time=2015-06-04 07:22:45.061]
object notification: Time [clock=7, time=2015-06-04 07:22:45.061]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-04 07:22:55.065]
org notification: Time [clock=8, time=2015-06-04 07:22:55.065]
object notification: Time [clock=8, time=2015-06-04 07:22:55.065]
object notification: Time [clock=8, time=2015-06-04 07:22:55.065]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=9, time=2015-06-04 07:23:05.067]
object notification: Time [clock=9, time=2015-06-04 07:23:05.067]
object notification: Time [clock=9, time=2015-06-04 07:23:05.067]
object notification: Time [clock=9, time=2015-06-04 07:23:05.067]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6b0ce311
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3c255a5a
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@40f5c621
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 2,3 color: neco
[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[2,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 2,1 color: neco
a30[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [4][0] [3][0] [3][1] [3][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,0,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 0, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 0)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 0, no); SentProposal(no, no, open, Clock)} else NextStep(3, 0)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 0, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 0)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 0, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 0)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 0, no); SentProposal(no, no, open, 9)} else NextStep(3, 0)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 0, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 0)
		}
}


[Planbase]:{	NextStep(3, 0)
}


[new scheduled]:[NextStep(3, 0)]
[After]:{	NextStep(3, 0)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 0),L2,0);
	if	B(L2=[actionresult([3,0])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 0, Clock)
		};
	NoNextStep(3, 0)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 0),L2,0); if B(L2=[actionresult([3,0])]) then {B(clock(Clock)); UpdatePosition(3, 0, Clock)}; NoNextStep(3, 0)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 0),L2,0);
	if	B(L2=[actionresult([3,0])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 0, Clock)
		};
	NoNextStep(3, 0)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=0], time=2015-06-04 07:23:13.899, clock=9]
object notification: Obligation [subject=a30, obligation=[makeMove(3, 0, a30)], sanction=[reduce(a30, 300)], deadline=24, time=2015-06-04 07:23:13.93, clock=9]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=0], time=2015-06-04 07:23:13.899, clock=9]
[Planbase]:{	NoNextStep(3, 0)
}


[new scheduled]:[NoNextStep(3, 0)]
[After]:{	NoNextStep(3, 0)
}


Event processed adoptObligation(makeMove(3, 0, a30), 24, reduce(a30, 300))
Event processed UpdatePosition(3, 0, 9)
[Planbase]:{	adoptObligation(makeMove(3, 0, a30), 24, reduce(a30, 300))
},
{	UpdatePosition(3, 0, 9)
}


[new scheduled]:[findNextStep(neco, 700), adoptObligation(makeMove(3, 0, a30), 24, reduce(a30, 300)), UpdatePosition(3, 0, 9)]
[After]:{	findNextStep(neco, 700)
},
{	adoptObligation(makeMove(3, 0, a30), 24, reduce(a30, 300))
},
{	UpdatePosition(3, 0, 9)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(3, 0, 300) : 4 Jun 2015 06:39:54 GMT, priority 10)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, adoptz(makeMove(3, 0, 300) : 4 Jun 2015 06:39:54 GMT, priority 10)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(3, 0, 300) : 4 Jun 2015 06:39:54 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 0, 300) : 4 Jun 2015 06:39:54 GMT, priority 10
[Planbase]:{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=10, time=2015-06-04 07:23:15.071]
org notification: Time [clock=10, time=2015-06-04 07:23:15.071]
object notification: Time [clock=10, time=2015-06-04 07:23:15.071]
object notification: Time [clock=10, time=2015-06-04 07:23:15.071]
a10[CTAH] paths: 1000
Need to wait 3 more seconds
a40[CTAH] path: 0
a40[CTAH] path: Path: [1][3] [2][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:2,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [2,3,0,3369]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
Event processed UpdateClock(10)
org notification: Proposal [id=3369, agent=a40, agent2=a10, clock=10, time=2015-06-04 07:23:17.232]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3369)], sanction=[reduce(a10, 300)], deadline=15, time=2015-06-04 07:23:17.254, clock=10]
[Planbase]:{	B(clock(Clock));
	if	B(not 3369=no)
	then	{	NextStep(2, 3, 3369);
			SentProposal(3369, 0, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 3369=no) then {NextStep(2, 3, 3369); SentProposal(3369, 0, open, Clock)} else NextStep(2, 3), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 3369=no)
	then	{	NextStep(2, 3, 3369);
			SentProposal(3369, 0, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not 3369=no)
	then	{	NextStep(2, 3, 3369);
			SentProposal(3369, 0, open, 9)
		}
	else	{	NextStep(2, 3)
		}
}


[new scheduled]:[if B(not 3369=no) then {NextStep(2, 3, 3369); SentProposal(3369, 0, open, 9)} else NextStep(2, 3)]
[After]:{	if	B(not 3369=no)
	then	{	NextStep(2, 3, 3369);
			SentProposal(3369, 0, open, 9)
		}
	else	{	NextStep(2, 3)
		}
}


[Planbase]:{	NextStep(2, 3, 3369);
	SentProposal(3369, 0, open, 9)
}


[new scheduled]:[NextStep(2, 3, 3369); SentProposal(3369, 0, open, 9)]
[After]:{	NextStep(2, 3, 3369);
	SentProposal(3369, 0, open, 9)
}


[Planbase]:{	SentProposal(3369, 0, open, 9)
}


[new scheduled]:[SentProposal(3369, 0, open, 9)]
[After]:{	SentProposal(3369, 0, open, 9)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][0] [3][1] [3][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,1,no,no]
Event processed UpdateClock(10)
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 1, no); SentProposal(no, no, open, Clock)} else NextStep(3, 1), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 1, no); SentProposal(no, no, open, 9)} else NextStep(3, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 1)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [1,1,no,no]
[Planbase]:{	NextStep(3, 1)
}


[new scheduled]:[NextStep(3, 1)]
[After]:{	NextStep(3, 1)
}


Event processed UpdateClock(10)
Event processed @ctenv(functionToList(proposal(proposal, 3, 3369, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3369), 15, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 3, 3369, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3369), 15, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, Clock)} else NextStep(1, 1), UpdateClock(10), @ctenv(functionToList(proposal(proposal, 3, 3369, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3369), 15, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 3, 3369, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3369), 15, reduce(a10, 300))
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3b488178
[CTAH] The created APLList : [proposal,3,3369,open]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
},
{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3369, 300) : 4 Jun 2015 06:39:59 GMT, priority 10)
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, 9)} else NextStep(1, 1), if B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3369, 300) : 4 Jun 2015 06:39:59 GMT, priority 10)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
},
{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3369, 300) : 4 Jun 2015 06:39:59 GMT, priority 10)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


obligation to be adopted: respondToRequest(3369, 300) : 4 Jun 2015 06:39:59 GMT, priority 10
[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 1),L2,0); if B(L2=[actionresult([3,1])]) then {B(clock(Clock)); UpdatePosition(3, 1, Clock)}; NoNextStep(3, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-04 07:23:19.354, clock=10]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=1], time=2015-06-04 07:23:19.354, clock=10]
[Planbase]:{	NextStep(1, 1)
},
{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(1, 1), if B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(1, 1)
},
{	if	B([actionresult([proposal,3,3369,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdatePosition(3, 1, 10)
[Planbase]:{	NoNextStep(3, 1)
},
{	UpdatePosition(3, 1, 10)
}


[new scheduled]:[NoNextStep(3, 1), UpdatePosition(3, 1, 10)]
[After]:{	NoNextStep(3, 1)
},
{	UpdatePosition(3, 1, 10)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3369, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(proposal=proposal) then ReceivedProposal(3, 3369, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3369, open)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
},
{	ReceivedProposal(3, 3369, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1), ReceivedProposal(3, 3369, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
},
{	ReceivedProposal(3, 3369, open)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-04 07:23:19.578, clock=10]
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-04 07:23:19.578, clock=10]
object notification: Obligation [subject=a10, obligation=[makeMove(1, 1, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-04 07:23:19.598, clock=10]
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a30[CTAH] going goal: 3,2 color: neco
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


a10[CTAH] moveStepToGoal returns: [1,1]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][1] [3][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,2,no,no]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdatePosition(1, 1, 10)
Event processed adoptObligation(makeMove(1, 1, a10), 25, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1)
},
{	UpdatePosition(1, 1, 10)
},
{	adoptObligation(makeMove(1, 1, a10), 25, reduce(a10, 300))
}


[new scheduled]:[if G(acceptRequest(3369, 300)) then skip else if B(not scoreAfterExchange(3369, Score)) then getScoreAfterExchange(3369); B(scoreAfterExchange(3369, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer), if G(acceptRequest(3369, V2)) then skip else if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1), UpdatePosition(1, 1, 10), adoptObligation(makeMove(1, 1, a10), 25, reduce(a10, 300))]
[After]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3369, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3369, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3369, closed(A)))
							then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1)
},
{	if	G(acceptRequest(3369, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3369, Score))
			then	{	getScoreAfterExchange(3369)
				}
		};
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
},
{	UpdatePosition(1, 1, 10)
},
{	adoptObligation(makeMove(1, 1, a10), 25, reduce(a10, 300))
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, Clock)} else NextStep(3, 2)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(1, 1, 10);
	NoNextStep(1, 1)
},
{	if	B(not scoreAfterExchange(3369, Score))
	then	{	getScoreAfterExchange(3369)
		};
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 06:40:03 GMT, priority 10)
}


[new scheduled]:[if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), UpdatePosition(1, 1, 10); NoNextStep(1, 1), if B(not scoreAfterExchange(3369, Score)) then getScoreAfterExchange(3369); B(scoreAfterExchange(3369, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer), adoptz(makeMove(1, 1, 300) : 4 Jun 2015 06:40:03 GMT, priority 10)]
[After]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(1, 1, 10);
	NoNextStep(1, 1)
},
{	if	B(not scoreAfterExchange(3369, Score))
	then	{	getScoreAfterExchange(3369)
		};
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 06:40:03 GMT, priority 10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(3, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, 10)} else NextStep(3, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(3, 2)
		}
}


obligation to be adopted: makeMove(1, 1, 300) : 4 Jun 2015 06:40:03 GMT, priority 10
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	NextStep(3, 2)
}


[new scheduled]:[NextStep(3, 2)]
[After]:{	NextStep(3, 2)
}


[Planbase]:{	skip
},
{	NoNextStep(1, 1)
},
{	getScoreAfterExchange(3369);
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[new scheduled]:[skip, NoNextStep(1, 1), getScoreAfterExchange(3369); B(scoreAfterExchange(3369, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer)]
[After]:{	skip
},
{	NoNextStep(1, 1)
},
{	getScoreAfterExchange(3369);
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	GetScoreAfterExchange(3369, yes);
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[new scheduled]:[if G(acceptRequest(3369, V2)) then skip else if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), findNextStep(neco, 700), GetScoreAfterExchange(3369, yes); B(scoreAfterExchange(3369, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer)]
[After]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3369, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3369, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3369, closed(A)))
							then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(3369, yes);
	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
}


a30[CTAH] moveStepToGoal returns: no
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[new scheduled]:[if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(3369, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer)]
[After]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(3369, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-04 07:23:24.078, clock=10]
org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=0], time=2015-06-04 07:23:22.154, clock=10]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-04 07:23:24.078, clock=10]
object notification: Points [subject=a30, time=2015-06-04 07:23:24.112, clock=10, value=700, id=null]
Event processed UpdatePosition(3, 2, 10)
Event processed UpdatePoints(700)
[Planbase]:{	NoNextStep(3, 2)
},
{	UpdatePosition(3, 2, 10)
},
{	UpdatePoints(700)
}


[new scheduled]:[NoNextStep(3, 2), UpdatePosition(3, 2, 10), UpdatePoints(700)]
[After]:{	NoNextStep(3, 2)
},
{	UpdatePosition(3, 2, 10)
},
{	UpdatePoints(700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B([A,B]=[2,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[new scheduled]:[skip, B([A,B]=[2,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3369, Answer)]
[After]:{	skip
},
{	B([A,B]=[2,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, Answer)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, accept)
}


[new scheduled]:[if G(acceptRequest(3369, V2)) then skip else if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3369, accept)]
[After]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3369, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3369, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3369, closed(A)))
							then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3369, accept)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(3369, accept)
}


[new scheduled]:[if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), @ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(3369, accept)]
[After]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 2, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(3369, accept)
}


a10[CTAH] going goal: 2,1 color: neco
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


object notification: Time [clock=11, time=2015-06-04 07:23:25.073]
org notification: Time [clock=11, time=2015-06-04 07:23:25.073]
object notification: Time [clock=11, time=2015-06-04 07:23:25.073]
object notification: Time [clock=11, time=2015-06-04 07:23:25.073]
Event processed UpdateClock(11)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}, UpdateClock(11)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [1][1] [2][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [2,1,no,no]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


Event processed UpdateClock(11)
[Planbase]:{	skip
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	sendResponse(3369, accept)
},
{	UpdateClock(11)
}


[new scheduled]:[skip, B(clock(Clock)); if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, Clock)} else NextStep(2, 1), sendResponse(3369, accept), UpdateClock(11)]
[After]:{	skip
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
},
{	sendResponse(3369, accept)
},
{	UpdateClock(11)
}


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=0], time=2015-06-04 07:23:32.951, clock=11]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		}
},
{	@ctenv(sendResponse(3369, accept),L1,0);
	SentResponse(accept, 3369)
}


[new scheduled]:[if G(acceptRequest(3369, V2)) then skip else if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), if B(not no=no) then {NextStep(2, 1, no); SentProposal(no, no, open, 10)} else NextStep(2, 1), @ctenv(sendResponse(3369, accept),L1,0); SentResponse(accept, 3369)]
[After]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3369, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3369, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3369, closed(A)))
							then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(not no=no)
	then	{	NextStep(2, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 1)
		}
},
{	@ctenv(sendResponse(3369, accept),L1,0);
	SentResponse(accept, 3369)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Need to wait 1 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
}


org notification: Response [id=3369, response=accepted, clock=11, time=2015-06-04 07:23:34.07]
[Planbase]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NextStep(2, 1)
}


[new scheduled]:[if G(respondToRequest(3369, V2)) then skip else if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), NextStep(2, 1)]
[After]:{	if	G(respondToRequest(3369, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3369, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3369, closed(A)))
					then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
						}
				}
		}
},
{	NextStep(2, 1)
}


Event processed @ctenv(functionToList(message(response, 3369, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(response, 3369, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 3369, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 3369, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6e9c5a27
[CTAH] The created APLList : [response,3369,accept]
[Planbase]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 3369, closed(A)))
			then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(3369, V2)) then skip else if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(3369, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 3369, closed(A)))
			then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3369)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}, if B(response=response) then ReceivedResponse(accept, 3369)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3369)
		}
}


[Planbase]:{	if	B(not receivedP(3, 3369, closed(A)))
	then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
}


[new scheduled]:[if B(not receivedP(3, 3369, closed(A))) then adoptz(respondToRequest(3369, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1)]
[After]:{	if	B(not receivedP(3, 3369, closed(A)))
	then	{	adoptz(respondToRequest(3369, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	ReceivedResponse(accept, 3369)
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(2, 3, 3369); ReceivedResponse(noresponse, 3369)}, ReceivedResponse(accept, 3369)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(2, 3, 3369);
			ReceivedResponse(noresponse, 3369)
		}
},
{	ReceivedResponse(accept, 3369)
}


Need to wait 4 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3, 3369)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 3),L2,0); if B(L2=[actionresult([2,3])]) then {B(clock(Clock)); UpdatePosition(2, 3, Clock)}; NoNextStep(2, 3, 3369)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3, 3369)
}


Need to wait 3 more seconds
a40[CTAH] moveStepToGoal returns: [2,3]
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 3, Clock);
	NoNextStep(2, 3, 3369)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 3, Clock); NoNextStep(2, 3, 3369)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 3, Clock);
	NoNextStep(2, 3, 3369)
}


[Planbase]:{	UpdatePosition(2, 3, 11);
	NoNextStep(2, 3, 3369)
}


[new scheduled]:[UpdatePosition(2, 3, 11); NoNextStep(2, 3, 3369)]
[After]:{	UpdatePosition(2, 3, 11);
	NoNextStep(2, 3, 3369)
}


[Planbase]:{	NoNextStep(2, 3, 3369)
}


[new scheduled]:[NoNextStep(2, 3, 3369)]
[After]:{	NoNextStep(2, 3, 3369)
}


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] moveStepToGoal returns: [2,1]
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1)
}


[Planbase]:{	UpdatePosition(2, 1, 11);
	NoNextStep(2, 1)
}


[new scheduled]:[UpdatePosition(2, 1, 11); NoNextStep(2, 1)]
[After]:{	UpdatePosition(2, 1, 11);
	NoNextStep(2, 1)
}


[Planbase]:{	NoNextStep(2, 1)
}


[new scheduled]:[NoNextStep(2, 1)]
[After]:{	NoNextStep(2, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-06-04 07:23:34.309, clock=11]
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-06-04 07:23:34.309, clock=11]
org notification: Position [subject=a40, id=null, cell=Cell [x=2, y=3], time=2015-06-04 07:23:34.393, clock=11]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdatePosition(2, 1, 11)
[Planbase]:{	UpdatePosition(2, 1, 11)
}


[new scheduled]:[UpdatePosition(2, 1, 11)]
[After]:{	UpdatePosition(2, 1, 11)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=12, time=2015-06-04 07:23:35.079]
object notification: Position [subject=a40, id=null, cell=Cell [x=2, y=3], time=2015-06-04 07:23:34.393, clock=11]
object notification: Time [clock=12, time=2015-06-04 07:23:35.079]
object notification: Obligation [subject=a40, obligation=[makeMove(2, 3, a40)], sanction=[reduce(a40, 300)], deadline=26, time=2015-06-04 07:23:50.27, clock=13]
object notification: Time [clock=12, time=2015-06-04 07:23:35.079]
object notification: Time [clock=12, time=2015-06-04 07:23:35.079]
org notification: Time [clock=13, time=2015-06-04 07:23:45.082]
object notification: Time [clock=13, time=2015-06-04 07:23:45.082]
object notification: Time [clock=13, time=2015-06-04 07:23:45.082]
object notification: Time [clock=13, time=2015-06-04 07:23:45.082]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdatePosition(2, 3, 11)
Event processed UpdateClock(12)
Event processed adoptObligation(makeMove(2, 3, a40), 26, reduce(a40, 300))
Event processed UpdateClock(13)
Event processed UpdateClock(12)
Event processed UpdateClock(13)
[Planbase]:{	UpdatePosition(2, 3, 11)
},
{	UpdateClock(12)
},
{	adoptObligation(makeMove(2, 3, a40), 26, reduce(a40, 300))
},
{	UpdateClock(13)
}


[new scheduled]:[UpdatePosition(2, 3, 11), UpdateClock(12), adoptObligation(makeMove(2, 3, a40), 26, reduce(a40, 300)), UpdateClock(13)]
[After]:{	UpdatePosition(2, 3, 11)
},
{	UpdateClock(12)
},
{	adoptObligation(makeMove(2, 3, a40), 26, reduce(a40, 300))
},
{	UpdateClock(13)
}


Event processed UpdateClock(12)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(12), UpdateClock(13)]
[After]:{	UpdateClock(12)
},
{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(12), UpdateClock(13)]
[After]:{	UpdateClock(12)
},
{	UpdateClock(13)
}


[Planbase]:{	adoptz(makeMove(2, 3, 300) : 4 Jun 2015 06:40:30 GMT, priority 10)
}


[new scheduled]:[adoptz(makeMove(2, 3, 300) : 4 Jun 2015 06:40:30 GMT, priority 10)]
[After]:{	adoptz(makeMove(2, 3, 300) : 4 Jun 2015 06:40:30 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: makeMove(2, 3, 300) : 4 Jun 2015 06:40:30 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=0], time=2015-06-04 07:23:51.988, clock=13]
org notification: Time [clock=14, time=2015-06-04 07:23:55.085]
object notification: Time [clock=14, time=2015-06-04 07:23:55.085]
object notification: Time [clock=14, time=2015-06-04 07:23:55.085]
object notification: Time [clock=14, time=2015-06-04 07:23:55.085]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=1], time=2015-06-04 07:24:04.371, clock=14]
object notification: Time [clock=15, time=2015-06-04 07:24:05.088]
org notification: Time [clock=15, time=2015-06-04 07:24:05.088]
object notification: Time [clock=15, time=2015-06-04 07:24:05.088]
object notification: Time [clock=15, time=2015-06-04 07:24:05.088]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=16, time=2015-06-04 07:24:15.092]
org notification: Time [clock=16, time=2015-06-04 07:24:15.092]
object notification: Time [clock=16, time=2015-06-04 07:24:15.092]
object notification: Time [clock=16, time=2015-06-04 07:24:15.092]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=2], time=2015-06-04 07:24:24.832, clock=16]
org notification: Time [clock=17, time=2015-06-04 07:24:25.096]
object notification: Time [clock=17, time=2015-06-04 07:24:25.096]
object notification: Time [clock=17, time=2015-06-04 07:24:25.096]
object notification: Time [clock=17, time=2015-06-04 07:24:25.096]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=18, time=2015-06-04 07:24:35.098]
object notification: Time [clock=18, time=2015-06-04 07:24:35.098]
org notification: Time [clock=18, time=2015-06-04 07:24:35.098]
object notification: Time [clock=18, time=2015-06-04 07:24:35.098]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=19, time=2015-06-04 07:24:45.102]
org notification: Time [clock=19, time=2015-06-04 07:24:45.102]
object notification: Time [clock=19, time=2015-06-04 07:24:45.102]
object notification: Time [clock=19, time=2015-06-04 07:24:45.102]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=20, time=2015-06-04 07:24:55.105]
object notification: Time [clock=20, time=2015-06-04 07:24:55.105]
object notification: Time [clock=20, time=2015-06-04 07:24:55.105]
object notification: Time [clock=20, time=2015-06-04 07:24:55.105]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=21, time=2015-06-04 07:25:05.107]
org notification: Time [clock=21, time=2015-06-04 07:25:05.107]
object notification: Time [clock=21, time=2015-06-04 07:25:05.107]
object notification: Time [clock=21, time=2015-06-04 07:25:05.107]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@54b9dc93
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@42d802f
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@3587e17c
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-06-04 07:25:15.109]
object notification: Time [clock=22, time=2015-06-04 07:25:15.109]
object notification: Time [clock=22, time=2015-06-04 07:25:15.109]
org notification: Time [clock=22, time=2015-06-04 07:25:15.109]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:2,C:3).
Chips: { chips  'blue':0 'white':0 'brown':1 'yellow':3 }.
Score: 1000.
Team: -1.

Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:2,C:1).
Chips: { chips  'blue':0 'white':3 'brown':3 'yellow':2 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:3,C:2).
Chips: { chips  'blue':3 'white':3 'brown':1 'yellow':2 }.
Score: 700.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3909f259
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@47b95461
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@6f4efd19
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=23, time=2015-06-04 07:25:25.112]
object notification: Time [clock=23, time=2015-06-04 07:25:25.112]
object notification: Time [clock=23, time=2015-06-04 07:25:25.112]
object notification: Time [clock=23, time=2015-06-04 07:25:25.112]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-04 07:25:35.115]
object notification: Time [clock=24, time=2015-06-04 07:25:35.115]
object notification: Time [clock=24, time=2015-06-04 07:25:35.115]
org notification: Time [clock=24, time=2015-06-04 07:25:35.115]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=25, time=2015-06-04 07:25:45.117]
object notification: Time [clock=25, time=2015-06-04 07:25:45.117]
object notification: Time [clock=25, time=2015-06-04 07:25:45.117]
object notification: Time [clock=25, time=2015-06-04 07:25:45.117]
object notification: Points [subject=a30, time=2015-06-04 07:25:45.129, clock=25, value=400, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdatePoints(400)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
},
{	UpdatePoints(400)
}


[new scheduled]:[UpdateClock(25), UpdatePoints(400)]
[After]:{	UpdateClock(25)
},
{	UpdatePoints(400)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=26, time=2015-06-04 07:25:55.119]
object notification: Time [clock=26, time=2015-06-04 07:25:55.119]
object notification: Time [clock=26, time=2015-06-04 07:25:55.119]
object notification: Time [clock=26, time=2015-06-04 07:25:55.119]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


