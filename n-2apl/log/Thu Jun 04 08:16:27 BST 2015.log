2015-06-04 08:16:29,099 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-04~08.16-gigaspaces-service-192.168.1.101-66813.log
-------------------------last log tuples start--------------------------------
Goal [id=null, cell=Cell [x=2, y=1], agent=null, time=2015-06-04 07:31:51.431, clock=0]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=-1, y=-1], sanction=100, clock=3, time=2015-06-04 07:32:10.305]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:31:52.329, clock=0]
Group [name=g, ra=a20, type=raaa, clock=0, time=2015-06-04 07:31:52.451]
Time [clock=7, time=2015-06-04 07:32:44.928]
Color [id=null, color=blue, agent=a40, type=yes, sanction=500, time=2015-06-04 07:32:55.215, clock=8]
Goal [id=null, cell=Cell [x=2, y=1], agent=null, time=2015-06-04 07:31:51.476, clock=0]
Obligation [subject=a10, obligation=[group_acceptCRequests], sanction=[reduce(g, 500)], deadline=29, time=2015-06-04 07:32:46.961, clock=7]
Goal [id=null, cell=Cell [x=2, y=2], agent=null, time=2015-06-04 07:31:52.346, clock=0]
SetGoal [id=null, agent=a30, cell=Cell [x=3, y=2], goal=Cell [x=-1, y=-1], sanction=100, clock=4, time=2015-06-04 07:32:19.988]
SetGoal [id=null, agent=a40, cell=Cell [x=2, y=1], goal=Cell [x=-1, y=-1], sanction=100, clock=4, time=2015-06-04 07:32:15.076]
Group [name=g, ra=a10, type=ra, clock=0, time=2015-06-04 07:31:51.624]
SetGoal [id=null, agent=a10, cell=Cell [x=1, y=2], goal=Cell [x=-1, y=-1], sanction=100, clock=5, time=2015-06-04 07:32:25.594]
Time [clock=6, time=2015-06-04 07:32:34.924]
GroupObl [id=null, obligation=acceptCRequests, sanction=500, clock=7, time=2015-06-04 07:32:46.95]
Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-04 07:31:51.632]
Time [clock=12, time=2015-06-04 07:33:34.941]
Time [clock=11, time=2015-06-04 07:33:24.939]
Time [clock=10, time=2015-06-04 07:33:14.938]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-04 07:31:51.92]
Time [clock=9, time=2015-06-04 07:33:04.936]
Time [clock=8, time=2015-06-04 07:32:54.934]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=1, time=2015-06-04 07:31:51.917]
Time [clock=3, time=2015-06-04 07:32:04.916]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=1, time=2015-06-04 07:31:51.91]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=1, time=2015-06-04 07:31:51.915]
Time [clock=4, time=2015-06-04 07:32:14.919]
Obligation [subject=a10, obligation=[surround(2, 1)], sanction=[reduce(g, 700)], deadline=23, time=2015-06-04 07:31:51.905, clock=1]
Time [clock=2, time=2015-06-04 07:31:54.913]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-04 07:31:51.927]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-04 07:31:51.934]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 07:31:52.319, clock=0]
Time [clock=5, time=2015-06-04 07:32:24.922]
Time [clock=1, time=2015-06-04 07:31:44.892]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=1, time=2015-06-04 07:31:51.912]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 07:31:52.28, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 07:31:52.283, clock=0]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=1, time=2015-06-04 07:31:51.924]
Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:31:52.325, clock=0]
Obligation [subject=a40, obligation=[color(blue, a40)], sanction=[reduce(a40, 500)], deadline=23, time=2015-06-04 07:32:55.227, clock=8]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:31:52.208, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:31:52.212, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:31:52.286, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-04 07:31:52.321, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:31:52.29, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:31:52.291, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 07:31:52.338, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 07:31:52.317, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:31:52.33, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-04 07:31:52.298, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 07:31:52.322, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-04 07:31:52.314, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-04 07:31:52.316, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:31:52.312, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 07:31:52.303, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-04 07:31:52.308, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 07:31:52.295, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 07:31:51.389, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 07:31:52.288, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 07:31:52.3, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-04 07:31:52.214, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:31:52.327, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 07:31:52.203, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-04 07:31:52.296, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 07:31:52.332, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 07:31:52.334, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:31:52.336, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-04 07:31:52.293, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-04 07:31:51.379, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:31:51.381, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 07:31:51.383, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:31:51.386, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-04 07:31:51.349, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-06-04 07:31:51.389, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 07:31:52.131, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 07:31:52.135, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 07:31:52.201, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 07:31:51.359, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:31:52.206, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 07:31:51.318, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-04 07:31:51.322, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-04 07:31:51.354, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:31:51.305, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-04 07:31:51.356, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-04 07:31:51.341, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 07:31:51.35, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:31:51.338, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 07:31:51.33, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 07:31:51.376, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-04 07:31:51.346, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 07:31:51.362, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:31:51.192, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-04 07:31:51.351, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-04 07:31:51.344, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-04 07:31:51.345, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 07:31:51.292, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 07:31:51.34, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 07:31:51.342, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:31:51.335, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:31:51.178, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-04 07:31:51.305, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 07:31:51.314, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:31:51.315, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 07:31:51.338, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 07:31:51.238, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 07:31:51.336, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-04 07:31:51.368, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:31:51.371, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:31:51.374, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 07:31:51.333, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:31:51.327, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-04 07:31:51.328, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 07:31:51.279, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:31:51.279, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 07:31:51.298, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-04 07:31:51.323, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:31:51.181, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 07:31:51.249, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:31:51.168, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 07:31:51.291, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-04 07:31:51.206, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 07:31:51.178, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-04 07:31:51.224, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-04 07:31:51.224, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-04 07:31:51.296, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 07:31:51.222, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-04 07:31:51.286, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 07:31:51.222, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:31:51.168, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:31:51.099, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-04 07:31:51.264, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:31:51.3, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-04 07:31:51.324, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-04 07:31:51.273, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 07:31:51.182, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 07:31:51.256, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 07:31:51.206, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:31:51.157, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:31:51.099, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-04 07:31:51.264, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 07:31:51.25, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 07:31:51.243, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:31:51.159, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-13: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@746c2f2
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6f76dd71
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@804a187
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,1]
[CTAH] Agentposition: [4,3]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 1, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 1, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 1, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(4, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(4, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(4, 3, C)
}


[CTAH] Agentposition: [3,3]
[Planbase]:{	B(clock(C));
	GetAgentPos(3, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 3, C)
}


[Planbase]:{	GetAgentPos(0, 1, 0)
}


[new scheduled]:[GetAgentPos(0, 1, 0)]
[After]:{	GetAgentPos(0, 1, 0)
}


[Planbase]:{	GetAgentPos(4, 3, 0)
}


[new scheduled]:[GetAgentPos(4, 3, 0)]
[After]:{	GetAgentPos(4, 3, 0)
}


[Planbase]:{	GetAgentPos(3, 3, 0)
}


[new scheduled]:[GetAgentPos(3, 3, 0)]
[After]:{	GetAgentPos(3, 3, 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 08:16:53.61, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 08:16:53.61, clock=0]
org notification: Time [clock=1, time=2015-06-04 08:16:40.509]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 08:16:53.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 08:16:53.639, clock=0]
object notification: Time [clock=1, time=2015-06-04 08:16:40.509]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 08:16:53.61, clock=0]
object notification: Time [clock=2, time=2015-06-04 08:16:50.527]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 08:16:53.64, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 08:16:53.639, clock=0]
object notification: Time [clock=3, time=2015-06-04 08:17:00.531]
object notification: Time [clock=1, time=2015-06-04 08:16:40.509]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 08:16:53.64, clock=0]
object notification: Time [clock=2, time=2015-06-04 08:16:50.527]
object notification: Time [clock=3, time=2015-06-04 08:17:00.531]
org notification: Goal [id=null, cell=Cell [x=1, y=2], agent=null, time=2015-06-04 08:16:53.713, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 08:16:53.64, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 08:16:53.641, clock=0]
object notification: Time [clock=1, time=2015-06-04 08:16:40.509]
object notification: Time [clock=2, time=2015-06-04 08:16:50.527]
object notification: Time [clock=3, time=2015-06-04 08:17:00.531]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 08:16:53.642, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 08:16:53.641, clock=0]
org notification: Group [name=g, ra=a10, type=ra, clock=0, time=2015-06-04 08:16:53.754]
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 08:16:53.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 08:16:53.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-04 08:16:53.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 08:16:53.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 08:16:53.646, clock=0]
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateClock(3)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(yellow, 0, 5)
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 08:16:53.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 08:16:53.639, clock=0]
org notification: Time [clock=2, time=2015-06-04 08:16:50.527]
object notification: Obligation [subject=a10, obligation=[surround(1, 2)], sanction=[reduce(g, 700)], deadline=23, time=2015-06-04 08:17:04.349, clock=3]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=3, time=2015-06-04 08:17:04.381]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=3, time=2015-06-04 08:17:04.371]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=3, time=2015-06-04 08:17:04.384]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=3, time=2015-06-04 08:17:04.392]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 08:16:53.648, clock=0]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=3, time=2015-06-04 08:17:04.399]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 08:16:53.649, clock=0]
Event processed UpdateTile(white, 1, 0)
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 08:16:53.64, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 08:16:53.651, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 08:16:53.643, clock=0]
Event processed UpdateTile(blue, 1, 1)
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 08:16:53.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 08:16:53.653, clock=0]
Event processed UpdateTile(blue, 1, 2)
Event processed adoptObligation(surround(1, 2), 23, reduce(g, 700))
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 08:16:53.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 08:16:53.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-04 08:16:53.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 08:16:53.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 08:16:53.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 08:16:53.655, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 08:16:53.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-04 08:16:53.642, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 08:16:53.658, clock=0]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=3, time=2015-06-04 08:17:04.401]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 08:16:53.646, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 08:16:53.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 08:16:53.648, clock=0]
org notification: Time [clock=3, time=2015-06-04 08:17:00.531]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 08:16:53.649, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 08:16:53.651, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 08:16:53.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 08:16:53.653, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 08:16:53.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 08:16:53.655, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 08:16:53.659, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 08:16:53.658, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 08:16:53.659, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 08:16:53.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-04 08:16:53.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-04 08:16:53.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 08:16:53.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 08:16:53.645, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 08:16:53.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 08:16:53.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 08:16:53.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 08:16:53.646, clock=0]
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 08:16:53.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 08:16:53.665, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 08:16:53.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 08:16:53.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-04 08:16:53.667, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 08:16:53.665, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 08:16:53.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 08:16:53.648, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 08:16:53.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 08:16:53.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 08:16:53.675, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 08:16:53.677, clock=0]
Event processed UpdateTile(brown, 1, 3)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 08:16:53.678, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 08:16:53.68, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-06-04 08:16:53.682, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 08:16:53.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 08:16:53.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 08:16:53.687, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 08:16:53.689, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-04 08:16:53.667, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 08:16:53.649, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 08:16:53.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 08:16:53.651, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 08:16:53.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 08:16:53.652, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 08:16:53.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 08:16:53.653, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 08:16:53.675, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 08:16:53.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 08:16:53.677, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 08:16:53.655, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 08:16:53.678, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 08:16:53.658, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 08:16:53.68, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 08:16:53.659, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-06-04 08:16:53.682, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-04 08:16:53.66, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 08:16:53.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 08:16:53.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 08:16:53.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 08:16:53.662, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 08:16:53.687, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 08:16:53.664, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 08:16:53.689, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 08:16:53.665, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-04 08:16:53.667, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 08:16:53.669, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 08:16:53.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 08:16:53.673, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 08:16:53.675, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 08:16:53.677, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 08:16:53.678, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 08:16:53.68, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-06-04 08:16:53.682, clock=0]
Event processed UpdateTile(brown, 1, 4)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 08:16:53.684, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 08:16:53.686, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 08:16:53.687, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 08:16:53.689, clock=0]
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateClock(1)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed UpdateTile(blue, 0, 2)
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-06-04 08:16:53.645, clock=0]
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(brown, 0, 4)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(blue, 1, 1)
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 08:16:53.646, clock=0]
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(brown, 1, 3)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateClock(1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateClock(2)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateClock(3)
Event processed UpdateTile(brown, 1, 5)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed UpdateTile(brown, 2, 0)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 1, 0)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(brown, 1, 3)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(blue, 2, 3)
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 08:16:53.647, clock=0]
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(brown, 5, 0)
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 08:16:53.648, clock=0]
Event processed UpdateTile(blue, 5, 1)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(brown, 5, 0)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(blue, 4, 0)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(blue, 5, 1)
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 08:16:53.649, clock=0]
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(yellow, 5, 4)
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 08:16:53.651, clock=0]
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(brown, 5, 0)
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 08:16:53.652, clock=0]
Event processed UpdateTile(blue, 5, 1)
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 08:16:53.653, clock=0]
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 5, 4)
Event processed UpdateTile(white, 5, 5)
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 08:16:53.654, clock=0]
[Planbase]:{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	adoptObligation(surround(1, 2), 23, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[new scheduled]:[UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), UpdateClock(1), UpdateClock(2), UpdateTile(blue, 0, 2), UpdateClock(3), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(white, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), adoptObligation(surround(1, 2), 23, reduce(g, 700)), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), UpdateTile(brown, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(white, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(white, 4, 5), UpdateTile(brown, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(white, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5)]
[After]:{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	adoptObligation(surround(1, 2), 23, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[Planbase]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[new scheduled]:[UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateTile(yellow, 0, 5), UpdateTile(white, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(brown, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(white, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(white, 4, 5), UpdateTile(brown, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(white, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5)]
[After]:{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[Planbase]:{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateClock(1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[new scheduled]:[UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), UpdateClock(1), UpdateTile(blue, 0, 2), UpdateClock(2), UpdateClock(3), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(white, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(brown, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(white, 3, 5), UpdateTile(blue, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(white, 4, 5), UpdateTile(brown, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(white, 5, 3), UpdateTile(yellow, 5, 4), UpdateTile(white, 5, 5)]
[After]:{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateClock(1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(white, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(brown, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(blue, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(brown, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(yellow, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 08:16:53.655, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 08:16:53.658, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 08:16:53.659, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-04 08:16:53.66, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 08:16:53.661, clock=0]
[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 08:16:53.662, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 08:16:53.664, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 08:16:53.665, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-04 08:16:53.667, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 08:16:53.669, clock=0]
[Planbase]:{	adopta(surround(1, 2, 700) : 4 Jun 2015 07:33:44 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[adopta(surround(1, 2, 700) : 4 Jun 2015 07:33:44 GMT, priority 10), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	adopta(surround(1, 2, 700) : 4 Jun 2015 07:33:44 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 08:16:53.671, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 08:16:53.673, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 08:16:53.675, clock=0]
[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 08:16:53.677, clock=0]
obligation to be adopted: surround(1, 2, 700) : 4 Jun 2015 07:33:44 GMT, priority 10
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 08:16:53.678, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 08:16:53.68, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-06-04 08:16:53.682, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 08:16:53.684, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 08:16:53.686, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=yellow, time=2015-06-04 08:16:53.687, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 08:16:53.689, clock=0]
[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(1, 2); sendSouth(a10, 1, 2, 100); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Surround(1, 2);
	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 1, 2, 100); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=1, y=1], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.623]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=1, y=1], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.623]
object notification: Obligation [subject=a10, obligation=[at(1, 1, a10)], sanction=[reduce(a10, 700)], deadline=21, time=2015-06-04 08:17:05.631, clock=3]
Event processed adoptObligation(at(1, 1, a10), 21, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(1, 1, a10), 21, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), adoptObligation(at(1, 1, a10), 21, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptObligation(at(1, 1, a10), 21, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=0, y=2], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.7]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=0, y=2], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.7]
[Planbase]:{	@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(1, 1, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0); sendNorth(a40, 1, 2, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), adoptz(at(1, 1, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0);
	sendNorth(a40, 1, 2, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(1, 1, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=2, y=2], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.781]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=2, y=2], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.781]
obligation to be adopted: at(1, 1, 700) : 4 Jun 2015 07:33:45 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(2, 2, a30)], sanction=[reduce(a30, 700)], deadline=21, time=2015-06-04 08:17:05.784, clock=3]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=1, y=3], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.865]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=1, y=3], goal=Cell [x=1, y=2], sanction=100, clock=3, time=2015-06-04 08:17:05.865]
Event processed adoptObligation(at(2, 2, a30), 21, reduce(a30, 700))
object notification: Obligation [subject=a40, obligation=[at(1, 3, a40)], sanction=[reduce(a40, 700)], deadline=21, time=2015-06-04 08:17:05.867, clock=3]
[Planbase]:{	adoptObligation(at(2, 2, a30), 21, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(2, 2, a30), 21, reduce(a30, 700))]
[After]:{	adoptObligation(at(2, 2, a30), 21, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(1, 3, a40), 21, reduce(a40, 700))
[Planbase]:{	adoptz(at(2, 2, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 2, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)]
[After]:{	adoptz(at(2, 2, 700) : 4 Jun 2015 07:33:45 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(1, 3, a40), 21, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(1, 3, a40), 21, reduce(a40, 700))]
[After]:{	adoptObligation(at(1, 3, a40), 21, reduce(a40, 700))
}


obligation to be adopted: at(2, 2, 700) : 4 Jun 2015 07:33:45 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(1, 3, 700) : 4 Jun 2015 07:33:46 GMT, priority 10)
}


[new scheduled]:[adoptz(at(1, 3, 700) : 4 Jun 2015 07:33:46 GMT, priority 10)]
[After]:{	adoptz(at(1, 3, 700) : 4 Jun 2015 07:33:46 GMT, priority 10)
}


obligation to be adopted: at(1, 3, 700) : 4 Jun 2015 07:33:46 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-04 08:17:10.533]
object notification: Time [clock=4, time=2015-06-04 08:17:10.533]
org notification: Time [clock=4, time=2015-06-04 08:17:10.533]
object notification: Time [clock=4, time=2015-06-04 08:17:10.533]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=5, time=2015-06-04 08:17:20.536]
object notification: Time [clock=5, time=2015-06-04 08:17:20.536]
object notification: Time [clock=5, time=2015-06-04 08:17:20.536]
object notification: Time [clock=5, time=2015-06-04 08:17:20.536]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=6, time=2015-06-04 08:17:30.54]
object notification: Time [clock=6, time=2015-06-04 08:17:30.54]
object notification: Time [clock=6, time=2015-06-04 08:17:30.54]
object notification: Time [clock=6, time=2015-06-04 08:17:30.54]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-04 08:17:40.542]
org notification: Time [clock=7, time=2015-06-04 08:17:40.542]
object notification: Time [clock=7, time=2015-06-04 08:17:40.542]
object notification: Time [clock=7, time=2015-06-04 08:17:40.542]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-04 08:17:50.544]
object notification: Time [clock=8, time=2015-06-04 08:17:50.544]
org notification: Time [clock=8, time=2015-06-04 08:17:50.544]
object notification: Time [clock=8, time=2015-06-04 08:17:50.544]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-04 08:18:00.547]
org notification: Time [clock=9, time=2015-06-04 08:18:00.547]
object notification: Time [clock=9, time=2015-06-04 08:18:00.547]
object notification: Time [clock=9, time=2015-06-04 08:18:00.547]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@490a3029
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@613714d3
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3695149e
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[1,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


a10[CTAH] going goal: 1,1 color: neco
a30[CTAH] going goal: 2,2 color: neco
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[1,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 1,3 color: neco
a10[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][4] [3][3] [3][2] [2][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,3,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 3, no); SentProposal(no, no, open, Clock)} else NextStep(3, 3)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 3)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 3, no); SentProposal(no, no, open, 9)} else NextStep(3, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 3, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 3)
		}
}


[Planbase]:{	NextStep(3, 3)
}


[new scheduled]:[NextStep(3, 3)]
[After]:{	NextStep(3, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=3], time=2015-06-04 08:18:09.171, clock=9]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=3], time=2015-06-04 08:18:09.171, clock=9]
object notification: Obligation [subject=a30, obligation=[makeMove(3, 3, a30)], sanction=[reduce(a30, 300)], deadline=24, time=2015-06-04 08:18:09.195, clock=9]
Event processed UpdatePosition(3, 3, 9)
Event processed adoptObligation(makeMove(3, 3, a30), 24, reduce(a30, 300))
[Planbase]:{	NoNextStep(3, 3)
},
{	UpdatePosition(3, 3, 9)
},
{	adoptObligation(makeMove(3, 3, a30), 24, reduce(a30, 300))
}


[new scheduled]:[NoNextStep(3, 3), UpdatePosition(3, 3, 9), adoptObligation(makeMove(3, 3, a30), 24, reduce(a30, 300))]
[After]:{	NoNextStep(3, 3)
},
{	UpdatePosition(3, 3, 9)
},
{	adoptObligation(makeMove(3, 3, a30), 24, reduce(a30, 300))
}


[Planbase]:{	adoptz(makeMove(3, 3, 300) : 4 Jun 2015 07:34:49 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(makeMove(3, 3, 300) : 4 Jun 2015 07:34:49 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	adoptz(makeMove(3, 3, 300) : 4 Jun 2015 07:34:49 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 3, 300) : 4 Jun 2015 07:34:49 GMT, priority 10
[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 2,2 color: neco
org notification: Time [clock=10, time=2015-06-04 08:18:10.55]
object notification: Time [clock=10, time=2015-06-04 08:18:10.55]
object notification: Time [clock=10, time=2015-06-04 08:18:10.55]
object notification: Time [clock=10, time=2015-06-04 08:18:10.55]
a40[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][3] [2][3] [2][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [2,3,no,no]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 3, no); SentProposal(no, no, open, Clock)} else NextStep(2, 3), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(2, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 3, no); SentProposal(no, no, open, 9)} else NextStep(2, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(2, 3)
		}
}


[Planbase]:{	NextStep(2, 3)
}


[new scheduled]:[NextStep(2, 3)]
[After]:{	NextStep(2, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 3),L2,0); if B(L2=[actionresult([2,3])]) then {B(clock(Clock)); UpdatePosition(2, 3, Clock)}; NoNextStep(2, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=3], time=2015-06-04 08:18:11.275, clock=10]
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=3], time=2015-06-04 08:18:11.275, clock=10]
Event processed UpdatePosition(2, 3, 10)
[Planbase]:{	NoNextStep(2, 3)
},
{	UpdatePosition(2, 3, 10)
}


[new scheduled]:[NoNextStep(2, 3), UpdatePosition(2, 3, 10)]
[After]:{	NoNextStep(2, 3)
},
{	UpdatePosition(2, 3, 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 2,2 color: neco
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][3] [3][2] [2][2] [2][1] [1][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [3,2,no,no]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, Clock)} else NextStep(3, 2), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 2, no); SentProposal(no, no, open, 9)} else NextStep(3, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(3, 2)
		}
}


[Planbase]:{	NextStep(3, 2)
}


[new scheduled]:[NextStep(3, 2)]
[After]:{	NextStep(3, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-06-04 08:18:12.951, clock=10]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-06-04 08:18:12.951, clock=10]
object notification: Obligation [subject=a10, obligation=[makeMove(3, 2, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-04 08:18:12.968, clock=10]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][3] [2][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [2,2,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, Clock)} else NextStep(2, 2)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, 10)} else NextStep(2, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 2)
		}
}


[Planbase]:{	NextStep(2, 2)
}


[new scheduled]:[NextStep(2, 2)]
[After]:{	NextStep(2, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-04 08:18:13.879, clock=10]
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-04 08:18:13.879, clock=10]
Event processed UpdatePosition(2, 2, 10)
object notification: Points [subject=a30, time=2015-06-04 08:18:13.888, clock=10, value=700, id=null]
[Planbase]:{	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 10)
}


[new scheduled]:[NoNextStep(2, 2), UpdatePosition(2, 2, 10)]
[After]:{	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 10)
}


Event processed UpdatePoints(700)
[Planbase]:{	UpdatePoints(700)
}


[new scheduled]:[UpdatePoints(700)]
[After]:{	UpdatePoints(700)
}


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] path: 0
a40[CTAH] path: Path: [1][0] [1][1] [1][2] [1][3]

a40[CTAH] moveStepToGoalTest returns I have chip: [1,1,no,no]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, Clock)} else NextStep(1, 1), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 1, no); SentProposal(no, no, open, 9)} else NextStep(1, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 1, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(1, 1)
		}
}


[Planbase]:{	NextStep(1, 1)
}


[new scheduled]:[NextStep(1, 1)]
[After]:{	NextStep(1, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1)
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=1], time=2015-06-04 08:18:14.859, clock=10]
object notification: Obligation [subject=a40, obligation=[makeMove(1, 1, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-04 08:18:14.865, clock=10]
object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=1], time=2015-06-04 08:18:14.859, clock=10]
a10[CTAH] moveStepToGoal returns: [3,2]
Event processed UpdatePosition(3, 2, 10)
Event processed adoptObligation(makeMove(3, 2, a10), 25, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2)
},
{	UpdatePosition(3, 2, 10)
},
{	adoptObligation(makeMove(3, 2, a10), 25, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 2, Clock); NoNextStep(3, 2), UpdatePosition(3, 2, 10), adoptObligation(makeMove(3, 2, a10), 25, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2)
},
{	UpdatePosition(3, 2, 10)
},
{	adoptObligation(makeMove(3, 2, a10), 25, reduce(a10, 300))
}


[Planbase]:{	UpdatePosition(3, 2, 10);
	NoNextStep(3, 2)
},
{	adoptz(makeMove(3, 2, 300) : 4 Jun 2015 07:34:56 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(3, 2, 10); NoNextStep(3, 2), adoptz(makeMove(3, 2, 300) : 4 Jun 2015 07:34:56 GMT, priority 10)]
[After]:{	UpdatePosition(3, 2, 10);
	NoNextStep(3, 2)
},
{	adoptz(makeMove(3, 2, 300) : 4 Jun 2015 07:34:56 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 2, 300) : 4 Jun 2015 07:34:56 GMT, priority 10
[Planbase]:{	NoNextStep(3, 2)
}


[new scheduled]:[NoNextStep(3, 2)]
[After]:{	NoNextStep(3, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 1,1 color: neco
a40[CTAH] moveStepToGoal returns: [1,1]
Event processed adoptObligation(makeMove(1, 1, a40), 25, reduce(a40, 300))
Event processed UpdatePosition(1, 1, 10)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1)
},
{	adoptObligation(makeMove(1, 1, a40), 25, reduce(a40, 300))
},
{	UpdatePosition(1, 1, 10)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1), adoptObligation(makeMove(1, 1, a40), 25, reduce(a40, 300)), UpdatePosition(1, 1, 10)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1)
},
{	adoptObligation(makeMove(1, 1, a40), 25, reduce(a40, 300))
},
{	UpdatePosition(1, 1, 10)
}


[Planbase]:{	UpdatePosition(1, 1, 10);
	NoNextStep(1, 1)
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 07:34:57 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(1, 1, 10); NoNextStep(1, 1), adoptz(makeMove(1, 1, 300) : 4 Jun 2015 07:34:57 GMT, priority 10)]
[After]:{	UpdatePosition(1, 1, 10);
	NoNextStep(1, 1)
},
{	adoptz(makeMove(1, 1, 300) : 4 Jun 2015 07:34:57 GMT, priority 10)
}


obligation to be adopted: makeMove(1, 1, 300) : 4 Jun 2015 07:34:57 GMT, priority 10
[Planbase]:{	NoNextStep(1, 1)
}


[new scheduled]:[NoNextStep(1, 1)]
[After]:{	NoNextStep(1, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 1,3 color: neco
a10[CTAH] paths: 1000
Need to wait 4 more seconds
object notification: Time [clock=11, time=2015-06-04 08:18:20.552]
org notification: Time [clock=11, time=2015-06-04 08:18:20.552]
object notification: Time [clock=11, time=2015-06-04 08:18:20.552]
object notification: Time [clock=11, time=2015-06-04 08:18:20.552]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][2] [2][2] [2][1] [1][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [2,2,no,no]
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, Clock)} else NextStep(2, 2), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, 10)} else NextStep(2, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(2, 2)
		}
}


[Planbase]:{	NextStep(2, 2)
}


[new scheduled]:[NextStep(2, 2)]
[After]:{	NextStep(2, 2)
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [1][1] [1][2] [1][3]

a40[CTAH] moveStepToGoalTest returns I have chip: [1,2,no,no]
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, Clock)} else NextStep(1, 2), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, 10)} else NextStep(1, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-06-04 08:18:23.861, clock=11]
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-06-04 08:18:23.861, clock=11]
[Planbase]:{	NextStep(1, 2)
}


[new scheduled]:[NextStep(1, 2)]
[After]:{	NextStep(1, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-04 08:18:23.984, clock=11]
object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-04 08:18:23.984, clock=11]
a10[CTAH] moveStepToGoal returns: [2,2]
Event processed UpdatePosition(2, 2, 11)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 11)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 2, Clock); NoNextStep(2, 2), UpdatePosition(2, 2, 11)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 11)
}


[Planbase]:{	UpdatePosition(2, 2, 11);
	NoNextStep(2, 2)
}


[new scheduled]:[UpdatePosition(2, 2, 11); NoNextStep(2, 2)]
[After]:{	UpdatePosition(2, 2, 11);
	NoNextStep(2, 2)
}


a40[CTAH] moveStepToGoal returns: [1,2]
Event processed UpdatePosition(1, 2, 11)
[Planbase]:{	NoNextStep(2, 2)
}


[new scheduled]:[NoNextStep(2, 2)]
[After]:{	NoNextStep(2, 2)
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2)
},
{	UpdatePosition(1, 2, 11)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 2, Clock); NoNextStep(1, 2), UpdatePosition(1, 2, 11)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2)
},
{	UpdatePosition(1, 2, 11)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	UpdatePosition(1, 2, 11);
	NoNextStep(1, 2)
}


[new scheduled]:[UpdatePosition(1, 2, 11); NoNextStep(1, 2)]
[After]:{	UpdatePosition(1, 2, 11);
	NoNextStep(1, 2)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	NoNextStep(1, 2)
}


[new scheduled]:[NoNextStep(1, 2)]
[After]:{	NoNextStep(1, 2)
}


[Planbase]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 1,1 color: neco
[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 1,3 color: neco
org notification: Time [clock=12, time=2015-06-04 08:18:30.555]
object notification: Time [clock=12, time=2015-06-04 08:18:30.555]
object notification: Time [clock=12, time=2015-06-04 08:18:30.555]
object notification: Time [clock=12, time=2015-06-04 08:18:30.555]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] paths: 1000
Need to wait 4 more seconds
a10[CTAH] paths: 1000
Need to wait 3 more seconds
a40[CTAH] path: 0
a40[CTAH] path: Path: [1][2] [1][3]

a40[CTAH] moveStepToGoalTest returns I have chip: [1,3,no,no]
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 3, no); SentProposal(no, no, open, Clock)} else NextStep(1, 3), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(1, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 3, no); SentProposal(no, no, open, 11)} else NextStep(1, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(1, 3)
		}
}


[Planbase]:{	NextStep(1, 3)
}


[new scheduled]:[NextStep(1, 3)]
[After]:{	NextStep(1, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 3),L2,0); if B(L2=[actionresult([1,3])]) then {B(clock(Clock)); UpdatePosition(1, 3, Clock)}; NoNextStep(1, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3)
}


Need to wait 3 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=3], time=2015-06-04 08:18:36.946, clock=12]
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=3], time=2015-06-04 08:18:36.946, clock=12]
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][2] [1][2] [1][1]

a10[CTAH] moveStepToGoalTest returns I have chip: [1,2,no,no]
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, Clock)} else NextStep(1, 2), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, 11)} else NextStep(1, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	NextStep(1, 2)
}


[new scheduled]:[NextStep(1, 2)]
[After]:{	NextStep(1, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=2], time=2015-06-04 08:18:37.569, clock=12]
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=2], time=2015-06-04 08:18:37.569, clock=12]
a40[CTAH] moveStepToGoal returns: [1,3]
Event processed UpdatePosition(1, 3, 12)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 3, Clock);
	NoNextStep(1, 3)
},
{	UpdatePosition(1, 3, 12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 3, Clock); NoNextStep(1, 3), UpdatePosition(1, 3, 12)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 3, Clock);
	NoNextStep(1, 3)
},
{	UpdatePosition(1, 3, 12)
}


[Planbase]:{	UpdatePosition(1, 3, 12);
	NoNextStep(1, 3)
}


[new scheduled]:[UpdatePosition(1, 3, 12); NoNextStep(1, 3)]
[After]:{	UpdatePosition(1, 3, 12);
	NoNextStep(1, 3)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=13, time=2015-06-04 08:18:40.558]
org notification: Time [clock=13, time=2015-06-04 08:18:40.558]
object notification: Time [clock=13, time=2015-06-04 08:18:40.558]
object notification: Time [clock=13, time=2015-06-04 08:18:40.558]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] moveStepToGoal returns: [1,2]
Event processed UpdatePosition(1, 2, 12)
Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2)
},
{	UpdatePosition(1, 2, 12)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 2, Clock); NoNextStep(1, 2), UpdatePosition(1, 2, 12), UpdateClock(13)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 2, Clock);
	NoNextStep(1, 2)
},
{	UpdatePosition(1, 2, 12)
},
{	UpdateClock(13)
}


[Planbase]:{	UpdatePosition(1, 2, 12);
	NoNextStep(1, 2)
}


[new scheduled]:[UpdatePosition(1, 2, 12); NoNextStep(1, 2)]
[After]:{	UpdatePosition(1, 2, 12);
	NoNextStep(1, 2)
}


[Planbase]:{	NoNextStep(1, 2)
}


[new scheduled]:[NoNextStep(1, 2)]
[After]:{	NoNextStep(1, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 1,1 color: neco
a10[CTAH] paths: 1000
Need to wait 4 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][2] [1][1]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,1,8877]
org notification: Proposal [id=8877, agent=a10, agent2=a20, clock=13, time=2015-06-04 08:18:50.07]
[Planbase]:{	B(clock(Clock));
	if	B(not 8877=no)
	then	{	NextStep(1, 1, 8877);
			SentProposal(8877, 1, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 8877=no) then {NextStep(1, 1, 8877); SentProposal(8877, 1, open, Clock)} else NextStep(1, 1)]
[After]:{	B(clock(Clock));
	if	B(not 8877=no)
	then	{	NextStep(1, 1, 8877);
			SentProposal(8877, 1, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
}


[Planbase]:{	if	B(not 8877=no)
	then	{	NextStep(1, 1, 8877);
			SentProposal(8877, 1, open, 13)
		}
	else	{	NextStep(1, 1)
		}
}


[new scheduled]:[if B(not 8877=no) then {NextStep(1, 1, 8877); SentProposal(8877, 1, open, 13)} else NextStep(1, 1)]
[After]:{	if	B(not 8877=no)
	then	{	NextStep(1, 1, 8877);
			SentProposal(8877, 1, open, 13)
		}
	else	{	NextStep(1, 1)
		}
}


[Planbase]:{	NextStep(1, 1, 8877);
	SentProposal(8877, 1, open, 13)
}


[new scheduled]:[NextStep(1, 1, 8877); SentProposal(8877, 1, open, 13)]
[After]:{	NextStep(1, 1, 8877);
	SentProposal(8877, 1, open, 13)
}


[Planbase]:{	SentProposal(8877, 1, open, 13)
}


[new scheduled]:[SentProposal(8877, 1, open, 13)]
[After]:{	SentProposal(8877, 1, open, 13)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


org notification: Time [clock=14, time=2015-06-04 08:18:50.562]
object notification: Time [clock=14, time=2015-06-04 08:18:50.562]
object notification: Time [clock=14, time=2015-06-04 08:18:50.562]
object notification: Time [clock=14, time=2015-06-04 08:18:50.562]
Event processed UpdateClock(14)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[findNextStep(neco, 700), UpdateClock(14)]
[After]:{	findNextStep(neco, 700)
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


object notification: Time [clock=15, time=2015-06-04 08:19:00.564]
object notification: Time [clock=15, time=2015-06-04 08:19:00.564]
org notification: Time [clock=15, time=2015-06-04 08:19:00.564]
object notification: Time [clock=15, time=2015-06-04 08:19:00.564]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}, UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=8877, response=accepted, clock=15, time=2015-06-04 08:19:09.998]
Event processed @ctenv(functionToList(message(response, 8877, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	@ctenv(functionToList(message(response, 8877, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}, @ctenv(functionToList(message(response, 8877, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	@ctenv(functionToList(message(response, 8877, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@74c11dda
[CTAH] The created APLList : [response,8877,accept]
[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}, if B(response=response) then ReceivedResponse(accept, 8877)]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8877)
		}
}


[Planbase]:{	ReceivedResponse(accept, 8877)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 8877)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 8877)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>13+Wait) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	B(timetowait(Wait));
	if	B(15>13+Wait)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[new scheduled]:[if B(15>13+7) then {NoNextStep(1, 1, 8877); ReceivedResponse(noresponse, 8877)}]
[After]:{	if	B(15>13+7)
	then	{	NoNextStep(1, 1, 8877);
			ReceivedResponse(noresponse, 8877)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 8877)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1, 8877)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 8877)
}


Need to wait 3 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-04 08:19:10.38, clock=15]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-04 08:19:10.38, clock=15]
object notification: Time [clock=16, time=2015-06-04 08:19:10.566]
org notification: Time [clock=16, time=2015-06-04 08:19:10.566]
object notification: Time [clock=16, time=2015-06-04 08:19:10.566]
object notification: Time [clock=16, time=2015-06-04 08:19:10.566]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] moveStepToGoal returns: [1,1]
Event processed UpdatePosition(1, 1, 15)
Event processed UpdateClock(16)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 8877)
},
{	UpdatePosition(1, 1, 15)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1, 8877), UpdatePosition(1, 1, 15), UpdateClock(16)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 8877)
},
{	UpdatePosition(1, 1, 15)
},
{	UpdateClock(16)
}


[Planbase]:{	UpdatePosition(1, 1, 15);
	NoNextStep(1, 1, 8877)
}


[new scheduled]:[UpdatePosition(1, 1, 15); NoNextStep(1, 1, 8877)]
[After]:{	UpdatePosition(1, 1, 15);
	NoNextStep(1, 1, 8877)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=2], time=2015-06-04 08:19:17.855, clock=16]
org notification: Time [clock=17, time=2015-06-04 08:19:20.568]
object notification: Time [clock=17, time=2015-06-04 08:19:20.568]
object notification: Time [clock=17, time=2015-06-04 08:19:20.568]
object notification: Time [clock=17, time=2015-06-04 08:19:20.568]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=7650, agent=a20, agent2=a10, clock=17, time=2015-06-04 08:19:27.443]
object notification: Obligation [subject=a10, obligation=[respondToRequest(7650)], sanction=[reduce(a10, 300)], deadline=22, time=2015-06-04 08:19:27.447, clock=17]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 7650, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(7650), 22, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 7650, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7650), 22, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 7650, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(7650), 22, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 7650, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(7650), 22, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2e231405
[CTAH] The created APLList : [proposal,1,7650,open]
[Planbase]:{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7650, 300) : 4 Jun 2015 07:36:07 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(7650, 300) : 4 Jun 2015 07:36:07 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(7650, 300) : 4 Jun 2015 07:36:07 GMT, priority 10)
}


obligation to be adopted: respondToRequest(7650, 300) : 4 Jun 2015 07:36:07 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,7650,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7650, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 7650, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7650, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 7650, open)
}


[new scheduled]:[ReceivedProposal(1, 7650, open)]
[After]:{	ReceivedProposal(1, 7650, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(7650, 300)) then skip else if B(not scoreAfterExchange(7650, Score)) then getScoreAfterExchange(7650); B(scoreAfterExchange(7650, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer), if G(acceptRequest(7650, V2)) then skip else if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7650, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7650, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 7650, closed(A)))
							then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(7650, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(7650, Score))
			then	{	getScoreAfterExchange(7650)
				}
		};
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7650, Score))
	then	{	getScoreAfterExchange(7650)
		};
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[new scheduled]:[if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), if B(not scoreAfterExchange(7650, Score)) then getScoreAfterExchange(7650); B(scoreAfterExchange(7650, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer)]
[After]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(7650, Score))
	then	{	getScoreAfterExchange(7650)
		};
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(7650);
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(7650); B(scoreAfterExchange(7650, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(7650);
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	GetScoreAfterExchange(7650, yes);
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[new scheduled]:[if G(acceptRequest(7650, V2)) then skip else if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), GetScoreAfterExchange(7650, yes); B(scoreAfterExchange(7650, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer)]
[After]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7650, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7650, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 7650, closed(A)))
							then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(7650, yes);
	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[new scheduled]:[if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), B(scoreAfterExchange(7650, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer)]
[After]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(7650, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7650, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, accept)
}


[new scheduled]:[if G(acceptRequest(7650, V2)) then skip else if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7650, accept)]
[After]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7650, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7650, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 7650, closed(A)))
							then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7650, accept)
}


[Planbase]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7650, accept)
}


[new scheduled]:[if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7650, accept)]
[After]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(7650, accept)
}


[Planbase]:{	skip
},
{	sendResponse(7650, accept)
}


[new scheduled]:[skip, sendResponse(7650, accept)]
[After]:{	skip
},
{	sendResponse(7650, accept)
}


[Planbase]:{	@ctenv(sendResponse(7650, accept),L1,0);
	SentResponse(accept, 7650)
}


[new scheduled]:[if G(acceptRequest(7650, V2)) then skip else if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10), @ctenv(sendResponse(7650, accept),L1,0); SentResponse(accept, 7650)]
[After]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(7650, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(7650, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 7650, closed(A)))
							then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(7650, accept),L1,0);
	SentResponse(accept, 7650)
}


Need to wait 2 more seconds
a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=7650, response=accepted, clock=17, time=2015-06-04 08:19:30.181]
[Planbase]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(7650, V2)) then skip else if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(7650, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(7650, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 7650, closed(A)))
					then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 7650, closed(A)))
			then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(7650, V2)) then skip else if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(7650, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 7650, closed(A)))
			then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 7650, closed(A)))
	then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 7650, closed(A))) then adoptz(respondToRequest(7650, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 7650, closed(A)))
	then	{	adoptz(respondToRequest(7650, 50) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=2], time=2015-06-04 08:19:30.433, clock=17]
org notification: Time [clock=18, time=2015-06-04 08:19:30.573]
object notification: Time [clock=18, time=2015-06-04 08:19:30.573]
object notification: Time [clock=18, time=2015-06-04 08:19:30.573]
object notification: Time [clock=18, time=2015-06-04 08:19:30.573]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=2504, agent=a20, agent2=a40, clock=18, time=2015-06-04 08:19:39.749]
object notification: Obligation [subject=a40, obligation=[respondToRequest(2504)], sanction=[reduce(a40, 300)], deadline=23, time=2015-06-04 08:19:39.754, clock=18]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 2504, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(2504), 23, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 2504, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2504), 23, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 2504, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(2504), 23, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 2504, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2504), 23, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4785a127
[CTAH] The created APLList : [proposal,1,2504,open]
[Planbase]:{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2504, 300) : 4 Jun 2015 07:36:19 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(2504, 300) : 4 Jun 2015 07:36:19 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2504, 300) : 4 Jun 2015 07:36:19 GMT, priority 10)
}


obligation to be adopted: respondToRequest(2504, 300) : 4 Jun 2015 07:36:19 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,2504,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 2504, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 2504, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 2504, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 2504, open)
}


[new scheduled]:[ReceivedProposal(1, 2504, open)]
[After]:{	ReceivedProposal(1, 2504, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(2504, 300)) then skip else if B(not scoreAfterExchange(2504, Score)) then getScoreAfterExchange(2504); B(scoreAfterExchange(2504, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer), if G(acceptRequest(2504, V2)) then skip else if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2504, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2504, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 2504, closed(A)))
							then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(2504, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(2504, Score))
			then	{	getScoreAfterExchange(2504)
				}
		};
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(2504, Score))
	then	{	getScoreAfterExchange(2504)
		};
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[new scheduled]:[if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), if B(not scoreAfterExchange(2504, Score)) then getScoreAfterExchange(2504); B(scoreAfterExchange(2504, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer)]
[After]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(2504, Score))
	then	{	getScoreAfterExchange(2504)
		};
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(2504);
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(2504); B(scoreAfterExchange(2504, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(2504);
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	GetScoreAfterExchange(2504, yes);
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[new scheduled]:[if G(acceptRequest(2504, V2)) then skip else if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), GetScoreAfterExchange(2504, yes); B(scoreAfterExchange(2504, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer)]
[After]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2504, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2504, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 2504, closed(A)))
							then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(2504, yes);
	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[new scheduled]:[if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), B(scoreAfterExchange(2504, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer)]
[After]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(2504, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2504, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, accept)
}


[new scheduled]:[if G(acceptRequest(2504, V2)) then skip else if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(2504, accept)]
[After]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2504, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2504, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 2504, closed(A)))
							then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2504, accept)
}


[Planbase]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(2504, accept)
}


[new scheduled]:[if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), B(accept=accept); sendResponse(2504, accept)]
[After]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(2504, accept)
}


[Planbase]:{	skip
},
{	sendResponse(2504, accept)
}


[new scheduled]:[skip, sendResponse(2504, accept)]
[After]:{	skip
},
{	sendResponse(2504, accept)
}


[Planbase]:{	@ctenv(sendResponse(2504, accept),L1,0);
	SentResponse(accept, 2504)
}


[new scheduled]:[if G(acceptRequest(2504, V2)) then skip else if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), @ctenv(sendResponse(2504, accept),L1,0); SentResponse(accept, 2504)]
[After]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2504, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2504, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 2504, closed(A)))
							then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(2504, accept),L1,0);
	SentResponse(accept, 2504)
}


Need to wait 2 more seconds
org notification: Time [clock=19, time=2015-06-04 08:19:40.576]
object notification: Time [clock=19, time=2015-06-04 08:19:40.576]
object notification: Time [clock=19, time=2015-06-04 08:19:40.576]
object notification: Time [clock=19, time=2015-06-04 08:19:40.576]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

org notification: Response [id=2504, response=accepted, clock=19, time=2015-06-04 08:19:42.323]
Event processed UpdateClock(19)
[Planbase]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if G(respondToRequest(2504, V2)) then skip else if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10), UpdateClock(19)]
[After]:{	if	G(respondToRequest(2504, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2504, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 2504, closed(A)))
					then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 2504, closed(A)))
			then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(2504, V2)) then skip else if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(2504, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 2504, closed(A)))
			then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 2504, closed(A)))
	then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 2504, closed(A))) then adoptz(respondToRequest(2504, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 2504, closed(A)))
	then	{	adoptz(respondToRequest(2504, 50) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=2], time=2015-06-04 08:19:44.545, clock=19]
org notification: Time [clock=20, time=2015-06-04 08:19:50.579]
object notification: Time [clock=20, time=2015-06-04 08:19:50.579]
object notification: Time [clock=20, time=2015-06-04 08:19:50.579]
object notification: Time [clock=20, time=2015-06-04 08:19:50.579]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=2], time=2015-06-04 08:19:54.893, clock=20]
org notification: Time [clock=21, time=2015-06-04 08:20:00.583]
object notification: Time [clock=21, time=2015-06-04 08:20:00.583]
object notification: Time [clock=21, time=2015-06-04 08:20:00.583]
object notification: Time [clock=21, time=2015-06-04 08:20:00.583]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@20cfd1ea
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@552bd792
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@277fe0c8
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-06-04 08:20:10.587]
object notification: Time [clock=22, time=2015-06-04 08:20:10.587]
object notification: Time [clock=22, time=2015-06-04 08:20:10.587]
org notification: Time [clock=22, time=2015-06-04 08:20:10.587]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=1847, agent=a20, agent2=a40, clock=22, time=2015-06-04 08:20:12.623]
object notification: Obligation [subject=a40, obligation=[respondToRequest(1847)], sanction=[reduce(a40, 300)], deadline=27, time=2015-06-04 08:20:12.63, clock=22]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 1847, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1847), 27, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 1847, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1847), 27, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 1847, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1847), 27, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 1847, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1847), 27, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@76501a7c
[CTAH] The created APLList : [proposal,1,1847,open]
[Planbase]:{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1847, 300) : 4 Jun 2015 07:36:52 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1847, 300) : 4 Jun 2015 07:36:52 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1847, 300) : 4 Jun 2015 07:36:52 GMT, priority 10)
}


obligation to be adopted: respondToRequest(1847, 300) : 4 Jun 2015 07:36:52 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,1847,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1847, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 1847, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1847, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 1847, open)
}


[new scheduled]:[ReceivedProposal(1, 1847, open)]
[After]:{	ReceivedProposal(1, 1847, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(1847, 300)) then skip else if B(not scoreAfterExchange(1847, Score)) then getScoreAfterExchange(1847); B(scoreAfterExchange(1847, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer), if G(acceptRequest(1847, V2)) then skip else if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1847, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1847, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1847, closed(A)))
							then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(1847, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1847, Score))
			then	{	getScoreAfterExchange(1847)
				}
		};
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1847, Score))
	then	{	getScoreAfterExchange(1847)
		};
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[new scheduled]:[if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), if B(not scoreAfterExchange(1847, Score)) then getScoreAfterExchange(1847); B(scoreAfterExchange(1847, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer)]
[After]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1847, Score))
	then	{	getScoreAfterExchange(1847)
		};
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(1847);
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(1847); B(scoreAfterExchange(1847, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(1847);
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	GetScoreAfterExchange(1847, yes);
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[new scheduled]:[if G(acceptRequest(1847, V2)) then skip else if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), GetScoreAfterExchange(1847, yes); B(scoreAfterExchange(1847, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer)]
[After]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1847, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1847, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1847, closed(A)))
							then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(1847, yes);
	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[new scheduled]:[if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), B(scoreAfterExchange(1847, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer)]
[After]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1847, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1847, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, accept)
}


[new scheduled]:[if G(acceptRequest(1847, V2)) then skip else if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1847, accept)]
[After]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1847, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1847, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1847, closed(A)))
							then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1847, accept)
}


[Planbase]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1847, accept)
}


[new scheduled]:[if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), B(accept=accept); sendResponse(1847, accept)]
[After]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1847, accept)
}


[Planbase]:{	skip
},
{	sendResponse(1847, accept)
}


[new scheduled]:[skip, sendResponse(1847, accept)]
[After]:{	skip
},
{	sendResponse(1847, accept)
}


[Planbase]:{	@ctenv(sendResponse(1847, accept),L1,0);
	SentResponse(accept, 1847)
}


[new scheduled]:[if G(acceptRequest(1847, V2)) then skip else if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), @ctenv(sendResponse(1847, accept),L1,0); SentResponse(accept, 1847)]
[After]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1847, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1847, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1847, closed(A)))
							then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(1847, accept),L1,0);
	SentResponse(accept, 1847)
}


Need to wait 2 more seconds
(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:1,C:1).
Chips: { chips  'blue':0 'white':3 'brown':3 'yellow':1 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:1,C:3).
Chips: { chips  'blue':1 'white':2 'brown':2 'yellow':3 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:2,C:2).
Chips: { chips  'blue':0 'white':4 'brown':2 'yellow':2 }.
Score: 700.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@64ccc22d
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@4aab2e4e
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

org notification: Response [id=1847, response=accepted, clock=22, time=2015-06-04 08:20:15.202]
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(1847, V2)) then skip else if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(respondToRequest(1847, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1847, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1847, closed(A)))
					then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
						}
				}
		}
},
{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5f18ec6e
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1847, closed(A)))
			then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
				}
		}
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if G(acceptRequest(1847, V2)) then skip else if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequest(1847, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1847, closed(A)))
			then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
				}
		}
},
{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 1847, closed(A)))
	then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
		}
},
{	ReceivedEvent(game_ended)
}


[new scheduled]:[if B(not receivedP(1, 1847, closed(A))) then adoptz(respondToRequest(1847, 50) : Infinite, priority 10), ReceivedEvent(game_ended)]
[After]:{	if	B(not receivedP(1, 1847, closed(A)))
	then	{	adoptz(respondToRequest(1847, 50) : Infinite, priority 10)
		}
},
{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=23, time=2015-06-04 08:20:20.589]
object notification: Time [clock=23, time=2015-06-04 08:20:20.589]
object notification: Time [clock=23, time=2015-06-04 08:20:20.589]
object notification: Time [clock=23, time=2015-06-04 08:20:20.589]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-04 08:20:30.593]
object notification: Time [clock=24, time=2015-06-04 08:20:30.593]
object notification: Time [clock=24, time=2015-06-04 08:20:30.593]
org notification: Time [clock=24, time=2015-06-04 08:20:30.593]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=25, time=2015-06-04 08:20:40.596]
object notification: Time [clock=25, time=2015-06-04 08:20:40.596]
object notification: Time [clock=25, time=2015-06-04 08:20:40.596]
org notification: Time [clock=25, time=2015-06-04 08:20:40.596]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=26, time=2015-06-04 08:20:50.599]
object notification: Time [clock=26, time=2015-06-04 08:20:50.599]
object notification: Time [clock=26, time=2015-06-04 08:20:50.599]
object notification: Time [clock=26, time=2015-06-04 08:20:50.599]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=27, time=2015-06-04 08:21:00.601]
object notification: Time [clock=27, time=2015-06-04 08:21:00.601]
org notification: Time [clock=27, time=2015-06-04 08:21:00.601]
object notification: Time [clock=27, time=2015-06-04 08:21:00.601]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=28, time=2015-06-04 08:21:10.604]
object notification: Time [clock=28, time=2015-06-04 08:21:10.604]
object notification: Time [clock=28, time=2015-06-04 08:21:10.604]
object notification: Time [clock=28, time=2015-06-04 08:21:10.604]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=29, time=2015-06-04 08:21:20.607]
object notification: Time [clock=29, time=2015-06-04 08:21:20.607]
object notification: Time [clock=29, time=2015-06-04 08:21:20.607]
object notification: Time [clock=29, time=2015-06-04 08:21:20.607]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-04 08:21:30.609]
org notification: Time [clock=30, time=2015-06-04 08:21:30.609]
object notification: Time [clock=30, time=2015-06-04 08:21:30.609]
object notification: Time [clock=30, time=2015-06-04 08:21:30.609]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=31, time=2015-06-04 08:21:40.611]
object notification: Time [clock=31, time=2015-06-04 08:21:40.611]
object notification: Time [clock=31, time=2015-06-04 08:21:40.611]
object notification: Time [clock=31, time=2015-06-04 08:21:40.611]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=32, time=2015-06-04 08:21:50.613]
object notification: Time [clock=32, time=2015-06-04 08:21:50.613]
object notification: Time [clock=32, time=2015-06-04 08:21:50.613]
object notification: Time [clock=32, time=2015-06-04 08:21:50.613]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(32)
Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=33, time=2015-06-04 08:22:00.617]
org notification: Time [clock=33, time=2015-06-04 08:22:00.617]
object notification: Time [clock=33, time=2015-06-04 08:22:00.617]
object notification: Time [clock=33, time=2015-06-04 08:22:00.617]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=34, time=2015-06-04 08:22:10.62]
object notification: Time [clock=34, time=2015-06-04 08:22:10.62]
object notification: Time [clock=34, time=2015-06-04 08:22:10.62]
object notification: Time [clock=34, time=2015-06-04 08:22:10.62]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=35, time=2015-06-04 08:22:20.623]
object notification: Time [clock=35, time=2015-06-04 08:22:20.623]
object notification: Time [clock=35, time=2015-06-04 08:22:20.623]
object notification: Time [clock=35, time=2015-06-04 08:22:20.623]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(35)
Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=36, time=2015-06-04 08:22:30.627]
object notification: Time [clock=36, time=2015-06-04 08:22:30.627]
object notification: Time [clock=36, time=2015-06-04 08:22:30.627]
object notification: Time [clock=36, time=2015-06-04 08:22:30.627]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(36)
Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=37, time=2015-06-04 08:22:40.63]
org notification: Time [clock=37, time=2015-06-04 08:22:40.63]
object notification: Time [clock=37, time=2015-06-04 08:22:40.63]
object notification: Time [clock=37, time=2015-06-04 08:22:40.63]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=38, time=2015-06-04 08:22:50.633]
org notification: Time [clock=38, time=2015-06-04 08:22:50.633]
object notification: Time [clock=38, time=2015-06-04 08:22:50.633]
object notification: Time [clock=38, time=2015-06-04 08:22:50.633]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=39, time=2015-06-04 08:23:00.637]
org notification: Time [clock=39, time=2015-06-04 08:23:00.637]
object notification: Time [clock=39, time=2015-06-04 08:23:00.637]
object notification: Time [clock=39, time=2015-06-04 08:23:00.637]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(39)
Event processed UpdateClock(39)
Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=40, time=2015-06-04 08:23:10.639]
object notification: Time [clock=40, time=2015-06-04 08:23:10.639]
object notification: Time [clock=40, time=2015-06-04 08:23:10.639]
object notification: Time [clock=40, time=2015-06-04 08:23:10.639]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(40)
Event processed UpdateClock(40)
Event processed UpdateClock(40)
[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=41, time=2015-06-04 08:23:20.643]
org notification: Time [clock=41, time=2015-06-04 08:23:20.643]
object notification: Time [clock=41, time=2015-06-04 08:23:20.643]
object notification: Time [clock=41, time=2015-06-04 08:23:20.643]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(41)
Event processed UpdateClock(41)
Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=42, time=2015-06-04 08:23:30.646]
org notification: Time [clock=42, time=2015-06-04 08:23:30.646]
object notification: Time [clock=42, time=2015-06-04 08:23:30.646]
object notification: Time [clock=42, time=2015-06-04 08:23:30.646]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(42)
Event processed UpdateClock(42)
Event processed UpdateClock(42)
[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=43, time=2015-06-04 08:23:40.65]
object notification: Time [clock=43, time=2015-06-04 08:23:40.65]
object notification: Time [clock=43, time=2015-06-04 08:23:40.65]
org notification: Time [clock=43, time=2015-06-04 08:23:40.65]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(43)
Event processed UpdateClock(43)
Event processed UpdateClock(43)
[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=44, time=2015-06-04 08:23:50.653]
org notification: Time [clock=44, time=2015-06-04 08:23:50.653]
object notification: Time [clock=44, time=2015-06-04 08:23:50.653]
object notification: Time [clock=44, time=2015-06-04 08:23:50.653]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(44)
Event processed UpdateClock(44)
Event processed UpdateClock(44)
[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=45, time=2015-06-04 08:24:00.657]
object notification: Time [clock=45, time=2015-06-04 08:24:00.657]
object notification: Time [clock=45, time=2015-06-04 08:24:00.657]
object notification: Time [clock=45, time=2015-06-04 08:24:00.657]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(45)
Event processed UpdateClock(45)
Event processed UpdateClock(45)
[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=46, time=2015-06-04 08:24:10.66]
object notification: Time [clock=46, time=2015-06-04 08:24:10.66]
object notification: Time [clock=46, time=2015-06-04 08:24:10.66]
object notification: Time [clock=46, time=2015-06-04 08:24:10.66]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(46)
Event processed UpdateClock(46)
[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


Event processed UpdateClock(46)
[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=47, time=2015-06-04 08:24:20.663]
org notification: Time [clock=47, time=2015-06-04 08:24:20.663]
object notification: Time [clock=47, time=2015-06-04 08:24:20.663]
object notification: Time [clock=47, time=2015-06-04 08:24:20.663]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(47)
Event processed UpdateClock(47)
Event processed UpdateClock(47)
[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=48, time=2015-06-04 08:24:30.667]
object notification: Time [clock=48, time=2015-06-04 08:24:30.667]
object notification: Time [clock=48, time=2015-06-04 08:24:30.667]
object notification: Time [clock=48, time=2015-06-04 08:24:30.667]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(48)
Event processed UpdateClock(48)
Event processed UpdateClock(48)
[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=49, time=2015-06-04 08:24:40.671]
object notification: Time [clock=49, time=2015-06-04 08:24:40.671]
object notification: Time [clock=49, time=2015-06-04 08:24:40.671]
org notification: Time [clock=49, time=2015-06-04 08:24:40.671]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(49)
Event processed UpdateClock(49)
Event processed UpdateClock(49)
[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=50, time=2015-06-04 08:24:50.674]
object notification: Time [clock=50, time=2015-06-04 08:24:50.674]
object notification: Time [clock=50, time=2015-06-04 08:24:50.674]
object notification: Time [clock=50, time=2015-06-04 08:24:50.674]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(50)
Event processed UpdateClock(50)
Event processed UpdateClock(50)
[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=51, time=2015-06-04 08:25:00.677]
object notification: Time [clock=51, time=2015-06-04 08:25:00.677]
object notification: Time [clock=51, time=2015-06-04 08:25:00.677]
object notification: Time [clock=51, time=2015-06-04 08:25:00.677]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(51)
Event processed UpdateClock(51)
Event processed UpdateClock(51)
[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=52, time=2015-06-04 08:25:10.68]
object notification: Time [clock=52, time=2015-06-04 08:25:10.68]
object notification: Time [clock=52, time=2015-06-04 08:25:10.68]
object notification: Time [clock=52, time=2015-06-04 08:25:10.68]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(52)
Event processed UpdateClock(52)
Event processed UpdateClock(52)
[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=53, time=2015-06-04 08:25:20.684]
org notification: Time [clock=53, time=2015-06-04 08:25:20.684]
object notification: Time [clock=53, time=2015-06-04 08:25:20.684]
object notification: Time [clock=53, time=2015-06-04 08:25:20.684]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(53)
Event processed UpdateClock(53)
Event processed UpdateClock(53)
[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=54, time=2015-06-04 08:25:30.687]
object notification: Time [clock=54, time=2015-06-04 08:25:30.687]
org notification: Time [clock=54, time=2015-06-04 08:25:30.687]
object notification: Time [clock=54, time=2015-06-04 08:25:30.687]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(54)
Event processed UpdateClock(54)
Event processed UpdateClock(54)
[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


