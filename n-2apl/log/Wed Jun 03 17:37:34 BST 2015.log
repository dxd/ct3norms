2015-06-03 17:37:36,683 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~17.37-gigaspaces-service-192.168.0.40-64321.log
-------------------------last log tuples start--------------------------------
Time [clock=10, time=2015-06-03 17:30:29.433]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 17:29:20.701, clock=0]
Time [clock=11, time=2015-06-03 17:30:39.437]
Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-06-03 17:29:47.783, clock=5]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=3, time=2015-06-03 17:29:21.051]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=3, time=2015-06-03 17:29:21.077]
Time [clock=12, time=2015-06-03 17:30:49.439]
Position [subject=a40, id=null, cell=Cell [x=3, y=6], time=2015-06-03 17:32:07.861, clock=19]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=4], goal=Cell [x=3, y=5], sanction=100, clock=5, time=2015-06-03 17:29:47.272]
Position [subject=a40, id=null, cell=Cell [x=4, y=4], time=2015-06-03 17:30:42.402, clock=11]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=3, time=2015-06-03 17:29:21.092]
Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 17:29:20.865]
Tile [id=null, cell=Cell [x=6, y=4], subject=blue, time=2015-06-03 17:29:20.704, clock=0]
Obligation [subject=a10, obligation=[respondToRequest(1516)], sanction=[reduce(a10, 300)], deadline=24, time=2015-06-03 17:32:06.608, clock=19]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=5], goal=Cell [x=3, y=5], sanction=100, clock=5, time=2015-06-03 17:29:47.391]
Response [id=1516, response=accepted, clock=19, time=2015-06-03 17:32:07.589]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=5], goal=Cell [x=3, y=5], sanction=100, clock=5, time=2015-06-03 17:29:47.482]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=3, time=2015-06-03 17:29:21.096]
Goal [id=null, cell=Cell [x=3, y=5], agent=null, time=2015-06-03 17:29:20.777, clock=0]
Position [subject=a20, id=null, cell=Cell [x=2, y=6], time=2015-06-03 17:31:06.02, clock=13]
Prohibition [subject=a10, prohibition=[color(yellow, a10)], sanction=[reduce(a10, 100)], clock=5, time=2015-06-03 17:29:48.451]
Response [id=4192, response=accepted, clock=10, time=2015-06-03 17:30:35.921]
Response [id=5157, response=accepted, clock=13, time=2015-06-03 17:31:04.428]
Obligation [subject=a10, obligation=[at(3, 4, a10)], sanction=[reduce(a10, 700)], deadline=23, time=2015-06-03 17:29:47.285, clock=5]
Time [clock=13, time=2015-06-03 17:30:59.442]
Prohibition [subject=a20, prohibition=[color(brown, a20)], sanction=[reduce(a20, 100)], clock=5, time=2015-06-03 17:29:48.568]
Time [clock=14, time=2015-06-03 17:31:09.446]
Time [clock=15, time=2015-06-03 17:31:19.45]
Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=6, time=2015-06-03 17:29:51.4]
Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:29:48.0, clock=5]
Time [clock=16, time=2015-06-03 17:31:29.478]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=6], goal=Cell [x=3, y=5], sanction=100, clock=5, time=2015-06-03 17:29:47.576]
Color [id=null, color=brown, agent=a30, type=yes, sanction=100, time=2015-06-03 17:29:48.145, clock=5]
Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-06-03 17:31:06.161, clock=13]
Time [clock=17, time=2015-06-03 17:31:39.48]
Position [subject=a40, id=null, cell=Cell [x=4, y=5], time=2015-06-03 17:31:09.467, clock=14]
Time [clock=18, time=2015-06-03 17:31:49.483]
Response [id=207, response=accepted, clock=13, time=2015-06-03 17:31:05.723]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=3, time=2015-06-03 17:29:21.007]
Time [clock=19, time=2015-06-03 17:31:59.486]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=3, time=2015-06-03 17:29:21.014]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=3, time=2015-06-03 17:29:21.041]
Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-06-03 17:31:11.203, clock=14]
Position [subject=a10, id=null, cell=Cell [x=3, y=3], time=2015-06-03 17:31:18.304, clock=14]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=3, time=2015-06-03 17:29:21.047]
Position [subject=a20, id=null, cell=Cell [x=2, y=5], time=2015-06-03 17:31:28.936, clock=15]
Obligation [subject=a20, obligation=[at(2, 5, a20)], sanction=[reduce(a20, 700)], deadline=23, time=2015-06-03 17:29:47.395, clock=5]
Obligation [subject=a30, obligation=[at(4, 5, a30)], sanction=[reduce(a30, 700)], deadline=23, time=2015-06-03 17:29:47.485, clock=5]
Obligation [subject=a40, obligation=[at(3, 6, a40)], sanction=[reduce(a40, 700)], deadline=23, time=2015-06-03 17:29:47.58, clock=5]
Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:29:48.334, clock=5]
Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=20, time=2015-06-03 17:29:47.8, clock=5]
Position [subject=a10, id=null, cell=Cell [x=3, y=4], time=2015-06-03 17:31:32.549, clock=16]
Time [clock=20, time=2015-06-03 17:32:09.489]
Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:29:20.708, clock=0]
Obligation [subject=a20, obligation=[color(yellow, a20)], sanction=[reduce(a20, 100)], deadline=20, time=2015-06-03 17:29:48.004, clock=5]
Obligation [subject=a30, obligation=[color(brown, a30)], sanction=[reduce(a30, 100)], deadline=20, time=2015-06-03 17:29:48.149, clock=5]
Obligation [subject=a40, obligation=[color(yellow, a40)], sanction=[reduce(a40, 100)], deadline=20, time=2015-06-03 17:29:48.342, clock=5]
Proposal [id=2327, agent=a40, agent2=a10, clock=17, time=2015-06-03 17:31:42.398]
Obligation [subject=a30, obligation=[respondToRequest(4192)], sanction=[reduce(a30, 300)], deadline=15, time=2015-06-03 17:30:34.588, clock=10]
Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 17:29:20.713, clock=0]
Time [clock=21, time=2015-06-03 17:32:19.491]
Obligation [subject=a10, obligation=[makeMove(2, 1, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-03 17:30:36.455, clock=10]
Obligation [subject=a40, obligation=[respondToRequest(207)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 17:30:40.519, clock=11]
Obligation [subject=a40, obligation=[makeMove(4, 4, a40)], sanction=[reduce(a40, 300)], deadline=26, time=2015-06-03 17:30:42.421, clock=11]
Position [subject=a40, id=null, cell=Cell [x=3, y=5], time=2015-06-03 17:31:43.64, clock=17]
Proposal [id=1516, agent=a40, agent2=a10, clock=19, time=2015-06-03 17:32:06.604]
Obligation [subject=a10, obligation=[respondToRequest(5157)], sanction=[reduce(a10, 300)], deadline=18, time=2015-06-03 17:31:03.738, clock=13]
Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-06-03 17:30:36.429, clock=10]
Obligation [subject=a20, obligation=[respondToRequest(4636)], sanction=[reduce(a20, 300)], deadline=18, time=2015-06-03 17:31:05.653, clock=13]
Time [clock=22, time=2015-06-03 17:32:29.495]
Time [clock=23, time=2015-06-03 17:32:39.499]
Obligation [subject=a20, obligation=[makeMove(2, 6, a20)], sanction=[reduce(a20, 300)], deadline=28, time=2015-06-03 17:31:06.024, clock=13]
Time [clock=24, time=2015-06-03 17:32:49.503]
Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:29:48.447, clock=5]
Time [clock=4, time=2015-06-03 17:29:29.412]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-03 17:29:20.647, clock=0]
Time [clock=5, time=2015-06-03 17:29:39.416]
Time [clock=6, time=2015-06-03 17:29:49.419]
Time [clock=7, time=2015-06-03 17:29:59.422]
Obligation [subject=a30, obligation=[respondToRequest(2192)], sanction=[reduce(a30, 300)], deadline=19, time=2015-06-03 17:31:09.877, clock=14]
Obligation [subject=a30, obligation=[respondToRequest(8561)], sanction=[reduce(a30, 300)], deadline=19, time=2015-06-03 17:31:15.602, clock=14]
Time [clock=8, time=2015-06-03 17:30:09.426]
Color [id=null, color=brown, agent=a20, type=no, sanction=100, time=2015-06-03 17:29:48.562, clock=5]
Obligation [subject=a20, obligation=[respondToRequest(6895)], sanction=[reduce(a20, 300)], deadline=19, time=2015-06-03 17:31:15.841, clock=14]
Obligation [subject=a20, obligation=[respondToRequest(9327)], sanction=[reduce(a20, 300)], deadline=20, time=2015-06-03 17:31:26.834, clock=15]
Obligation [subject=a10, obligation=[respondToRequest(2327)], sanction=[reduce(a10, 300)], deadline=22, time=2015-06-03 17:31:42.403, clock=17]
Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:29:48.658, clock=5]
Obligation [subject=a10, obligation=[surround(3, 5)], sanction=[reduce(g, 700)], deadline=25, time=2015-06-03 17:29:20.99, clock=3]
Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-03 17:29:20.65, clock=0]
Points [subject=a10, time=2015-06-03 17:31:06.171, clock=13, value=900, id=null]
Time [clock=9, time=2015-06-03 17:30:19.43]
Time [clock=1, time=2015-06-03 17:28:59.377]
Time [clock=2, time=2015-06-03 17:29:09.396]
Time [clock=3, time=2015-06-03 17:29:19.404]
Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:29:20.653, clock=0]
Points [subject=a10, time=2015-06-03 17:31:18.32, clock=14, value=600, id=null]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:29:20.66, clock=0]
Points [subject=a10, time=2015-06-03 17:32:19.516, clock=21, value=500, id=null]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:29:20.662, clock=0]
Points [subject=a20, time=2015-06-03 17:32:19.518, clock=21, value=900, id=null]
Points [subject=a30, time=2015-06-03 17:32:19.522, clock=21, value=900, id=null]
Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:29:20.666, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:29:20.668, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 17:29:20.671, clock=0]
Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 17:29:48.737, clock=5]
Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 17:29:20.674, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:29:20.676, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:29:20.679, clock=0]
Response [id=4636, response=accepted, clock=13, time=2015-06-03 17:31:09.067]
Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 17:29:20.681, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-06-03 17:29:20.684, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 17:29:20.687, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 17:29:20.69, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=blue, time=2015-06-03 17:29:20.693, clock=0]
Response [id=2192, response=accepted, clock=14, time=2015-06-03 17:31:10.821]
Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:29:20.698, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 17:29:20.633, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:29:20.639, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 17:29:20.641, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-06-03 17:29:20.644, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-03 17:29:20.569, clock=0]
Proposal [id=4192, agent=a10, agent2=a30, clock=10, time=2015-06-03 17:30:34.571]
Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 17:29:20.571, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 17:29:20.574, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 17:29:20.577, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 17:29:20.58, clock=0]
Proposal [id=207, agent=a10, agent2=a40, clock=11, time=2015-06-03 17:30:40.515]
Response [id=8561, response=accepted, clock=14, time=2015-06-03 17:31:16.981]
Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 17:29:20.582, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-06-03 17:29:20.584, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-03 17:29:20.587, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:29:20.591, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:29:20.596, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=yellow, time=2015-06-03 17:29:20.599, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 17:29:20.602, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:29:20.611, clock=0]
Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:29:20.619, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 17:29:20.623, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-03 17:29:20.627, clock=0]
Proposal [id=5157, agent=a20, agent2=a10, clock=13, time=2015-06-03 17:31:03.734]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 17:29:20.63, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:29:20.553, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:29:20.556, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-03 17:29:20.558, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 17:29:20.561, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-03 17:29:20.518, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:29:20.548, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 17:29:20.55, clock=0]
Proposal [id=4636, agent=a40, agent2=a20, clock=13, time=2015-06-03 17:31:05.649]
Proposal [id=2192, agent=a10, agent2=a30, clock=14, time=2015-06-03 17:31:09.873]
Proposal [id=8561, agent=a20, agent2=a30, clock=14, time=2015-06-03 17:31:15.597]
Proposal [id=6895, agent=a10, agent2=a20, clock=14, time=2015-06-03 17:31:15.834]
Proposal [id=9327, agent=a10, agent2=a20, clock=15, time=2015-06-03 17:31:26.828]
Response [id=6895, response=accepted, clock=14, time=2015-06-03 17:31:17.919]
Response [id=9327, response=accepted, clock=16, time=2015-06-03 17:31:32.133]
Response [id=2327, response=accepted, clock=17, time=2015-06-03 17:31:43.332]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
object notification: Time [clock=1, time=2015-06-03 17:37:48.242]
object notification: Time [clock=1, time=2015-06-03 17:37:48.242]
object notification: Time [clock=1, time=2015-06-03 17:37:48.242]
org notification: Time [clock=1, time=2015-06-03 17:37:48.242]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Time [clock=2, time=2015-06-03 17:37:58.262]
org notification: Time [clock=2, time=2015-06-03 17:37:58.262]
object notification: Time [clock=2, time=2015-06-03 17:37:58.262]
object notification: Time [clock=2, time=2015-06-03 17:37:58.262]
Event processed UpdateClock(2)
Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(2)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(2)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(2)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(2)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


#########################Game started
#########################Game started
#########################Game started
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4b795159
[CTAH] The created APLList : [game_initialized]
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@14d0093a
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@52baae9d
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is 
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:38:02.015, clock=0]
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:38:02.015, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:38:02.015, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 17:38:02.065, clock=0]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 17:38:02.065, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:38:02.07, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:38:02.015, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 17:38:02.065, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:38:02.073, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:38:02.07, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:38:02.073, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:38:02.07, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:38:02.073, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-06-03 17:38:02.065, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 17:38:02.078, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 17:38:02.078, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 17:38:02.078, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:38:02.07, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:38:02.073, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 17:38:02.078, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 17:38:02.098, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 17:38:02.098, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 17:38:02.098, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 17:38:02.098, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:38:02.108, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:38:02.108, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:38:02.108, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:38:02.108, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:38:02.114, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:38:02.114, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 17:38:02.117, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:38:02.114, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 17:38:02.117, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:38:02.114, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 17:38:02.117, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-03 17:38:02.122, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 17:38:02.117, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-03 17:38:02.122, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-03 17:38:02.122, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-03 17:38:02.122, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:38:02.129, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:38:02.129, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:38:02.129, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:38:02.129, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 17:38:02.142, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 17:38:02.142, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 17:38:02.142, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 17:38:02.142, clock=0]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:38:02.146, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:38:02.146, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:38:02.146, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:38:02.146, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=brown, time=2015-06-03 17:38:02.153, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=brown, time=2015-06-03 17:38:02.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=brown, time=2015-06-03 17:38:02.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=brown, time=2015-06-03 17:38:02.153, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 17:38:02.157, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 17:38:02.157, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 17:38:02.157, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-03 17:38:02.157, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 17:38:02.162, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 17:38:02.162, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 17:38:02.162, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 17:38:02.162, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:38:02.173, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:38:02.173, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:38:02.173, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:38:02.173, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:38:02.18, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:38:02.18, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:38:02.18, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:38:02.18, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:38:02.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:38:02.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:38:02.187, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:38:02.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:38:02.191, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:38:02.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:38:02.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:38:02.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=blue, time=2015-06-03 17:38:02.196, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=blue, time=2015-06-03 17:38:02.196, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=blue, time=2015-06-03 17:38:02.196, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=blue, time=2015-06-03 17:38:02.196, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:38:02.201, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:38:02.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:38:02.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:38:02.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 17:38:02.207, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 17:38:02.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 17:38:02.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 17:38:02.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 17:38:02.212, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 17:38:02.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 17:38:02.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 17:38:02.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-03 17:38:02.217, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-03 17:38:02.217, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-03 17:38:02.217, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-03 17:38:02.217, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 17:38:02.221, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 17:38:02.221, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 17:38:02.221, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 17:38:02.221, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:38:02.227, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:38:02.227, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:38:02.227, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:38:02.227, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 17:38:02.232, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 17:38:02.232, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 17:38:02.232, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 17:38:02.232, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 17:38:02.236, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 17:38:02.236, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 17:38:02.236, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 17:38:02.236, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 17:38:02.24, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 17:38:02.24, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 17:38:02.24, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 17:38:02.24, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 17:38:02.245, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 17:38:02.245, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 17:38:02.245, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 17:38:02.245, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:38:02.249, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:38:02.249, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:38:02.249, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:38:02.249, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:38:02.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:38:02.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:38:02.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:38:02.255, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:38:02.259, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:38:02.259, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:38:02.259, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:38:02.259, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 17:38:02.269, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 17:38:02.269, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 17:38:02.269, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 17:38:02.269, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:38:02.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:38:02.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:38:02.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:38:02.28, clock=0]
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 17:38:02.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 17:38:02.289, clock=0]
Event processed UpdateTile(brown, 0, 6)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 17:38:02.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-03 17:38:02.289, clock=0]
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 1)
Event processed UpdateTile(yellow, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(brown, 1, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 17:38:02.304, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 17:38:02.304, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 17:38:02.304, clock=0]
Event processed UpdateTile(brown, 1, 6)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 17:38:02.304, clock=0]
Event processed UpdateTile(blue, 2, 0)
Event processed UpdateTile(yellow, 2, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 17:38:02.316, clock=0]
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(brown, 2, 3)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 17:38:02.316, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 17:38:02.316, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-06-03 17:38:02.316, clock=0]
Event processed UpdateTile(yellow, 2, 4)
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 17:38:02.33, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 17:38:02.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 17:38:02.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 17:38:02.33, clock=0]
Event processed UpdateTile(blue, 2, 5)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-03 17:38:02.335, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-03 17:38:02.335, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-03 17:38:02.335, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-03 17:38:02.335, clock=0]
Event processed UpdateTile(blue, 2, 6)
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 17:38:02.34, clock=0]
Event processed UpdateTile(white, 3, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 17:38:02.34, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 17:38:02.34, clock=0]
Event processed UpdateTile(brown, 3, 1)
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 17:38:02.34, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-06-03 17:38:02.347, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-06-03 17:38:02.347, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-06-03 17:38:02.347, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-06-03 17:38:02.347, clock=0]
Event processed UpdateTile(blue, 3, 2)
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:38:02.352, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:38:02.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:38:02.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:38:02.352, clock=0]
Event processed UpdateTile(blue, 3, 3)
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:38:02.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:38:02.356, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:38:02.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:38:02.356, clock=0]
Event processed UpdateTile(yellow, 3, 4)
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 17:38:02.361, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 17:38:02.361, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 17:38:02.361, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 17:38:02.361, clock=0]
Event processed UpdateTile(yellow, 3, 5)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:38:02.366, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:38:02.366, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:38:02.366, clock=0]
Event processed UpdateTile(yellow, 3, 6)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 17:38:02.37, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 17:38:02.37, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 17:38:02.37, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:38:02.366, clock=0]
Event processed UpdateTile(white, 4, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 17:38:02.374, clock=0]
Event processed UpdateTile(yellow, 4, 1)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 17:38:02.374, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 17:38:02.37, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 17:38:02.374, clock=0]
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 4, 3)
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 17:38:02.374, clock=0]
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(white, 4, 6)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(yellow, 5, 5)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 1)
Event processed UpdateTile(yellow, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(brown, 1, 6)
Event processed UpdateTile(blue, 2, 0)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(brown, 2, 3)
org notification: Goal [id=null, cell=Cell [x=4, y=5], agent=null, time=2015-06-03 17:38:02.481, clock=0]
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(blue, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 1, 1)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 1, 2)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(brown, 1, 6)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 2, 0)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(blue, 2, 6)
Event processed UpdateTile(white, 4, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(yellow, 5, 5)
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(brown, 1, 1), UpdateTile(yellow, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 2, 6), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(yellow, 5, 5), UpdateTile(white, 5, 6), UpdateTile(white, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(white, 4, 6)
org notification: Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 17:38:02.61]
Event processed UpdateTile(blue, 5, 0)
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=2, time=2015-06-03 17:38:02.655]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=2, time=2015-06-03 17:38:02.638]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-03 17:38:02.668]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=2, time=2015-06-03 17:38:02.651]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-03 17:38:02.665]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-03 17:38:02.66]
object notification: Obligation [subject=a10, obligation=[surround(4, 5)], sanction=[reduce(g, 700)], deadline=24, time=2015-06-03 17:38:02.673, clock=2]
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(yellow, 5, 5)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(blue, 6, 2)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptObligation(surround(4, 5), 24, reduce(g, 700))
Event processed UpdateTile(white, 6, 3)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(brown, 1, 1), UpdateTile(yellow, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 2, 6), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(yellow, 5, 5), UpdateTile(white, 5, 6), UpdateTile(white, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 5), 24, reduce(g, 700))
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(4, 5), 24, reduce(g, 700))]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 5), 24, reduce(g, 700))
}


#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(brown, 1, 1), UpdateTile(yellow, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(white, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(brown, 1, 6), UpdateTile(blue, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(blue, 2, 6), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(white, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(yellow, 5, 5), UpdateTile(white, 5, 6), UpdateTile(white, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(white, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(brown, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(brown, 1, 6)
},
{	UpdateTile(blue, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(blue, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(yellow, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(white, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 5, 700) : 3 Jun 2015 16:54:43 GMT, priority 10)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(4, 5, 700) : 3 Jun 2015 16:54:43 GMT, priority 10)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 5, 700) : 3 Jun 2015 16:54:43 GMT, priority 10)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(4, 5, 700) : 3 Jun 2015 16:54:43 GMT, priority 10
[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(4, 5); sendSouth(a10, 4, 5, 100); sendWest(a20, 4, 5, 100); sendEast(a30, 4, 5, 100); sendNorth(a40, 4, 5, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(4, 5);
	sendSouth(a10, 4, 5, 100);
	sendWest(a20, 4, 5, 100);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	sendSouth(a10, 4, 5, 100);
	sendWest(a20, 4, 5, 100);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 4, 5, 100); sendWest(a20, 4, 5, 100); sendEast(a30, 4, 5, 100); sendNorth(a40, 4, 5, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 4, 5, 100);
	sendWest(a20, 4, 5, 100);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[CTAH] Agentposition: [5,6]
[CTAH] Agentposition: [4,5]
[Planbase]:{	@ctenv(setGoal(a10, 4, 4, 4, 5, 100),L,0);
	sendWest(a20, 4, 5, 100);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(5, 6, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 4, 4, 4, 5, 100),L,0); sendWest(a20, 4, 5, 100); sendEast(a30, 4, 5, 100); sendNorth(a40, 4, 5, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(5, 6, C)]
[After]:{	@ctenv(setGoal(a10, 4, 4, 4, 5, 100),L,0);
	sendWest(a20, 4, 5, 100);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(5, 6, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(4, 5, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(4, 5, C)]
[After]:{	B(clock(C));
	GetAgentPos(4, 5, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=4], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.548]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=4], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.548]
object notification: Obligation [subject=a10, obligation=[at(4, 4, a10)], sanction=[reduce(a10, 700)], deadline=20, time=2015-06-03 17:38:05.557, clock=2]
[CTAH] Agentposition: [4,6]
Event processed adoptObligation(at(4, 4, a10), 20, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 3, 5, 4, 5, 100),L,0);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	GetAgentPos(5, 6, 2)
},
{	adoptObligation(at(4, 4, a10), 20, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 3, 5, 4, 5, 100),L,0); sendEast(a30, 4, 5, 100); sendNorth(a40, 4, 5, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), GetAgentPos(5, 6, 2), adoptObligation(at(4, 4, a10), 20, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 3, 5, 4, 5, 100),L,0);
	sendEast(a30, 4, 5, 100);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	GetAgentPos(5, 6, 2)
},
{	adoptObligation(at(4, 4, a10), 20, reduce(a10, 700))
}


[Planbase]:{	GetAgentPos(4, 5, 2)
}


[new scheduled]:[GetAgentPos(4, 5, 2)]
[After]:{	GetAgentPos(4, 5, 2)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(4, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(4, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(4, 6, C)
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=5], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.715]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=5], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.715]
[Planbase]:{	@ctenv(setGoal(a30, 5, 5, 4, 5, 100),L,0);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 4, 700) : 3 Jun 2015 16:54:45 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 5, 5, 4, 5, 100),L,0); sendNorth(a40, 4, 5, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), adoptz(at(4, 4, 700) : 3 Jun 2015 16:54:45 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 5, 5, 4, 5, 100),L,0);
	sendNorth(a40, 4, 5, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 4, 700) : 3 Jun 2015 16:54:45 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	GetAgentPos(4, 6, 2)
}


[new scheduled]:[GetAgentPos(4, 6, 2)]
[After]:{	GetAgentPos(4, 6, 2)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=5], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.874]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=5], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:05.874]
obligation to be adopted: at(4, 4, 700) : 3 Jun 2015 16:54:45 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(5, 5, a30)], sanction=[reduce(a30, 700)], deadline=20, time=2015-06-03 17:38:05.885, clock=2]
Event processed adoptObligation(at(5, 5, a30), 20, reduce(a30, 700))
[Planbase]:{	@ctenv(setGoal(a40, 4, 6, 4, 5, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 4, 6, 4, 5, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 4, 6, 4, 5, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptObligation(at(5, 5, a30), 20, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(5, 5, a30), 20, reduce(a30, 700))]
[After]:{	adoptObligation(at(5, 5, a30), 20, reduce(a30, 700))
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=6], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:06.051]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=6], goal=Cell [x=4, y=5], sanction=100, clock=2, time=2015-06-03 17:38:06.051]
object notification: Obligation [subject=a40, obligation=[at(4, 6, a40)], sanction=[reduce(a40, 700)], deadline=20, time=2015-06-03 17:38:06.055, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(5, 5, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


[new scheduled]:[adoptz(at(5, 5, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)]
[After]:{	adoptz(at(5, 5, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


[Planbase]:{	color(brown, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[color(brown, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	color(brown, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(4, 6, a40), 20, reduce(a40, 700))
obligation to be adopted: at(5, 5, 700) : 3 Jun 2015 16:54:46 GMT, priority 10
[Planbase]:{	adoptObligation(at(4, 6, a40), 20, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(4, 6, a40), 20, reduce(a40, 700))]
[After]:{	adoptObligation(at(4, 6, a40), 20, reduce(a40, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, brown, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, brown, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, brown, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(at(4, 6, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 6, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)]
[After]:{	adoptz(at(4, 6, 700) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


agent writes: Color [id=null, color=brown, agent=a10, type=yes, sanction=100, time=2015-06-03 17:38:06.431, clock=2]
org notification: Color [id=null, color=brown, agent=a10, type=yes, sanction=100, time=2015-06-03 17:38:06.431, clock=2]
object notification: Obligation [subject=a10, obligation=[color(brown, a10)], sanction=[reduce(a10, 100)], deadline=17, time=2015-06-03 17:38:06.438, clock=2]
obligation to be adopted: at(4, 6, 700) : 3 Jun 2015 16:54:46 GMT, priority 10
Event processed adoptObligation(color(brown, a10), 17, reduce(a10, 100))
[Planbase]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptObligation(color(brown, a10), 17, reduce(a10, 100))
}


[new scheduled]:[color(yellow, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), adoptObligation(color(brown, a10), 17, reduce(a10, 100))]
[After]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptObligation(color(brown, a10), 17, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptz(useColor(brown, 100) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, yellow, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), adoptz(useColor(brown, 100) : 3 Jun 2015 16:54:46 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptz(useColor(brown, 100) : 3 Jun 2015 16:54:46 GMT, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:38:06.754, clock=2]
obligation to be adopted: useColor(brown, 100) : 3 Jun 2015 16:54:46 GMT, priority 10
org notification: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:38:06.754, clock=2]
[Planbase]:{	color(blue, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[color(blue, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	color(blue, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, blue, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, blue, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, blue, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a30, type=yes, sanction=100, time=2015-06-03 17:38:06.942, clock=2]
org notification: Color [id=null, color=blue, agent=a30, type=yes, sanction=100, time=2015-06-03 17:38:06.942, clock=2]
object notification: Obligation [subject=a30, obligation=[color(blue, a30)], sanction=[reduce(a30, 100)], deadline=17, time=2015-06-03 17:38:06.946, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(yellow, a40, yes, 100);
	color(yellow, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a40, yes, 100); color(yellow, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a40, yes, 100);
	color(yellow, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(blue, a30), 17, reduce(a30, 100))
[Planbase]:{	adoptObligation(color(blue, a30), 17, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(blue, a30), 17, reduce(a30, 100))]
[After]:{	adoptObligation(color(blue, a30), 17, reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, yellow, yes, 100),L,0);
	color(yellow, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, yellow, yes, 100),L,0); color(yellow, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, yellow, yes, 100),L,0);
	color(yellow, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:38:07.229, clock=2]
org notification: Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:38:07.229, clock=2]
object notification: Obligation [subject=a40, obligation=[color(yellow, a40)], sanction=[reduce(a40, 100)], deadline=17, time=2015-06-03 17:38:07.233, clock=2]
[Planbase]:{	adoptz(useColor(blue, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(blue, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)]
[After]:{	adoptz(useColor(blue, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: useColor(blue, 100) : 3 Jun 2015 16:54:47 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, yellow, no, 100),L,0);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, yellow, no, 100),L,0); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, yellow, no, 100),L,0);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:38:07.418, clock=2]
org notification: Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:38:07.418, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(yellow, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-03 17:38:07.423]
Event processed adoptObligation(color(yellow, a40), 17, reduce(a40, 100))
Event processed adoptProhibition(color(yellow, a10), reduce(a10, 100))
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptObligation(color(yellow, a40), 17, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(yellow, a40), 17, reduce(a40, 100))]
[After]:{	adoptObligation(color(yellow, a40), 17, reduce(a40, 100))
}


[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(yellow, a30, no, 100); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), adoptProhibition(color(yellow, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-06-03 17:38:07.609, clock=2]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-06-03 17:38:07.609, clock=2]
[Planbase]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(yellow, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)]
[After]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 16:54:47 GMT, priority 10)
}


obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 16:54:47 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, no, 100),L,0); color(brown, a40, no, 100); dropgoal(surround(4, 5, 700) : Infinite, priority 10), AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(brown, a40, no, 100);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:38:07.792, clock=2]
org notification: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:38:07.792, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-03 17:38:07.796]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, brown, no, 100),L,0);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, brown, no, 100),L,0); dropgoal(surround(4, 5, 700) : Infinite, priority 10), aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, brown, no, 100),L,0);
	dropgoal(surround(4, 5, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(yellow, a30), reduce(a30, 100))
[Planbase]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(yellow, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


agent writes: Color [id=null, color=brown, agent=a40, type=no, sanction=100, time=2015-06-03 17:38:07.989, clock=2]
org notification: Color [id=null, color=brown, agent=a40, type=no, sanction=100, time=2015-06-03 17:38:07.989, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(brown, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-03 17:38:07.992]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(brown, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(brown, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(brown, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(brown, a40), reduce(a40, 100))
}


object notification: Time [clock=3, time=2015-06-03 17:38:08.266]
object notification: Time [clock=3, time=2015-06-03 17:38:08.266]
org notification: Time [clock=3, time=2015-06-03 17:38:08.266]
object notification: Time [clock=3, time=2015-06-03 17:38:08.266]
Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	UpdateClock(3)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), UpdateClock(3)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	UpdateClock(3)
}


Event processed UpdateClock(3)
[Planbase]:{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
},
{	UpdateClock(3)
}


[new scheduled]:[AdoptP(useColor(brown, 100)); aprohibition(useColor(brown, 100) -> reduce(100), priority 0), UpdateClock(3)]
[After]:{	AdoptP(useColor(brown, 100));
	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
},
{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(brown, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(brown, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-03 17:38:18.269]
org notification: Time [clock=4, time=2015-06-03 17:38:18.269]
object notification: Time [clock=4, time=2015-06-03 17:38:18.269]
object notification: Time [clock=4, time=2015-06-03 17:38:18.269]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-06-03 17:38:28.271]
org notification: Time [clock=5, time=2015-06-03 17:38:28.271]
object notification: Time [clock=5, time=2015-06-03 17:38:28.271]
object notification: Time [clock=5, time=2015-06-03 17:38:28.271]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=6, time=2015-06-03 17:38:38.274]
object notification: Time [clock=6, time=2015-06-03 17:38:38.274]
object notification: Time [clock=6, time=2015-06-03 17:38:38.274]
org notification: Time [clock=6, time=2015-06-03 17:38:38.274]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-03 17:38:48.278]
object notification: Time [clock=7, time=2015-06-03 17:38:48.278]
org notification: Time [clock=7, time=2015-06-03 17:38:48.278]
object notification: Time [clock=7, time=2015-06-03 17:38:48.278]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 17:38:58.281]
object notification: Time [clock=8, time=2015-06-03 17:38:58.281]
org notification: Time [clock=8, time=2015-06-03 17:38:58.281]
object notification: Time [clock=8, time=2015-06-03 17:38:58.281]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-03 17:39:08.284]
object notification: Time [clock=9, time=2015-06-03 17:39:08.284]
org notification: Time [clock=9, time=2015-06-03 17:39:08.284]
object notification: Time [clock=9, time=2015-06-03 17:39:08.284]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7d5bb9ff
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@7ac172dd
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@6a005d1f
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	Updated
},
{	B([A,B]=[4,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,6]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,6]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	Updated
},
{	B([A,B]=[4,6]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	Updated
},
{	B([A,B]=[5,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] going goal: 4,4 color: neco
a40[CTAH] going goal: 4,6 color: neco
a30[CTAH] going goal: 5,5 color: neco
object notification: Time [clock=10, time=2015-06-03 17:39:18.288]
object notification: Time [clock=10, time=2015-06-03 17:39:18.288]
org notification: Time [clock=10, time=2015-06-03 17:39:18.288]
object notification: Time [clock=10, time=2015-06-03 17:39:18.288]
a10[CTAH] paths: 1000
Need to wait 4 more seconds
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=506, agent=a20, agent2=a40, clock=10, time=2015-06-03 17:39:27.365]
object notification: Obligation [subject=a40, obligation=[respondToRequest(506)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 17:39:27.382, clock=10]
a10[CTAH] path: 0
a10[CTAH] path: Path: [6][5] [6][4] [5][4] [4][4]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:6,C:4)
a10[CTAH] moveStepToGoalTest sent proposal for: [6,4,3,8488]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=8488, agent=a10, agent2=a40, clock=10, time=2015-06-03 17:39:27.447]
object notification: Obligation [subject=a40, obligation=[respondToRequest(8488)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 17:39:27.455, clock=10]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not 8488=no)
	then	{	NextStep(6, 4, 8488);
			SentProposal(8488, 3, open, Clock)
		}
	else	{	NextStep(6, 4)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 8488=no) then {NextStep(6, 4, 8488); SentProposal(8488, 3, open, Clock)} else NextStep(6, 4), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 8488=no)
	then	{	NextStep(6, 4, 8488);
			SentProposal(8488, 3, open, Clock)
		}
	else	{	NextStep(6, 4)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not 8488=no)
	then	{	NextStep(6, 4, 8488);
			SentProposal(8488, 3, open, 9)
		}
	else	{	NextStep(6, 4)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(not 8488=no) then {NextStep(6, 4, 8488); SentProposal(8488, 3, open, 9)} else NextStep(6, 4), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(not 8488=no)
	then	{	NextStep(6, 4, 8488);
			SentProposal(8488, 3, open, 9)
		}
	else	{	NextStep(6, 4)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(6, 4, 8488);
	SentProposal(8488, 3, open, 9)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 8488); SentProposal(8488, 3, open, 9), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NextStep(6, 4, 8488);
	SentProposal(8488, 3, open, 9)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(8488, 3, open, 9)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[SentProposal(8488, 3, open, 9), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	SentProposal(8488, 3, open, 9)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


object notification: Time [clock=11, time=2015-06-03 17:39:28.292]
object notification: Time [clock=11, time=2015-06-03 17:39:28.292]
org notification: Time [clock=11, time=2015-06-03 17:39:28.292]
object notification: Time [clock=11, time=2015-06-03 17:39:28.292]
[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Event processed UpdateClock(11)
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(11)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=1], time=2015-06-03 17:39:29.082, clock=11]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=2], time=2015-06-03 17:39:30.317, clock=11]
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:39:31.621, clock=11]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:39:33.224, clock=11]
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [5][4] [5][5] [4][5] [4][6]

a40[CTAH] moveStepToGoalTest returns I have chip: [5,5,no,no]
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(proposal(proposal, 1, 506, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(506), 15, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 0, 8488, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(8488), 15, reduce(a40, 300))
Event processed UpdateClock(11)
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 5, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 5)
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 1, 506, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(506), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 8488, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8488), 15, reduce(a40, 300))
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 5, no); SentProposal(no, no, open, Clock)} else NextStep(5, 5), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(10), @ctenv(functionToList(proposal(proposal, 1, 506, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(506), 15, reduce(a40, 300)), @ctenv(functionToList(proposal(proposal, 0, 8488, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(8488), 15, reduce(a40, 300)), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 5, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 5)
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 1, 506, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(506), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 8488, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8488), 15, reduce(a40, 300))
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@44da80df
[CTAH] Array of Terms: [Lapapl.data.Term;@6542d3c9
[CTAH] The created APLList : [proposal,1,506,open]
[CTAH] The created APLList : [proposal,0,8488,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 5, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 5)
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(506, 300) : 3 Jun 2015 16:56:15 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8488, 300) : 3 Jun 2015 16:56:15 GMT, priority 10)
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 5, no); SentProposal(no, no, open, 9)} else NextStep(5, 5), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,1,506,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(506, 300) : 3 Jun 2015 16:56:15 GMT, priority 10), if B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8488, 300) : 3 Jun 2015 16:56:15 GMT, priority 10)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 5, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 5)
		}
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(506, 300) : 3 Jun 2015 16:56:15 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8488, 300) : 3 Jun 2015 16:56:15 GMT, priority 10)
}


obligation to be adopted: respondToRequest(506, 300) : 3 Jun 2015 16:56:15 GMT, priority 10
obligation to be adopted: respondToRequest(8488, 300) : 3 Jun 2015 16:56:15 GMT, priority 10
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(5, 5)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(5, 5), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(5, 5)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,506,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,8488,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 506, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8488, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(proposal=proposal) then ReceivedProposal(1, 506, open), if B(proposal=proposal) then ReceivedProposal(0, 8488, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 506, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8488, open)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 5),L2,0);
	if	B(L2=[actionresult([5,5])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 5, Clock)
		};
	NoNextStep(5, 5)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedProposal(1, 506, open)
},
{	ReceivedProposal(0, 8488, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 5),L2,0); if B(L2=[actionresult([5,5])]) then {B(clock(Clock)); UpdatePosition(5, 5, Clock)}; NoNextStep(5, 5), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedProposal(1, 506, open), ReceivedProposal(0, 8488, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 5),L2,0);
	if	B(L2=[actionresult([5,5])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 5, Clock)
		};
	NoNextStep(5, 5)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedProposal(1, 506, open)
},
{	ReceivedProposal(0, 8488, open)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=5], time=2015-06-03 17:39:35.49, clock=11]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=5], time=2015-06-03 17:39:35.49, clock=11]
object notification: Obligation [subject=a40, obligation=[makeMove(5, 5, a40)], sanction=[reduce(a40, 300)], deadline=26, time=2015-06-03 17:39:35.506, clock=11]
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=6744, agent=a20, agent2=a40, clock=11, time=2015-06-03 17:39:36.287]
object notification: Obligation [subject=a40, obligation=[respondToRequest(6744)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 17:39:36.295, clock=11]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][4] [5][4] [5][5]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,4,1,4071]
org notification: Proposal [id=4071, agent=a30, agent2=a20, clock=11, time=2015-06-03 17:39:37.961]
Event processed UpdateClock(10)
Event processed UpdateClock(11)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 4071=no)
	then	{	NextStep(5, 4, 4071);
			SentProposal(4071, 1, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 4071=no) then {NextStep(5, 4, 4071); SentProposal(4071, 1, open, Clock)} else NextStep(5, 4), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(10), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 4071=no)
	then	{	NextStep(5, 4, 4071);
			SentProposal(4071, 1, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(not 4071=no)
	then	{	NextStep(5, 4, 4071);
			SentProposal(4071, 1, open, 9)
		}
	else	{	NextStep(5, 4)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(not 4071=no) then {NextStep(5, 4, 4071); SentProposal(4071, 1, open, 9)} else NextStep(5, 4), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not 4071=no)
	then	{	NextStep(5, 4, 4071);
			SentProposal(4071, 1, open, 9)
		}
	else	{	NextStep(5, 4)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	NextStep(5, 4, 4071);
	SentProposal(4071, 1, open, 9)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[NextStep(5, 4, 4071); SentProposal(4071, 1, open, 9), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	NextStep(5, 4, 4071);
	SentProposal(4071, 1, open, 9)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	SentProposal(4071, 1, open, 9)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[SentProposal(4071, 1, open, 9), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	SentProposal(4071, 1, open, 9)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


object notification: Time [clock=12, time=2015-06-03 17:39:38.295]
org notification: Time [clock=12, time=2015-06-03 17:39:38.295]
object notification: Time [clock=12, time=2015-06-03 17:39:38.295]
object notification: Time [clock=12, time=2015-06-03 17:39:38.295]
[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), UpdateClock(12)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(12)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [5,5]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


Event processed UpdatePosition(5, 5, 11)
Event processed adoptObligation(makeMove(5, 5, a40), 26, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 1, 6744, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(6744), 16, reduce(a40, 300))
Event processed UpdateClock(12)
[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 5, Clock);
	NoNextStep(5, 5)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(5, 5, 11)
},
{	adoptObligation(makeMove(5, 5, a40), 26, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 1, 6744, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6744), 16, reduce(a40, 300))
},
{	UpdateClock(12)
}


[new scheduled]:[if B(not scoreAfterExchange(506, Score)) then getScoreAfterExchange(506); B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(506, Answer), if B(not scoreAfterExchange(8488, Score)) then getScoreAfterExchange(8488); B(scoreAfterExchange(8488, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8488, Answer), if G(acceptRequests(506, V2)) then skip else if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), B(clock(Clock)); UpdatePosition(5, 5, Clock); NoNextStep(5, 5), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdatePosition(5, 5, 11), adoptObligation(makeMove(5, 5, a40), 26, reduce(a40, 300)), @ctenv(functionToList(proposal(proposal, 1, 6744, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(6744), 16, reduce(a40, 300)), UpdateClock(12)]
[After]:{	if	G(acceptRequests(506, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 506, closed(A)))
			then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
				}
		}
},
{	B(clock(Clock));
	UpdatePosition(5, 5, Clock);
	NoNextStep(5, 5)
},
{	if	B(not scoreAfterExchange(506, Score))
	then	{	getScoreAfterExchange(506)
		};
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	if	B(not scoreAfterExchange(8488, Score))
	then	{	getScoreAfterExchange(8488)
		};
	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(5, 5, 11)
},
{	adoptObligation(makeMove(5, 5, a40), 26, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 1, 6744, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(6744), 16, reduce(a40, 300))
},
{	UpdateClock(12)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@19e1d832
[CTAH] The created APLList : [proposal,1,6744,open]
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	UpdatePosition(5, 5, 11);
	NoNextStep(5, 5)
},
{	getScoreAfterExchange(506);
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	getScoreAfterExchange(8488);
	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(5, 5, 300) : 3 Jun 2015 16:56:18 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6744, 300) : 3 Jun 2015 16:56:18 GMT, priority 10)
}


[new scheduled]:[if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), UpdatePosition(5, 5, 11); NoNextStep(5, 5), getScoreAfterExchange(506); B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(506, Answer), getScoreAfterExchange(8488); B(scoreAfterExchange(8488, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8488, Answer), if B(tile(yellow, 4, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), adoptz(makeMove(5, 5, 300) : 3 Jun 2015 16:56:18 GMT, priority 10), if B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(6744, 300) : 3 Jun 2015 16:56:18 GMT, priority 10)]
[After]:{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	UpdatePosition(5, 5, 11);
	NoNextStep(5, 5)
},
{	getScoreAfterExchange(506);
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	getScoreAfterExchange(8488);
	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B(tile(yellow, 4, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(5, 5, 300) : 3 Jun 2015 16:56:18 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(6744, 300) : 3 Jun 2015 16:56:18 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 5, 300) : 3 Jun 2015 16:56:18 GMT, priority 10
obligation to be adopted: respondToRequest(6744, 300) : 3 Jun 2015 16:56:18 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	NoNextStep(5, 5)
},
{	GetScoreAfterExchange(506, yes);
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	GetScoreAfterExchange(8488, yes);
	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(506, 50) : Infinite, priority 10), NoNextStep(5, 5), GetScoreAfterExchange(506, yes); B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(506, Answer), GetScoreAfterExchange(8488, yes); B(scoreAfterExchange(8488, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8488, Answer), if B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	NoNextStep(5, 5)
},
{	GetScoreAfterExchange(506, yes);
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	GetScoreAfterExchange(8488, yes);
	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B([actionresult([proposal,1,6744,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


obligation to be adopted: respondToRequest(506, 50) : Infinite, priority 10
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 6744, open)
		}
}


[new scheduled]:[if B(not scoreAfterExchange(506, Score)) then getScoreAfterExchange(506); B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(506, Answer), if G(acceptRequests(506, V2)) then skip else if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), findNextStep(neco, 700), B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(506, Answer), B(scoreAfterExchange(8488, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8488, Answer), if B(proposal=proposal) then ReceivedProposal(1, 6744, open)]
[After]:{	if	B(not scoreAfterExchange(506, Score))
	then	{	getScoreAfterExchange(506)
		};
	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	if	G(acceptRequests(506, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 506, closed(A)))
			then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	B(scoreAfterExchange(8488, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 6744, open)
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	ReceivedProposal(1, 6744, open)
}


[new scheduled]:[B(scoreAfterExchange(506, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(506, Answer), if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(506, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8488, Answer), ReceivedProposal(1, 6744, open)]
[After]:{	B(scoreAfterExchange(506, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, Answer)
},
{	ReceivedProposal(1, 6744, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	B([A,B]=[4,6]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(506, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, accept)
}


[new scheduled]:[if B(not scoreAfterExchange(6744, Score)) then getScoreAfterExchange(6744); B(scoreAfterExchange(6744, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6744, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(506, Answer), adoptz(respondToRequest(506, 50) : Infinite, priority 10), B([A,B]=[4,6]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(506, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8488, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(506, Answer)
},
{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	B([A,B]=[4,6]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(not scoreAfterExchange(6744, Score))
	then	{	getScoreAfterExchange(6744)
		};
	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(506, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8488, accept)
}


obligation to be adopted: respondToRequest(506, 50) : Infinite, priority 10
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(506, accept)
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(6744);
	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	B(accept=accept);
	sendResponse(506, accept)
},
{	B(accept=accept);
	sendResponse(8488, accept)
}


[new scheduled]:[if G(acceptRequests(506, V2)) then skip else if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(506, accept), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, getScoreAfterExchange(6744); B(scoreAfterExchange(6744, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6744, Answer), B(accept=accept); sendResponse(506, accept), B(accept=accept); sendResponse(8488, accept)]
[After]:{	if	G(acceptRequests(506, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 506, closed(A)))
			then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(506, accept)
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 6, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(6744);
	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	B(accept=accept);
	sendResponse(506, accept)
},
{	B(accept=accept);
	sendResponse(8488, accept)
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(506, accept)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(6744, yes);
	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	sendResponse(506, accept)
},
{	sendResponse(8488, accept)
}


[new scheduled]:[if B(not receivedP(1, 506, closed(A))) then adoptz(respondToRequest(506, 50) : Infinite, priority 10), B(accept=accept); sendResponse(506, accept), if B(100>700) then @ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, GetScoreAfterExchange(6744, yes); B(scoreAfterExchange(6744, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6744, Answer), sendResponse(506, accept), sendResponse(8488, accept)]
[After]:{	if	B(not receivedP(1, 506, closed(A)))
	then	{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(506, accept)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(brown, no, 4, 6, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(6744, yes);
	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	sendResponse(506, accept)
},
{	sendResponse(8488, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	sendResponse(506, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	@ctenv(sendResponse(506, accept),L1,0);
	SentResponse(accept, 506)
},
{	@ctenv(sendResponse(8488, accept),L1,0);
	SentResponse(accept, 8488)
}


[new scheduled]:[adoptz(respondToRequest(506, 50) : Infinite, priority 10), sendResponse(506, accept), @ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(6744, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6744, Answer), @ctenv(sendResponse(506, accept),L1,0); SentResponse(accept, 506), @ctenv(sendResponse(8488, accept),L1,0); SentResponse(accept, 8488)]
[After]:{	adoptz(respondToRequest(506, 50) : Infinite, priority 10)
},
{	sendResponse(506, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 4, 6, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(6744, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6744, Answer)
},
{	@ctenv(sendResponse(506, accept),L1,0);
	SentResponse(accept, 506)
},
{	@ctenv(sendResponse(8488, accept),L1,0);
	SentResponse(accept, 8488)
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a40[CTAH] going goal: 4,6 color: neco
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

org notification: Response [id=506, response=accepted, clock=12, time=2015-06-03 17:39:39.517]
org notification: Response [id=8488, response=accepted, clock=12, time=2015-06-03 17:39:39.535]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=4], time=2015-06-03 17:39:39.592, clock=12]
Event processed @ctenv(functionToList(message(response, 8488, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8488, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), @ctenv(functionToList(message(response, 8488, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8488, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1f739811
[CTAH] The created APLList : [response,8488,accept]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8488)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), if B(response=response) then ReceivedResponse(accept, 8488)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8488)
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8488)
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(6, 4, 8488); ReceivedResponse(noresponse, 8488)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), ReceivedResponse(accept, 8488)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(6, 4, 8488);
			ReceivedResponse(noresponse, 8488)
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	ReceivedResponse(accept, 8488)
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 4),L2,0); if B(L2=[actionresult([6,4])]) then {B(clock(Clock)); UpdatePosition(6, 4, Clock)}; NoNextStep(6, 4, 8488), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=6, y=4], time=2015-06-03 17:39:40.202, clock=12]
object notification: Obligation [subject=a10, obligation=[makeMove(6, 4, a10)], sanction=[reduce(a10, 300)], deadline=27, time=2015-06-03 17:39:40.215, clock=12]
object notification: Position [subject=a10, id=null, cell=Cell [x=6, y=4], time=2015-06-03 17:39:40.202, clock=12]
object notification: Points [subject=a10, time=2015-06-03 17:39:40.237, clock=12, value=900, id=null]
[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed @ctenv(functionToList(message(response, 4071, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
org notification: Response [id=4071, response=accepted, clock=12, time=2015-06-03 17:39:44.032]
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 4071, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), @ctenv(functionToList(message(response, 4071, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 4071, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@52f80366
[CTAH] The created APLList : [response,4071,accept]
[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4071)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B(response=response) then ReceivedResponse(accept, 4071)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4071)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 4071)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 4071)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 4071)
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(5, 4, 4071); ReceivedResponse(noresponse, 4071)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(5, 4, 4071);
			ReceivedResponse(noresponse, 4071)
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: [6,4]
[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Event processed adoptObligation(makeMove(6, 4, a10), 27, reduce(a10, 300))
Event processed UpdatePosition(6, 4, 12)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptObligation(makeMove(6, 4, a10), 27, reduce(a10, 300))
},
{	UpdatePosition(6, 4, 12)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 4, Clock); NoNextStep(6, 4, 8488), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), adoptObligation(makeMove(6, 4, a10), 27, reduce(a10, 300)), UpdatePosition(6, 4, 12), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptObligation(makeMove(6, 4, a10), 27, reduce(a10, 300))
},
{	UpdatePosition(6, 4, 12)
},
{	UpdatePoints(900)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 4071)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4, 4071), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 4071)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:39:44.363, clock=12]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:39:44.363, clock=12]
[Planbase]:{	UpdatePosition(6, 4, 12);
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptz(makeMove(6, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(6, 4, 12); NoNextStep(6, 4, 8488), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100), adoptz(makeMove(6, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)]
[After]:{	UpdatePosition(6, 4, 12);
	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
},
{	adoptz(makeMove(6, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)
}


object notification: Obligation [subject=a30, obligation=[makeMove(5, 4, a30)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 17:39:44.377, clock=12]
obligation to be adopted: makeMove(6, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10
Event processed UpdatePosition(5, 4, 12)
Event processed adoptObligation(makeMove(5, 4, a30), 27, reduce(a30, 300))
[Planbase]:{	NoNextStep(5, 4, 4071)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdatePosition(5, 4, 12)
},
{	adoptObligation(makeMove(5, 4, a30), 27, reduce(a30, 300))
}


[new scheduled]:[NoNextStep(5, 4, 4071), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdatePosition(5, 4, 12), adoptObligation(makeMove(5, 4, a30), 27, reduce(a30, 300))]
[After]:{	NoNextStep(5, 4, 4071)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdatePosition(5, 4, 12)
},
{	adoptObligation(makeMove(5, 4, a30), 27, reduce(a30, 300))
}


[Planbase]:{	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[NoNextStep(6, 4, 8488), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	NoNextStep(6, 4, 8488)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 4, 300) : 3 Jun 2015 16:56:24 GMT, priority 10
[Planbase]:{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[5,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[5,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B([A,B]=[5,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[4,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[4,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	B([A,B]=[4,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 4, 6)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 4, 6))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a30[CTAH] going goal: 5,5 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(brown, 5, 6)) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else if B(prohibition(useColor(brown, V2))) then if B(V2>100) then dropgoal(useColor(brown, 100) : Infinite, priority 10) else findNextStep(brown, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(brown, 5, 6))
	then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(brown, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(brown, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(brown, 100)
				}
		}
}


a10[CTAH] going goal: 4,4 color: neco
object notification: Time [clock=13, time=2015-06-03 17:39:48.297]
object notification: Time [clock=13, time=2015-06-03 17:39:48.297]
org notification: Time [clock=13, time=2015-06-03 17:39:48.297]
object notification: Time [clock=13, time=2015-06-03 17:39:48.297]
object notification: Time [clock=14, time=2015-06-03 17:39:58.321]
object notification: Time [clock=14, time=2015-06-03 17:39:58.321]
org notification: Time [clock=14, time=2015-06-03 17:39:58.321]
object notification: Time [clock=14, time=2015-06-03 17:39:58.321]
object notification: Time [clock=15, time=2015-06-03 17:40:08.382]
object notification: Time [clock=15, time=2015-06-03 17:40:08.382]
org notification: Time [clock=15, time=2015-06-03 17:40:08.382]
object notification: Time [clock=15, time=2015-06-03 17:40:08.382]
org notification: Time [clock=16, time=2015-06-03 17:40:19.304]
object notification: Time [clock=16, time=2015-06-03 17:40:19.304]
object notification: Time [clock=16, time=2015-06-03 17:40:19.304]
object notification: Time [clock=16, time=2015-06-03 17:40:19.304]
object notification: Time [clock=17, time=2015-06-03 17:40:29.562]
object notification: Time [clock=17, time=2015-06-03 17:40:29.562]
object notification: Time [clock=17, time=2015-06-03 17:40:29.562]
org notification: Time [clock=17, time=2015-06-03 17:40:29.562]
object notification: Points [subject=a40, time=2015-06-03 17:40:30.149, clock=17, value=700, id=null]
object notification: Time [clock=18, time=2015-06-03 17:40:39.861]
object notification: Time [clock=18, time=2015-06-03 17:40:39.861]
object notification: Time [clock=18, time=2015-06-03 17:40:39.861]
org notification: Time [clock=18, time=2015-06-03 17:40:39.861]
object notification: Points [subject=a10, time=2015-06-03 17:40:40.879, clock=18, value=800, id=null]
object notification: Points [subject=a30, time=2015-06-03 17:40:41.474, clock=18, value=900, id=null]
object notification: Time [clock=19, time=2015-06-03 17:40:50.709]
object notification: Time [clock=19, time=2015-06-03 17:40:50.709]
org notification: Time [clock=19, time=2015-06-03 17:40:50.709]
object notification: Time [clock=19, time=2015-06-03 17:40:50.709]
org notification: Time [clock=20, time=2015-06-03 17:41:01.123]
object notification: Time [clock=20, time=2015-06-03 17:41:01.123]
object notification: Time [clock=20, time=2015-06-03 17:41:01.123]
object notification: Time [clock=20, time=2015-06-03 17:41:01.123]
object notification: Time [clock=21, time=2015-06-03 17:41:11.383]
org notification: Time [clock=21, time=2015-06-03 17:41:11.383]
object notification: Time [clock=21, time=2015-06-03 17:41:11.383]
object notification: Time [clock=21, time=2015-06-03 17:41:11.383]
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
(((((((((((((((((Game ended)))))))))))
(((((((((((((((((Game ended)))))))))))
Game ended 
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:5,C:5).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':6 }.
Score: 700.
Team: -1.

My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:6,C:4).
Chips: { chips  'blue':0 'white':9 'brown':0 'yellow':0 }.
Score: 800.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:5,C:4).
Chips: { chips  'blue':9 'white':0 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

object notification: Time [clock=22, time=2015-06-03 17:41:21.791]
org notification: Time [clock=22, time=2015-06-03 17:41:21.791]
object notification: Time [clock=22, time=2015-06-03 17:41:21.791]
object notification: Time [clock=22, time=2015-06-03 17:41:21.791]
object notification: Time [clock=23, time=2015-06-03 17:41:31.923]
object notification: Time [clock=23, time=2015-06-03 17:41:31.923]
object notification: Time [clock=23, time=2015-06-03 17:41:31.923]
org notification: Time [clock=23, time=2015-06-03 17:41:31.923]
object notification: Time [clock=24, time=2015-06-03 17:41:42.25]
object notification: Time [clock=24, time=2015-06-03 17:41:42.25]
object notification: Time [clock=24, time=2015-06-03 17:41:42.25]
org notification: Time [clock=24, time=2015-06-03 17:41:42.25]
object notification: Time [clock=25, time=2015-06-03 17:41:52.74]
object notification: Time [clock=25, time=2015-06-03 17:41:52.74]
org notification: Time [clock=25, time=2015-06-03 17:41:52.74]
object notification: Time [clock=25, time=2015-06-03 17:41:52.74]
object notification: Points [subject=a10, time=2015-06-03 17:41:53.81, clock=25, value=625, id=null]
object notification: Points [subject=a30, time=2015-06-03 17:41:53.819, clock=25, value=725, id=null]
object notification: Points [subject=a40, time=2015-06-03 17:41:53.824, clock=25, value=525, id=null]
object notification: Time [clock=26, time=2015-06-03 17:42:03.102]
org notification: Time [clock=26, time=2015-06-03 17:42:03.102]
object notification: Time [clock=26, time=2015-06-03 17:42:03.102]
object notification: Time [clock=26, time=2015-06-03 17:42:03.102]
object notification: Time [clock=27, time=2015-06-03 17:42:13.381]
org notification: Time [clock=27, time=2015-06-03 17:42:13.381]
object notification: Time [clock=27, time=2015-06-03 17:42:13.381]
object notification: Time [clock=27, time=2015-06-03 17:42:13.381]
object notification: Points [subject=a40, time=2015-06-03 17:42:13.847, clock=27, value=225, id=null]
object notification: Time [clock=28, time=2015-06-03 17:42:23.554]
object notification: Time [clock=28, time=2015-06-03 17:42:23.554]
object notification: Time [clock=28, time=2015-06-03 17:42:23.554]
org notification: Time [clock=28, time=2015-06-03 17:42:23.554]
object notification: Points [subject=a10, time=2015-06-03 17:42:24.017, clock=28, value=325, id=null]
object notification: Points [subject=a30, time=2015-06-03 17:42:24.602, clock=28, value=425, id=null]
object notification: Time [clock=29, time=2015-06-03 17:42:33.841]
object notification: Time [clock=29, time=2015-06-03 17:42:33.841]
object notification: Time [clock=29, time=2015-06-03 17:42:33.841]
org notification: Time [clock=29, time=2015-06-03 17:42:33.841]
object notification: Time [clock=30, time=2015-06-03 17:42:44.119]
org notification: Time [clock=30, time=2015-06-03 17:42:44.119]
object notification: Time [clock=30, time=2015-06-03 17:42:44.119]
object notification: Time [clock=30, time=2015-06-03 17:42:44.119]
object notification: Time [clock=31, time=2015-06-03 17:42:54.414]
org notification: Time [clock=31, time=2015-06-03 17:42:54.414]
object notification: Time [clock=31, time=2015-06-03 17:42:54.414]
object notification: Time [clock=31, time=2015-06-03 17:42:54.414]
org notification: Time [clock=32, time=2015-06-03 17:43:04.883]
object notification: Time [clock=32, time=2015-06-03 17:43:04.883]
object notification: Time [clock=32, time=2015-06-03 17:43:04.883]
object notification: Time [clock=32, time=2015-06-03 17:43:04.883]
org notification: Time [clock=33, time=2015-06-03 17:43:15.315]
object notification: Time [clock=33, time=2015-06-03 17:43:15.315]
object notification: Time [clock=33, time=2015-06-03 17:43:15.315]
object notification: Time [clock=33, time=2015-06-03 17:43:15.315]
org notification: Time [clock=34, time=2015-06-03 17:43:25.799]
object notification: Time [clock=34, time=2015-06-03 17:43:25.799]
object notification: Time [clock=34, time=2015-06-03 17:43:25.799]
object notification: Time [clock=34, time=2015-06-03 17:43:25.799]
object notification: Time [clock=35, time=2015-06-03 17:43:35.873]
object notification: Time [clock=35, time=2015-06-03 17:43:35.873]
object notification: Time [clock=35, time=2015-06-03 17:43:35.873]
org notification: Time [clock=35, time=2015-06-03 17:43:35.873]
org notification: Time [clock=36, time=2015-06-03 17:43:46.85]
object notification: Time [clock=36, time=2015-06-03 17:43:46.85]
object notification: Time [clock=36, time=2015-06-03 17:43:46.85]
object notification: Time [clock=36, time=2015-06-03 17:43:46.85]
object notification: Time [clock=37, time=2015-06-03 17:43:56.937]
object notification: Time [clock=37, time=2015-06-03 17:43:56.937]
org notification: Time [clock=37, time=2015-06-03 17:43:56.937]
object notification: Time [clock=37, time=2015-06-03 17:43:56.937]
