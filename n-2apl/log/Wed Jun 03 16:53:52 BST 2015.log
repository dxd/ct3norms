2015-06-03 16:53:54,770 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~16.53-gigaspaces-service-192.168.0.40-63763.log
-------------------------last log tuples start--------------------------------
Time [clock=3, time=2015-06-03 16:53:41.88]
Time [clock=2, time=2015-06-03 16:53:31.877]
Time [clock=1, time=2015-06-03 16:53:21.862]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
object notification: Time [clock=1, time=2015-06-03 16:54:05.826]
object notification: Time [clock=1, time=2015-06-03 16:54:05.826]
object notification: Time [clock=1, time=2015-06-03 16:54:05.826]
org notification: Time [clock=1, time=2015-06-03 16:54:05.826]
org notification: Time [clock=2, time=2015-06-03 16:54:15.841]
object notification: Time [clock=2, time=2015-06-03 16:54:15.841]
object notification: Time [clock=2, time=2015-06-03 16:54:15.841]
object notification: Time [clock=2, time=2015-06-03 16:54:15.841]
#########################Game started
#########################Game started
#########################Game started
org notification: Time [clock=3, time=2015-06-03 16:54:25.845]
object notification: Time [clock=3, time=2015-06-03 16:54:25.845]
object notification: Time [clock=3, time=2015-06-03 16:54:25.845]
object notification: Time [clock=3, time=2015-06-03 16:54:25.845]
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 16:54:27.416, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 16:54:27.416, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 16:54:27.416, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=yellow, time=2015-06-03 16:54:27.416, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 16:54:27.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 16:54:27.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 16:54:27.509, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 16:54:27.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 16:54:27.511, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 16:54:27.511, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 16:54:27.511, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 16:54:27.511, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-03 16:54:27.513, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-03 16:54:27.513, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-03 16:54:27.513, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-03 16:54:27.513, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 16:54:27.515, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 16:54:27.515, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 16:54:27.515, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 16:54:27.515, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 16:54:27.518, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 16:54:27.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 16:54:27.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-03 16:54:27.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 16:54:27.521, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 16:54:27.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 16:54:27.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 16:54:27.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:54:27.524, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:54:27.524, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:54:27.524, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 16:54:27.524, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 16:54:27.528, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 16:54:27.528, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 16:54:27.528, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 16:54:27.528, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 16:54:27.531, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 16:54:27.531, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 16:54:27.531, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 16:54:27.531, clock=0]
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
#########################Game Initialized
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
AGENT Thread-12: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 16:54:27.535, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 16:54:27.535, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:54:27.537, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 16:54:27.535, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:54:27.537, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 16:54:27.535, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:54:27.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:54:27.537, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:54:27.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-03 16:54:27.537, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:54:27.54, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 16:54:27.546, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 16:54:27.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 16:54:27.546, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 16:54:27.546, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 16:54:27.546, clock=0]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed UpdateClock(3)
Event processed UpdateClock(2)
Event processed UpdateTile(yellow, 0, 0)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateClock(3)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateClock(3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(yellow, 0, 0)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(white, 0, 3)
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 16:54:27.55, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 16:54:27.55, clock=0]
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(blue, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 0, 6)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(blue, 0, 6)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 6)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(brown, 1, 4)
Event processed UpdateTile(white, 1, 6)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 2, 0)
Event processed UpdateTile(white, 1, 6)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(3), UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(white, 1, 6)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(yellow, 2, 0)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(3), UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(white, 1, 6), UpdateTile(yellow, 2, 0)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(yellow, 2, 0)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@733c0466
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(3), UpdateTile(yellow, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(white, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(brown, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(white, 1, 6)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(3)
},
{	UpdateTile(yellow, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(brown, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(white, 1, 6)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@18a37512
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@1f34137c
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 16:54:27.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 16:54:27.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:54:27.554, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:54:27.554, clock=0]
Event processed UpdateTile(yellow, 2, 0)
[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 0)
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos, UpdateTile(yellow, 2, 0)]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 0)
}


Event processed UpdateTile(yellow, 2, 0)
Event processed UpdateTile(yellow, 2, 1)
[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 0)
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos, UpdateTile(yellow, 2, 0)]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 0)
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 1)
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos, UpdateTile(yellow, 2, 1)]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(yellow, 2, 1)
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [5,5]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(5, 5, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(5, 5, C)]
[After]:{	B(clock(C));
	GetAgentPos(5, 5, C)
}


[CTAH] Agentposition: [2,4]
[CTAH] Agentposition: [0,0]
[Planbase]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(2, 4, C)]
[After]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:{	GetAgentPos(5, 5, 3)
}


[new scheduled]:[GetAgentPos(5, 5, 3)]
[After]:{	GetAgentPos(5, 5, 3)
}


[Planbase]:{	GetAgentPos(2, 4, 3)
}


[new scheduled]:[GetAgentPos(2, 4, 3)]
[After]:{	GetAgentPos(2, 4, 3)
}


[Planbase]:{	GetAgentPos(0, 0, 3)
}


[new scheduled]:[GetAgentPos(0, 0, 3)]
[After]:{	GetAgentPos(0, 0, 3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:54:27.554, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 16:54:27.557, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 16:54:27.554, clock=0]
org notification: Time [clock=4, time=2015-06-03 16:54:35.847]
object notification: Time [clock=4, time=2015-06-03 16:54:35.847]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 16:54:27.557, clock=0]
object notification: Time [clock=4, time=2015-06-03 16:54:35.847]
object notification: Time [clock=5, time=2015-06-03 16:54:45.85]
object notification: Time [clock=6, time=2015-06-03 16:54:55.853]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 16:54:27.557, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-03 16:54:27.558, clock=0]
org notification: Group [name=g, ra=a10, clock=0, time=2015-06-03 16:54:27.681]
org notification: Goal [id=null, cell=Cell [x=5, y=3], agent=null, time=2015-06-03 16:54:27.639, clock=0]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=6, time=2015-06-03 16:54:58.838]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=6, time=2015-06-03 16:54:58.898]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 16:54:27.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-03 16:54:27.558, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-03 16:54:27.562, clock=0]
object notification: Time [clock=4, time=2015-06-03 16:54:35.847]
org notification: Time [clock=5, time=2015-06-03 16:54:45.85]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-03 16:54:27.558, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 16:54:27.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 16:54:27.557, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-03 16:54:27.562, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 16:54:27.563, clock=0]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=6, time=2015-06-03 16:54:58.795]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=6, time=2015-06-03 16:54:58.83]
object notification: Time [clock=5, time=2015-06-03 16:54:45.85]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 16:54:27.563, clock=0]
object notification: Time [clock=5, time=2015-06-03 16:54:45.85]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-03 16:54:27.558, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 16:54:27.565, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 16:54:27.565, clock=0]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=6, time=2015-06-03 16:54:58.871]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 16:54:27.567, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 16:54:27.567, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(5, 3)], sanction=[reduce(g, 700)], deadline=28, time=2015-06-03 16:54:58.956, clock=6]
object notification: Time [clock=6, time=2015-06-03 16:54:55.853]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 16:54:27.568, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 16:54:27.568, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 16:54:27.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 16:54:27.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 16:54:27.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 16:54:27.571, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 16:54:27.571, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 16:54:27.573, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 16:54:27.573, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:54:27.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:54:27.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 16:54:27.576, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 16:54:27.576, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 16:54:27.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 16:54:27.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 16:54:27.578, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 16:54:27.578, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 16:54:27.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 16:54:27.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 16:54:27.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 16:54:27.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:54:27.582, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:54:27.582, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:54:27.583, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:54:27.583, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 16:54:27.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 16:54:27.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 16:54:27.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 16:54:27.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-03 16:54:27.586, clock=0]
object notification: Time [clock=6, time=2015-06-03 16:54:55.853]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 16:54:27.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 16:54:27.588, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:54:27.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:54:27.593, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 16:54:27.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-03 16:54:27.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 16:54:27.595, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-03 16:54:27.562, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-06-03 16:54:27.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 16:54:27.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 16:54:27.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 16:54:27.598, clock=0]
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateClock(4)
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-06-03 16:54:27.599, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 16:54:27.588, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 16:54:27.565, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 16:54:27.6, clock=0]
Event processed UpdateTile(blue, 2, 2)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 16:54:27.602, clock=0]
Event processed UpdateTile(blue, 2, 3)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:54:27.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 16:54:27.567, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:54:27.593, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 16:54:27.568, clock=0]
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 300))
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 16:54:27.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 16:54:27.57, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 16:54:27.595, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 16:54:27.571, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-06-03 16:54:27.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 16:54:27.573, clock=0]
org notification: Time [clock=6, time=2015-06-03 16:54:55.853]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 16:54:27.598, clock=0]
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-06-03 16:54:27.599, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:54:27.575, clock=0]
Event processed UpdateTile(white, 2, 4)
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 16:54:27.6, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 16:54:27.576, clock=0]
Event processed UpdateTile(yellow, 2, 5)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 16:54:27.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 16:54:27.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 16:54:27.578, clock=0]
Event processed UpdateTile(white, 2, 6)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 16:54:27.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 16:54:27.581, clock=0]
Event processed UpdateClock(5)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:54:27.582, clock=0]
Event processed UpdateTile(yellow, 3, 0)
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateTile(brown, 3, 1)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:54:27.583, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 16:54:27.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 16:54:27.585, clock=0]
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(brown, 3, 4)
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 16:54:27.56, clock=0]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=6, time=2015-06-03 16:54:58.848]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-03 16:54:27.586, clock=0]
Event processed UpdateTile(white, 3, 5)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 16:54:27.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 16:54:27.588, clock=0]
Event processed UpdateTile(brown, 3, 6)
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:54:27.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:54:27.593, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 16:54:27.594, clock=0]
Event processed UpdateTile(brown, 4, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 16:54:27.595, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-06-03 16:54:27.597, clock=0]
Event processed UpdateTile(blue, 4, 1)
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 16:54:27.598, clock=0]
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(brown, 4, 3)
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-03 16:54:27.562, clock=0]
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 4, 6)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 16:54:27.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-06-03 16:54:27.599, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 16:54:27.6, clock=0]
Event processed UpdateTile(white, 5, 0)
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 16:54:27.602, clock=0]
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateClock(6)
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-03 16:54:27.565, clock=0]
Event processed UpdateTile(white, 5, 2)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateClock(4)
Event processed UpdateTile(blue, 2, 2)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 300))
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateClock(5)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 5, 5)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateClock(6)
Event processed UpdateTile(yellow, 6, 0)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 16:54:27.567, clock=0]
Event processed UpdateTile(yellow, 2, 5)
Event processed UpdateTile(white, 2, 6)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(brown, 3, 1)
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 16:54:27.568, clock=0]
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(brown, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(brown, 6, 4)
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 16:54:27.57, clock=0]
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(yellow, 5, 1)
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 16:54:27.571, clock=0]
Event processed UpdateTile(white, 5, 2)
Event processed UpdateTile(blue, 5, 3)
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 16:54:27.573, clock=0]
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(yellow, 6, 0)
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-06-03 16:54:27.575, clock=0]
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateClock(4)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateClock(5)
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateClock(6)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 16:54:27.576, clock=0]
Event processed UpdateTile(brown, 6, 4)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(yellow, 2, 5)
[Planbase]:{	UpdateTile(yellow, 2, 1)
},
{	UpdateClock(4)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateClock(5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateClock(6)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


[new scheduled]:[UpdateTile(yellow, 2, 1), UpdateClock(4), UpdateTile(blue, 2, 2), UpdateTile(blue, 2, 3), adoptProhibition(rejectRequests(a40), reduce(a40, 300)), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateTile(white, 2, 4), UpdateTile(yellow, 2, 5), UpdateTile(white, 2, 6), UpdateClock(5), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(white, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(white, 5, 0), UpdateTile(yellow, 5, 1), UpdateClock(6), UpdateTile(white, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(white, 6, 1), UpdateTile(white, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(brown, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6)]
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 300))
[After]:{	UpdateTile(yellow, 2, 1)
},
{	UpdateClock(4)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateClock(5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateClock(6)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


Event processed UpdateTile(white, 2, 6)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed adoptObligation(surround(5, 3), 28, reduce(g, 700))
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(white, 3, 3)
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 16:54:27.577, clock=0]
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(brown, 3, 6)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 16:54:27.578, clock=0]
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 16:54:27.58, clock=0]
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(white, 4, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 16:54:27.581, clock=0]
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(white, 5, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 16:54:27.582, clock=0]
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(white, 5, 2)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(brown, 5, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 16:54:27.583, clock=0]
Event processed UpdateTile(white, 5, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-03 16:54:27.584, clock=0]
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(yellow, 6, 0)
Event processed UpdateTile(white, 6, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 16:54:27.585, clock=0]
Event processed UpdateTile(white, 6, 2)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-03 16:54:27.586, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 16:54:27.587, clock=0]
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateTile(brown, 6, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 16:54:27.588, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 16:54:27.592, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 16:54:27.593, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=yellow, time=2015-06-03 16:54:27.594, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 16:54:27.595, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-06-03 16:54:27.597, clock=0]
[Planbase]:{	UpdateTile(yellow, 2, 1)
},
{	UpdateClock(4)
},
{	UpdateTile(blue, 2, 2)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	UpdateClock(5)
},
{	UpdateTile(blue, 2, 3)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(6)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


[new scheduled]:[UpdateTile(yellow, 2, 1), UpdateClock(4), UpdateTile(blue, 2, 2), adoptProhibition(rejectRequests(a30), reduce(a30, 300)), UpdateClock(5), UpdateTile(blue, 2, 3), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateClock(6), UpdateTile(white, 2, 4), UpdateTile(yellow, 2, 5), UpdateTile(white, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(white, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(white, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(white, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(white, 6, 1), UpdateTile(white, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(brown, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6)]
[After]:{	UpdateTile(yellow, 2, 1)
},
{	UpdateClock(4)
},
{	UpdateTile(blue, 2, 2)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	UpdateClock(5)
},
{	UpdateTile(blue, 2, 3)
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(6)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
}


org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 16:54:27.598, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-06-03 16:54:27.599, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 16:54:27.6, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 16:54:27.602, clock=0]
[Planbase]:{	UpdateTile(blue, 2, 2)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	adoptObligation(surround(5, 3), 28, reduce(g, 700))
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[new scheduled]:[UpdateTile(blue, 2, 2), UpdateClock(4), UpdateClock(5), UpdateClock(6), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(yellow, 2, 5), adoptProhibition(rejectRequests(a10), reduce(a10, 300)), UpdateTile(white, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), adoptObligation(surround(5, 3), 28, reduce(g, 700)), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(white, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(white, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(white, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(white, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(yellow, 6, 0), UpdateTile(white, 6, 1), UpdateTile(white, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(brown, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(moveTooFast(a10), reduce(a10, 300))]
[After]:{	UpdateTile(blue, 2, 2)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(yellow, 2, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	adoptObligation(surround(5, 3), 28, reduce(g, 700))
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(white, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(yellow, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(brown, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	adopta(surround(5, 3, 700) : 3 Jun 2015 16:11:39 GMT, priority 10)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), adopta(surround(5, 3, 700) : 3 Jun 2015 16:11:39 GMT, priority 10), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	adopta(surround(5, 3, 700) : 3 Jun 2015 16:11:39 GMT, priority 10)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(5, 3, 700) : 3 Jun 2015 16:11:39 GMT, priority 10
[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(5, 3); sendSouth(a10, 5, 3, 100); sendWest(a20, 5, 3, 100); sendEast(a30, 5, 3, 100); sendNorth(a40, 5, 3, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Surround(5, 3);
	sendSouth(a10, 5, 3, 100);
	sendWest(a20, 5, 3, 100);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 5, 3, 100);
	sendWest(a20, 5, 3, 100);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 5, 3, 100); sendWest(a20, 5, 3, 100); sendEast(a30, 5, 3, 100); sendNorth(a40, 5, 3, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 5, 3, 100);
	sendWest(a20, 5, 3, 100);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 5, 2, 5, 3, 100),L,0);
	sendWest(a20, 5, 3, 100);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 5, 2, 5, 3, 100),L,0); sendWest(a20, 5, 3, 100); sendEast(a30, 5, 3, 100); sendNorth(a40, 5, 3, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 5, 2, 5, 3, 100),L,0);
	sendWest(a20, 5, 3, 100);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=5, y=2], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.03]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=5, y=2], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.03]
object notification: Obligation [subject=a10, obligation=[at(5, 2, a10)], sanction=[reduce(a10, 700)], deadline=26, time=2015-06-03 16:55:00.04, clock=6]
Event processed adoptObligation(at(5, 2, a10), 26, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 4, 3, 5, 3, 100),L,0);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(5, 2, a10), 26, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 4, 3, 5, 3, 100),L,0); sendEast(a30, 5, 3, 100); sendNorth(a40, 5, 3, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), adoptObligation(at(5, 2, a10), 26, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 4, 3, 5, 3, 100),L,0);
	sendEast(a30, 5, 3, 100);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(5, 2, a10), 26, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=4, y=3], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.092]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=4, y=3], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.092]
[Planbase]:{	@ctenv(setGoal(a30, 6, 3, 5, 3, 100),L,0);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(5, 2, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 6, 3, 5, 3, 100),L,0); sendNorth(a40, 5, 3, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), adoptz(at(5, 2, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 6, 3, 5, 3, 100),L,0);
	sendNorth(a40, 5, 3, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(5, 2, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=6, y=3], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.141]
obligation to be adopted: at(5, 2, 700) : 3 Jun 2015 16:11:40 GMT, priority 10
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=6, y=3], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.141]
object notification: Obligation [subject=a30, obligation=[at(6, 3, a30)], sanction=[reduce(a30, 700)], deadline=26, time=2015-06-03 16:55:00.144, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 5, 4, 5, 3, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 5, 4, 5, 3, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 5, 4, 5, 3, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=5, y=4], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.212]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=5, y=4], goal=Cell [x=5, y=3], sanction=100, clock=6, time=2015-06-03 16:55:00.212]
Event processed adoptObligation(at(6, 3, a30), 26, reduce(a30, 700))
object notification: Obligation [subject=a40, obligation=[at(5, 4, a40)], sanction=[reduce(a40, 700)], deadline=26, time=2015-06-03 16:55:00.215, clock=6]
[Planbase]:{	adoptObligation(at(6, 3, a30), 26, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(6, 3, a30), 26, reduce(a30, 700))]
[After]:{	adoptObligation(at(6, 3, a30), 26, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(yellow, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(5, 4, a40), 26, reduce(a40, 700))
[Planbase]:{	adoptz(at(6, 3, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[adoptz(at(6, 3, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	adoptz(at(6, 3, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(5, 4, a40), 26, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(5, 4, a40), 26, reduce(a40, 700))]
[After]:{	adoptObligation(at(5, 4, a40), 26, reduce(a40, 700))
}


obligation to be adopted: at(6, 3, 700) : 3 Jun 2015 16:11:40 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, yellow, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, yellow, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, yellow, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a10, type=yes, sanction=100, time=2015-06-03 16:55:00.381, clock=6]
org notification: Color [id=null, color=yellow, agent=a10, type=yes, sanction=100, time=2015-06-03 16:55:00.381, clock=6]
object notification: Obligation [subject=a10, obligation=[color(yellow, a10)], sanction=[reduce(a10, 100)], deadline=21, time=2015-06-03 16:55:00.403, clock=6]
[Planbase]:{	adoptz(at(5, 4, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[adoptz(at(5, 4, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	adoptz(at(5, 4, 700) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
obligation to be adopted: at(5, 4, 700) : 3 Jun 2015 16:11:40 GMT, priority 10
[Planbase]:{	color(blue, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
}


[new scheduled]:[color(blue, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), adoptObligation(color(yellow, a10), 21, reduce(a10, 100))]
[After]:{	color(blue, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, blue, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, blue, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), adoptz(useColor(yellow, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, blue, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a20, type=yes, sanction=100, time=2015-06-03 16:55:00.535, clock=6]
org notification: Color [id=null, color=blue, agent=a20, type=yes, sanction=100, time=2015-06-03 16:55:00.535, clock=6]
obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 16:11:40 GMT, priority 10
[Planbase]:{	color(white, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	color(white, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 16:55:00.639, clock=6]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 16:55:00.639, clock=6]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=21, time=2015-06-03 16:55:00.643, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a40, yes, 100); color(white, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(white, a30), 21, reduce(a30, 100))
[Planbase]:{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(white, a30), 21, reduce(a30, 100))]
[After]:{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 100),L,0); color(white, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 16:55:00.797, clock=6]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 16:55:00.797, clock=6]
[Planbase]:{	adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=21, time=2015-06-03 16:55:00.8, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, no, 100),L,0); color(white, a20, no, 100); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(white, a40), 21, reduce(a40, 100))
[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 16:55:00.899, clock=6]
org notification: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 16:55:00.899, clock=6]
object notification: Prohibition [subject=a10, prohibition=[color(white, a10)], sanction=[reduce(a10, 100)], clock=6, time=2015-06-03 16:55:00.902]
[Planbase]:{	adoptObligation(color(white, a40), 21, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(white, a40), 21, reduce(a40, 100))]
[After]:{	adoptObligation(color(white, a40), 21, reduce(a40, 100))
}


Event processed adoptProhibition(color(white, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, white, no, 100),L,0); color(blue, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), adoptProhibition(color(white, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(blue, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 16:55:00.978, clock=6]
[Planbase]:{	adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10)
}


org notification: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 16:55:00.978, clock=6]
obligation to be adopted: useColor(white, 100) : 3 Jun 2015 16:11:40 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(yellow, a40, no, 100); dropgoal(surround(5, 3, 700) : Infinite, priority 10), AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(yellow, a40, no, 100);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-06-03 16:55:01.041, clock=6]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-06-03 16:55:01.041, clock=6]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=6, time=2015-06-03 16:55:01.044]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, yellow, no, 100),L,0);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, yellow, no, 100),L,0); dropgoal(surround(5, 3, 700) : Infinite, priority 10), aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, yellow, no, 100),L,0);
	dropgoal(surround(5, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=yellow, agent=a40, type=no, sanction=100, time=2015-06-03 16:55:01.138, clock=6]
Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
org notification: Color [id=null, color=yellow, agent=a40, type=no, sanction=100, time=2015-06-03 16:55:01.138, clock=6]
object notification: Prohibition [subject=a40, prohibition=[color(yellow, a40)], sanction=[reduce(a40, 100)], clock=6, time=2015-06-03 16:55:01.15]
[Planbase]:{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(yellow, a40), reduce(a40, 100))
[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(yellow, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
}


[Planbase]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-03 16:55:05.857]
object notification: Time [clock=7, time=2015-06-03 16:55:05.857]
org notification: Time [clock=7, time=2015-06-03 16:55:05.857]
object notification: Time [clock=7, time=2015-06-03 16:55:05.857]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 16:55:15.861]
object notification: Time [clock=8, time=2015-06-03 16:55:15.861]
object notification: Time [clock=8, time=2015-06-03 16:55:15.861]
org notification: Time [clock=8, time=2015-06-03 16:55:15.861]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=9, time=2015-06-03 16:55:25.864]
object notification: Time [clock=9, time=2015-06-03 16:55:25.864]
object notification: Time [clock=9, time=2015-06-03 16:55:25.864]
object notification: Time [clock=9, time=2015-06-03 16:55:25.864]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=10, time=2015-06-03 16:55:35.868]
object notification: Time [clock=10, time=2015-06-03 16:55:35.868]
object notification: Time [clock=10, time=2015-06-03 16:55:35.868]
object notification: Time [clock=10, time=2015-06-03 16:55:35.868]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[CTAH] Array of Terms: [Lapapl.data.Term;@67682962
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@79aa8576
[CTAH] The created APLList : [phasechange]
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5109f2ca
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[6,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 6,3 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 5,4 color: neco
a10[CTAH] going goal: 5,2 color: neco
org notification: Time [clock=11, time=2015-06-03 16:55:45.872]
object notification: Time [clock=11, time=2015-06-03 16:55:45.872]
object notification: Time [clock=11, time=2015-06-03 16:55:45.872]
object notification: Time [clock=11, time=2015-06-03 16:55:45.872]
a10[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][0] [0][1] [1][1] [2][1] [3][1] [3][2] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:0,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [0,1,2,7821]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=7821, agent=a10, agent2=a30, clock=11, time=2015-06-03 16:55:51.079]
object notification: Obligation [subject=a30, obligation=[acceptRequest(7821)], sanction=[reduce(a30, 200)], deadline=16, time=2015-06-03 16:55:51.098, clock=11]
object notification: Obligation [subject=a30, obligation=[respondToRequest(7821)], sanction=[reduce(a30, 300)], deadline=16, time=2015-06-03 16:55:51.1, clock=11]
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not 7821=no)
	then	{	NextStep(0, 1, 7821);
			SentProposal(7821, 2, open, Clock)
		}
	else	{	NextStep(0, 1)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 7821=no) then {NextStep(0, 1, 7821); SentProposal(7821, 2, open, Clock)} else NextStep(0, 1), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 7821=no)
	then	{	NextStep(0, 1, 7821);
			SentProposal(7821, 2, open, Clock)
		}
	else	{	NextStep(0, 1)
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(not 7821=no)
	then	{	NextStep(0, 1, 7821);
			SentProposal(7821, 2, open, 10)
		}
	else	{	NextStep(0, 1)
		}
}


[new scheduled]:[if B(not 7821=no) then {NextStep(0, 1, 7821); SentProposal(7821, 2, open, 10)} else NextStep(0, 1)]
[After]:{	if	B(not 7821=no)
	then	{	NextStep(0, 1, 7821);
			SentProposal(7821, 2, open, 10)
		}
	else	{	NextStep(0, 1)
		}
}


[Planbase]:{	NextStep(0, 1, 7821);
	SentProposal(7821, 2, open, 10)
}


[new scheduled]:[NextStep(0, 1, 7821); SentProposal(7821, 2, open, 10)]
[After]:{	NextStep(0, 1, 7821);
	SentProposal(7821, 2, open, 10)
}


[Planbase]:{	SentProposal(7821, 2, open, 10)
}


[new scheduled]:[SentProposal(7821, 2, open, 10)]
[After]:{	SentProposal(7821, 2, open, 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [5][5] [5][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:5,C:4)
a40[CTAH] moveStepToGoalTest sent proposal for: [5,4,1,2395]
org notification: Proposal [id=2395, agent=a40, agent2=a20, clock=11, time=2015-06-03 16:55:51.751]
Event processed UpdateClock(11)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 2395=no)
	then	{	NextStep(5, 4, 2395);
			SentProposal(2395, 1, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not 2395=no) then {NextStep(5, 4, 2395); SentProposal(2395, 1, open, Clock)} else NextStep(5, 4), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 2395=no)
	then	{	NextStep(5, 4, 2395);
			SentProposal(2395, 1, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(not 2395=no)
	then	{	NextStep(5, 4, 2395);
			SentProposal(2395, 1, open, 10)
		}
	else	{	NextStep(5, 4)
		}
}


[new scheduled]:[if B(not 2395=no) then {NextStep(5, 4, 2395); SentProposal(2395, 1, open, 10)} else NextStep(5, 4)]
[After]:{	if	B(not 2395=no)
	then	{	NextStep(5, 4, 2395);
			SentProposal(2395, 1, open, 10)
		}
	else	{	NextStep(5, 4)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	NextStep(5, 4, 2395);
	SentProposal(2395, 1, open, 10)
}


[new scheduled]:[NextStep(5, 4, 2395); SentProposal(2395, 1, open, 10)]
[After]:{	NextStep(5, 4, 2395);
	SentProposal(2395, 1, open, 10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	SentProposal(2395, 1, open, 10)
}


[new scheduled]:[SentProposal(2395, 1, open, 10)]
[After]:{	SentProposal(2395, 1, open, 10)
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


org notification: Time [clock=12, time=2015-06-03 16:55:55.874]
object notification: Time [clock=12, time=2015-06-03 16:55:55.874]
object notification: Time [clock=12, time=2015-06-03 16:55:55.874]
object notification: Time [clock=12, time=2015-06-03 16:55:55.874]
[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[findNextStep(neco, 700), UpdateClock(12)]
[After]:{	findNextStep(neco, 700)
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}, UpdateClock(12)]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(11>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(11>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(11>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [4][2] [5][2] [5][3] [6][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,2,0,7786]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=7786, agent=a30, agent2=a10, clock=12, time=2015-06-03 16:55:58.328]
object notification: Obligation [subject=a10, obligation=[acceptRequest(7786)], sanction=[reduce(a10, 200)], deadline=17, time=2015-06-03 16:55:58.335, clock=12]
object notification: Obligation [subject=a10, obligation=[respondToRequest(7786)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-03 16:55:58.337, clock=12]
Event processed @ctenv(functionToList(proposal(proposal, 2, 7786, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(7786), 17, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(7786), 17, reduce(a10, 300))
Event processed UpdateClock(11)
Event processed @ctenv(functionToList(proposal(proposal, 0, 7821, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(7821), 16, reduce(a30, 200))
Event processed adoptObligation(respondToRequest(7821), 16, reduce(a30, 300))
Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7786, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7786), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(7786), 17, reduce(a10, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, @ctenv(functionToList(proposal(proposal, 2, 7786, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(7786), 17, reduce(a10, 200)), adoptObligation(respondToRequest(7786), 17, reduce(a10, 300))]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7786, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7786), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(7786), 17, reduce(a10, 300))
}


[Planbase]:{	B(clock(Clock));
	if	B(not 7786=no)
	then	{	NextStep(5, 2, 7786);
			SentProposal(7786, 0, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(11)
},
{	@ctenv(functionToList(proposal(proposal, 0, 7821, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7821), 16, reduce(a30, 200))
},
{	adoptObligation(respondToRequest(7821), 16, reduce(a30, 300))
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not 7786=no) then {NextStep(5, 2, 7786); SentProposal(7786, 0, open, Clock)} else NextStep(5, 2), UpdateClock(11), @ctenv(functionToList(proposal(proposal, 0, 7821, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(7821), 16, reduce(a30, 200)), adoptObligation(respondToRequest(7821), 16, reduce(a30, 300)), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not 7786=no)
	then	{	NextStep(5, 2, 7786);
			SentProposal(7786, 0, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(11)
},
{	@ctenv(functionToList(proposal(proposal, 0, 7821, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7821), 16, reduce(a30, 200))
},
{	adoptObligation(respondToRequest(7821), 16, reduce(a30, 300))
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@188f3bae
[CTAH] The created APLList : [proposal,2,7786,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@5cf6b83e
[CTAH] The created APLList : [proposal,0,7821,open]
[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7786, 200) : 3 Jun 2015 16:12:38 GMT, priority 10)
},
{	adoptz(respondToRequest(7786, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, if B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(7786, 200) : 3 Jun 2015 16:12:38 GMT, priority 10), adoptz(respondToRequest(7786, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7786, 200) : 3 Jun 2015 16:12:38 GMT, priority 10)
},
{	adoptz(respondToRequest(7786, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)
}


[Planbase]:{	if	B(not 7786=no)
	then	{	NextStep(5, 2, 7786);
			SentProposal(7786, 0, open, 10)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7821, 200) : 3 Jun 2015 16:12:38 GMT, priority 10)
},
{	adoptz(respondToRequest(7821, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)
}


[new scheduled]:[if B(not 7786=no) then {NextStep(5, 2, 7786); SentProposal(7786, 0, open, 10)} else NextStep(5, 2), if B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(7821, 200) : 3 Jun 2015 16:12:38 GMT, priority 10), adoptz(respondToRequest(7821, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)]
[After]:{	if	B(not 7786=no)
	then	{	NextStep(5, 2, 7786);
			SentProposal(7786, 0, open, 10)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7821, 200) : 3 Jun 2015 16:12:38 GMT, priority 10)
},
{	adoptz(respondToRequest(7821, 300) : 3 Jun 2015 16:12:38 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


obligation to be adopted: acceptRequest(7786, 200) : 3 Jun 2015 16:12:38 GMT, priority 10
obligation to be adopted: respondToRequest(7786, 300) : 3 Jun 2015 16:12:38 GMT, priority 10
obligation to be adopted: acceptRequest(7821, 200) : 3 Jun 2015 16:12:38 GMT, priority 10
obligation to be adopted: respondToRequest(7821, 300) : 3 Jun 2015 16:12:38 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B([actionresult([proposal,2,7786,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	NextStep(5, 2, 7786);
	SentProposal(7786, 0, open, 10)
},
{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(5, 2, 7786); SentProposal(7786, 0, open, 10), if B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(5, 2, 7786);
	SentProposal(7786, 0, open, 10)
},
{	if	B([actionresult([proposal,0,7821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7786, open)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, if B(proposal=proposal) then ReceivedProposal(2, 7786, open)]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7786, open)
		}
}


[Planbase]:{	SentProposal(7786, 0, open, 10)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7821, open)
		}
}


[new scheduled]:[SentProposal(7786, 0, open, 10), if B(proposal=proposal) then ReceivedProposal(0, 7821, open)]
[After]:{	SentProposal(7786, 0, open, 10)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7821, open)
		}
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=3393, agent=a20, agent2=a10, clock=12, time=2015-06-03 16:55:59.21]
object notification: Obligation [subject=a10, obligation=[acceptRequest(3393)], sanction=[reduce(a10, 200)], deadline=17, time=2015-06-03 16:55:59.486, clock=12]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3393)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-03 16:55:59.488, clock=12]
Event processed @ctenv(functionToList(proposal(proposal, 1, 3393, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(3393), 17, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(3393), 17, reduce(a10, 300))
[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	ReceivedProposal(2, 7786, open)
},
{	@ctenv(functionToList(proposal(proposal, 1, 3393, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3393), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(3393), 17, reduce(a10, 300))
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, ReceivedProposal(2, 7786, open), @ctenv(functionToList(proposal(proposal, 1, 3393, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(3393), 17, reduce(a10, 200)), adoptObligation(respondToRequest(3393), 17, reduce(a10, 300))]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	ReceivedProposal(2, 7786, open)
},
{	@ctenv(functionToList(proposal(proposal, 1, 3393, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3393), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(3393), 17, reduce(a10, 300))
}


[Planbase]:{	ReceivedProposal(0, 7821, open)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedProposal(0, 7821, open)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedProposal(0, 7821, open)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@a8338fa
[CTAH] The created APLList : [proposal,1,3393,open]
[Planbase]:{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3393, 200) : 3 Jun 2015 16:12:39 GMT, priority 10)
},
{	adoptz(respondToRequest(3393, 300) : 3 Jun 2015 16:12:39 GMT, priority 10)
}


[new scheduled]:[if B(not scoreAfterExchange(7786, Score)) then getScoreAfterExchange(7786); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7786, Answer), if B(not scoreAfterExchange(7786, Score)) then getScoreAfterExchange(7786); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7786, Answer), if G(acceptRequests(7786, V2)) then skip else if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), findNextStep(neco, 700), if B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(3393, 200) : 3 Jun 2015 16:12:39 GMT, priority 10), adoptz(respondToRequest(3393, 300) : 3 Jun 2015 16:12:39 GMT, priority 10)]
[After]:{	if	G(acceptRequests(7786, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 7786, closed(A)))
			then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(not scoreAfterExchange(7786, Score))
	then	{	getScoreAfterExchange(7786)
		};
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(not scoreAfterExchange(7786, Score))
	then	{	getScoreAfterExchange(7786)
		};
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3393, 200) : 3 Jun 2015 16:12:39 GMT, priority 10)
},
{	adoptz(respondToRequest(3393, 300) : 3 Jun 2015 16:12:39 GMT, priority 10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(not scoreAfterExchange(7821, Score)) then getScoreAfterExchange(7821); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7821, Answer), if B(not scoreAfterExchange(7821, Score)) then getScoreAfterExchange(7821); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7821, Answer), if G(acceptRequests(7821, V2)) then skip else if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}]
[After]:{	if	G(acceptRequests(7821, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7821, closed(A)))
			then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	if	B(not scoreAfterExchange(7821, Score))
	then	{	getScoreAfterExchange(7821)
		};
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	if	B(not scoreAfterExchange(7821, Score))
	then	{	getScoreAfterExchange(7821)
		};
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


obligation to be adopted: acceptRequest(3393, 200) : 3 Jun 2015 16:12:39 GMT, priority 10
obligation to be adopted: respondToRequest(3393, 300) : 3 Jun 2015 16:12:39 GMT, priority 10
[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	getScoreAfterExchange(7786);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	getScoreAfterExchange(7786);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, getScoreAfterExchange(7786); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7786, Answer), getScoreAfterExchange(7786); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7786, Answer), if B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	getScoreAfterExchange(7786);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	getScoreAfterExchange(7786);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B([actionresult([proposal,1,3393,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	getScoreAfterExchange(7821);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	getScoreAfterExchange(7821);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[new scheduled]:[if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), if B(12>10+7) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, getScoreAfterExchange(7821); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7821, Answer), getScoreAfterExchange(7821); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7821, Answer)]
[After]:{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	getScoreAfterExchange(7821);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	getScoreAfterExchange(7821);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	GetScoreAfterExchange(7786, yes);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	GetScoreAfterExchange(7786, yes);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3393, open)
		}
}


[new scheduled]:[adoptz(respondToRequest(7786, 50) : Infinite, priority 10), if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, GetScoreAfterExchange(7786, yes); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7786, Answer), GetScoreAfterExchange(7786, yes); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7786, Answer), if B(proposal=proposal) then ReceivedProposal(1, 3393, open)]
[After]:{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	GetScoreAfterExchange(7786, yes);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	GetScoreAfterExchange(7786, yes);
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3393, open)
		}
}


[Planbase]:{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(7821, yes);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	GetScoreAfterExchange(7821, yes);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(7821, 50) : Infinite, priority 10), GetScoreAfterExchange(7821, yes); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7821, Answer), GetScoreAfterExchange(7821, yes); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7821, Answer)]
[After]:{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(7821, yes);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	GetScoreAfterExchange(7821, yes);
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


obligation to be adopted: respondToRequest(7786, 50) : Infinite, priority 10
obligation to be adopted: respondToRequest(7821, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	ReceivedProposal(1, 3393, open)
}


[new scheduled]:[if B(not scoreAfterExchange(7786, Score)) then getScoreAfterExchange(7786); B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7786, Answer), if G(acceptRequests(7786, V2)) then skip else if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), findNextStep(neco, 700), B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7786, Answer), B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7786, Answer), ReceivedProposal(1, 3393, open)]
[After]:{	if	B(not scoreAfterExchange(7786, Score))
	then	{	getScoreAfterExchange(7786)
		};
	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	G(acceptRequests(7786, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 7786, closed(A)))
			then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	ReceivedProposal(1, 3393, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(7821, Score)) then getScoreAfterExchange(7821); B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7821, Answer), if G(acceptRequests(7821, V2)) then skip else if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7821, Answer), B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7821, Answer)]
[After]:{	if	B(not scoreAfterExchange(7821, Score))
	then	{	getScoreAfterExchange(7821)
		};
	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	if	G(acceptRequests(7821, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7821, closed(A)))
			then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(3393, Score)) then getScoreAfterExchange(3393); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3393, Answer), if B(not scoreAfterExchange(3393, Score)) then getScoreAfterExchange(3393); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3393, Answer), B(scoreAfterExchange(7786, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7786, Answer), if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7786, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7786, Answer)]
[After]:{	B(scoreAfterExchange(7786, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	if	B(not scoreAfterExchange(3393, Score))
	then	{	getScoreAfterExchange(3393)
		};
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	if	B(not scoreAfterExchange(3393, Score))
	then	{	getScoreAfterExchange(3393)
		};
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
}


[Planbase]:{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[new scheduled]:[B(scoreAfterExchange(7821, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7821, Answer), if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), if B(12>10+7) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7821, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7821, Answer)]
[After]:{	B(scoreAfterExchange(7821, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	getScoreAfterExchange(3393);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
},
{	getScoreAfterExchange(3393);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7786, Answer), adoptz(respondToRequest(7786, 50) : Infinite, priority 10), if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, getScoreAfterExchange(3393); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3393, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7786, accept), getScoreAfterExchange(3393); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3393, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(7786, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, Answer)
},
{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	getScoreAfterExchange(3393);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
},
{	getScoreAfterExchange(3393);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
}


[new scheduled]:[findNextStep(neco, 700), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7821, Answer), adoptz(respondToRequest(7821, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7821, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(7821, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, Answer)
},
{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


obligation to be adopted: respondToRequest(7786, 50) : Infinite, priority 10
obligation to be adopted: respondToRequest(7821, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
},
{	GetScoreAfterExchange(3393, yes);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(accept=accept);
	sendResponse(7786, accept)
},
{	GetScoreAfterExchange(3393, yes);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(accept=accept);
	sendResponse(7786, accept)
}


[new scheduled]:[if G(acceptRequests(7786, V2)) then skip else if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), findNextStep(neco, 700), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(7786, accept), GetScoreAfterExchange(3393, yes); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3393, Answer), B(accept=accept); sendResponse(7786, accept), GetScoreAfterExchange(3393, yes); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3393, Answer), B(accept=accept); sendResponse(7786, accept)]
[After]:{	if	G(acceptRequests(7786, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 7786, closed(A)))
			then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7786, accept)
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(3393, yes);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(accept=accept);
	sendResponse(7786, accept)
},
{	GetScoreAfterExchange(3393, yes);
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	B(accept=accept);
	sendResponse(7786, accept)
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(accept=accept);
	sendResponse(7821, accept)
},
{	B(accept=accept);
	sendResponse(7821, accept)
}


[new scheduled]:[if G(acceptRequests(7821, V2)) then skip else if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(7821, accept), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, B(accept=accept); sendResponse(7821, accept), B(accept=accept); sendResponse(7821, accept)]
[After]:{	if	G(acceptRequests(7821, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7821, closed(A)))
			then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7821, accept)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	B(accept=accept);
	sendResponse(7821, accept)
},
{	B(accept=accept);
	sendResponse(7821, accept)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=2395, response=accepted, clock=12, time=2015-06-03 16:56:00.523]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7821, accept)
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	sendResponse(7821, accept)
},
{	sendResponse(7821, accept)
}


[new scheduled]:[if B(not receivedP(0, 7821, closed(A))) then adoptz(respondToRequest(7821, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7821, accept), if B(12>10+7) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, sendResponse(7821, accept), sendResponse(7821, accept)]
[After]:{	if	B(not receivedP(0, 7821, closed(A)))
	then	{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7821, accept)
},
{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	sendResponse(7821, accept)
},
{	sendResponse(7821, accept)
}


[Planbase]:{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7786, accept)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	sendResponse(7786, accept)
},
{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	sendResponse(7786, accept)
}


[new scheduled]:[if B(not receivedP(2, 7786, closed(A))) then adoptz(respondToRequest(7786, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7786, accept), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3393, Answer), sendResponse(7786, accept), B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3393, Answer), sendResponse(7786, accept)]
[After]:{	if	B(not receivedP(2, 7786, closed(A)))
	then	{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7786, accept)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	sendResponse(7786, accept)
},
{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	sendResponse(7786, accept)
}


Event processed @ctenv(functionToList(message(response, 2395, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	@ctenv(functionToList(message(response, 2395, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}, @ctenv(functionToList(message(response, 2395, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	@ctenv(functionToList(message(response, 2395, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@22d1a1ae
[CTAH] The created APLList : [response,2395,accept]
[Planbase]:{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	sendResponse(7821, accept)
},
{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
},
{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(7821, 50) : Infinite, priority 10), sendResponse(7821, accept), @ctenv(sendResponse(7821, accept),L1,0); SentResponse(accept, 7821), @ctenv(sendResponse(7821, accept),L1,0); SentResponse(accept, 7821)]
[After]:{	adoptz(respondToRequest(7821, 50) : Infinite, priority 10)
},
{	sendResponse(7821, accept)
},
{	findNextStep(neco, 700)
},
{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
},
{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
}


[Planbase]:{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	sendResponse(7786, accept)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
}


[new scheduled]:[adoptz(respondToRequest(7786, 50) : Infinite, priority 10), sendResponse(7786, accept), if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3393, Answer), @ctenv(sendResponse(7786, accept),L1,0); SentResponse(accept, 7786), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3393, Answer), @ctenv(sendResponse(7786, accept),L1,0); SentResponse(accept, 7786)]
[After]:{	adoptz(respondToRequest(7786, 50) : Infinite, priority 10)
},
{	sendResponse(7786, accept)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 0.

obligation to be adopted: respondToRequest(7821, 50) : Infinite, priority 10
org notification: Response [id=7821, response=accepted, clock=12, time=2015-06-03 16:56:00.74]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}, if B(response=response) then ReceivedResponse(accept, 2395)]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2395)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

obligation to be adopted: respondToRequest(7786, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=7786, response=accepted, clock=12, time=2015-06-03 16:56:00.795]
Event processed @ctenv(functionToList(message(response, 7786, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	@ctenv(functionToList(message(response, 7786, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(7821, accept),L1,0); SentResponse(accept, 7821), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, @ctenv(functionToList(message(response, 7786, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(sendResponse(7821, accept),L1,0);
	SentResponse(accept, 7821)
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	@ctenv(functionToList(message(response, 7786, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(response, 7821, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[CTAH] Array of Terms: [Lapapl.data.Term;@1990694c
[CTAH] The created APLList : [response,7786,accept]
[Planbase]:{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, accept)
},
{	@ctenv(functionToList(message(response, 7821, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if G(acceptRequests(3393, V2)) then skip else if B(not receivedP(1, 3393, closed(A))) then adoptz(respondToRequest(3393, 50) : Infinite, priority 10), findNextStep(neco, 700), @ctenv(sendResponse(7786, accept),L1,0); SentResponse(accept, 7786), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3393, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(3393, accept), @ctenv(functionToList(message(response, 7821, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequests(3393, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 3393, closed(A)))
			then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
				}
		}
},
{	@ctenv(sendResponse(7786, accept),L1,0);
	SentResponse(accept, 7786)
},
{	findNextStep(neco, 700)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, accept)
},
{	@ctenv(functionToList(message(response, 7821, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedResponse(accept, 2395)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 2395)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 2395)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@67649c85
[CTAH] The created APLList : [response,7821,accept]
[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7786)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}, if B(response=response) then ReceivedResponse(accept, 7786)]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7786)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	if	B(not receivedP(1, 3393, closed(A)))
	then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(accept=accept);
	sendResponse(3393, accept)
},
{	B(accept=accept);
	sendResponse(3393, accept)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7821)
		}
}


[new scheduled]:[if B(not receivedP(1, 3393, closed(A))) then adoptz(respondToRequest(3393, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, B(accept=accept); sendResponse(3393, accept), B(accept=accept); sendResponse(3393, accept), if B(response=response) then ReceivedResponse(accept, 7821)]
[After]:{	if	B(not receivedP(1, 3393, closed(A)))
	then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	B(accept=accept);
	sendResponse(3393, accept)
},
{	B(accept=accept);
	sendResponse(3393, accept)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7821)
		}
}


[Planbase]:{	ReceivedResponse(accept, 7786)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 7786)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 7786)
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 4, 2395); ReceivedResponse(noresponse, 2395)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 4, 2395);
			ReceivedResponse(noresponse, 2395)
		}
}


[Planbase]:{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	sendResponse(3393, accept)
},
{	sendResponse(3393, accept)
},
{	ReceivedResponse(accept, 7821)
}


[new scheduled]:[adoptz(respondToRequest(3393, 50) : Infinite, priority 10), if B(12>10+7) then {NoNextStep(0, 1, 7821); ReceivedResponse(noresponse, 7821)}, sendResponse(3393, accept), sendResponse(3393, accept), ReceivedResponse(accept, 7821)]
[After]:{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
},
{	if	B(12>10+7)
	then	{	NoNextStep(0, 1, 7821);
			ReceivedResponse(noresponse, 7821)
		}
},
{	sendResponse(3393, accept)
},
{	sendResponse(3393, accept)
},
{	ReceivedResponse(accept, 7821)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>10+Wait) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}]
[After]:{	B(timetowait(Wait));
	if	B(12>10+Wait)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
}


obligation to be adopted: respondToRequest(3393, 50) : Infinite, priority 10
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(sendResponse(3393, accept),L1,0);
	SentResponse(accept, 3393)
},
{	@ctenv(sendResponse(3393, accept),L1,0);
	SentResponse(accept, 3393)
}


[new scheduled]:[if B(not scoreAfterExchange(3393, Score)) then getScoreAfterExchange(3393); B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3393, Answer), if G(acceptRequests(3393, V2)) then skip else if B(not receivedP(1, 3393, closed(A))) then adoptz(respondToRequest(3393, 50) : Infinite, priority 10), findNextStep(neco, 700), @ctenv(sendResponse(3393, accept),L1,0); SentResponse(accept, 3393), @ctenv(sendResponse(3393, accept),L1,0); SentResponse(accept, 3393)]
[After]:{	if	B(not scoreAfterExchange(3393, Score))
	then	{	getScoreAfterExchange(3393)
		};
	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	G(acceptRequests(3393, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 3393, closed(A)))
			then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	@ctenv(sendResponse(3393, accept),L1,0);
	SentResponse(accept, 3393)
},
{	@ctenv(sendResponse(3393, accept),L1,0);
	SentResponse(accept, 3393)
}


[Planbase]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
}


[new scheduled]:[if B(12>10+7) then {NoNextStep(5, 2, 7786); ReceivedResponse(noresponse, 7786)}]
[After]:{	if	B(12>10+7)
	then	{	NoNextStep(5, 2, 7786);
			ReceivedResponse(noresponse, 7786)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=3393, response=accepted, clock=12, time=2015-06-03 16:56:01.476]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 2395)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4, 2395)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 2395)
}


a40[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=4], time=2015-06-03 16:56:01.591, clock=12]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=4], time=2015-06-03 16:56:01.591, clock=12]
object notification: Obligation [subject=a40, obligation=[makeMove(5, 4, a40)], sanction=[reduce(a40, 300)], deadline=27, time=2015-06-03 16:56:01.618, clock=12]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(not receivedP(1, 3393, closed(A)))
	then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 7821)
}


[new scheduled]:[B(scoreAfterExchange(3393, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3393, Answer), if B(not receivedP(1, 3393, closed(A))) then adoptz(respondToRequest(3393, 50) : Infinite, priority 10), @ctenv(moveStepToGoal(neco, 0, 1),L2,0); if B(L2=[actionresult([0,1])]) then {B(clock(Clock)); UpdatePosition(0, 1, Clock)}; NoNextStep(0, 1, 7821)]
[After]:{	B(scoreAfterExchange(3393, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3393, Answer)
},
{	if	B(not receivedP(1, 3393, closed(A)))
	then	{	adoptz(respondToRequest(3393, 50) : Infinite, priority 10)
		}
},
{	@ctenv(moveStepToGoal(neco, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 7821)
}


Event processed UpdatePosition(5, 4, 12)
Event processed adoptObligation(makeMove(5, 4, a40), 27, reduce(a40, 300))
Need to wait 2 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-06-03 16:56:01.717, clock=12]
object notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-06-03 16:56:01.717, clock=12]
object notification: Obligation [subject=a10, obligation=[makeMove(0, 1, a10)], sanction=[reduce(a10, 300)], deadline=27, time=2015-06-03 16:56:01.731, clock=12]
[Planbase]:{	NoNextStep(5, 4, 2395)
},
{	UpdatePosition(5, 4, 12)
},
{	adoptObligation(makeMove(5, 4, a40), 27, reduce(a40, 300))
}


[new scheduled]:[NoNextStep(5, 4, 2395), UpdatePosition(5, 4, 12), adoptObligation(makeMove(5, 4, a40), 27, reduce(a40, 300))]
[After]:{	NoNextStep(5, 4, 2395)
},
{	UpdatePosition(5, 4, 12)
},
{	adoptObligation(makeMove(5, 4, a40), 27, reduce(a40, 300))
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 7786)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2, 7786)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 7786)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:56:01.814, clock=12]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:56:01.814, clock=12]
object notification: Obligation [subject=a30, obligation=[makeMove(5, 2, a30)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 16:56:01.83, clock=12]
[Planbase]:{	adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:12:41 GMT, priority 10)
}


[new scheduled]:[adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:12:41 GMT, priority 10)]
[After]:{	adoptz(makeMove(5, 4, 300) : 3 Jun 2015 16:12:41 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 4, 300) : 3 Jun 2015 16:12:41 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] moveStepToGoal returns: [0,1]
Event processed UpdatePosition(0, 1, 12)
Event processed adoptObligation(makeMove(0, 1, a10), 27, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 7821)
},
{	UpdatePosition(0, 1, 12)
},
{	adoptObligation(makeMove(0, 1, a10), 27, reduce(a10, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(0, 1, Clock); NoNextStep(0, 1, 7821), UpdatePosition(0, 1, 12), adoptObligation(makeMove(0, 1, a10), 27, reduce(a10, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 7821)
},
{	UpdatePosition(0, 1, 12)
},
{	adoptObligation(makeMove(0, 1, a10), 27, reduce(a10, 300))
}


[Planbase]:{	UpdatePosition(0, 1, 12);
	NoNextStep(0, 1, 7821)
},
{	adoptz(makeMove(0, 1, 300) : 3 Jun 2015 16:12:43 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(0, 1, 12); NoNextStep(0, 1, 7821), adoptz(makeMove(0, 1, 300) : 3 Jun 2015 16:12:43 GMT, priority 10)]
[After]:{	UpdatePosition(0, 1, 12);
	NoNextStep(0, 1, 7821)
},
{	adoptz(makeMove(0, 1, 300) : 3 Jun 2015 16:12:43 GMT, priority 10)
}


obligation to be adopted: makeMove(0, 1, 300) : 3 Jun 2015 16:12:43 GMT, priority 10
[Planbase]:{	NoNextStep(0, 1, 7821)
}


[new scheduled]:[NoNextStep(0, 1, 7821)]
[After]:{	NoNextStep(0, 1, 7821)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=4], time=2015-06-03 16:56:04.27, clock=12]
a30[CTAH] moveStepToGoal returns: [5,2]
Event processed UpdatePosition(5, 2, 12)
Event processed adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2, 7786)
},
{	UpdatePosition(5, 2, 12)
},
{	adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 2, Clock); NoNextStep(5, 2, 7786), UpdatePosition(5, 2, 12), adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2, 7786)
},
{	UpdatePosition(5, 2, 12)
},
{	adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
}


[Planbase]:{	UpdatePosition(5, 2, 12);
	NoNextStep(5, 2, 7786)
},
{	adoptz(makeMove(5, 2, 300) : 3 Jun 2015 16:12:44 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(5, 2, 12); NoNextStep(5, 2, 7786), adoptz(makeMove(5, 2, 300) : 3 Jun 2015 16:12:44 GMT, priority 10)]
[After]:{	UpdatePosition(5, 2, 12);
	NoNextStep(5, 2, 7786)
},
{	adoptz(makeMove(5, 2, 300) : 3 Jun 2015 16:12:44 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 2, 300) : 3 Jun 2015 16:12:44 GMT, priority 10
[Planbase]:{	NoNextStep(5, 2, 7786)
}


[new scheduled]:[NoNextStep(5, 2, 7786)]
[After]:{	NoNextStep(5, 2, 7786)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[6,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 6,3 color: neco
object notification: Time [clock=13, time=2015-06-03 16:56:05.877]
object notification: Time [clock=13, time=2015-06-03 16:56:05.877]
object notification: Time [clock=13, time=2015-06-03 16:56:05.877]
org notification: Time [clock=13, time=2015-06-03 16:56:05.877]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,7975]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=7975, agent=a10, agent2=a40, clock=13, time=2015-06-03 16:56:12.338]
object notification: Obligation [subject=a40, obligation=[acceptRequest(7975)], sanction=[reduce(a40, 200)], deadline=18, time=2015-06-03 16:56:12.347, clock=13]
object notification: Obligation [subject=a40, obligation=[respondToRequest(7975)], sanction=[reduce(a40, 300)], deadline=18, time=2015-06-03 16:56:12.353, clock=13]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	if	B(not 7975=no)
	then	{	NextStep(1, 1, 7975);
			SentProposal(7975, 3, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not 7975=no) then {NextStep(1, 1, 7975); SentProposal(7975, 3, open, Clock)} else NextStep(1, 1), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not 7975=no)
	then	{	NextStep(1, 1, 7975);
			SentProposal(7975, 3, open, Clock)
		}
	else	{	NextStep(1, 1)
		}
},
{	UpdateClock(13)
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 7975, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(7975), 18, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(7975), 18, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 0, 7975, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7975), 18, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(7975), 18, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 0, 7975, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(7975), 18, reduce(a40, 200)), adoptObligation(respondToRequest(7975), 18, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 0, 7975, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(7975), 18, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(7975), 18, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@59e06881
[CTAH] The created APLList : [proposal,0,7975,open]
[Planbase]:{	if	B(not 7975=no)
	then	{	NextStep(1, 1, 7975);
			SentProposal(7975, 3, open, 12)
		}
	else	{	NextStep(1, 1)
		}
}


[new scheduled]:[if B(not 7975=no) then {NextStep(1, 1, 7975); SentProposal(7975, 3, open, 12)} else NextStep(1, 1)]
[After]:{	if	B(not 7975=no)
	then	{	NextStep(1, 1, 7975);
			SentProposal(7975, 3, open, 12)
		}
	else	{	NextStep(1, 1)
		}
}


[Planbase]:{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7975, 200) : 3 Jun 2015 16:12:52 GMT, priority 10)
},
{	adoptz(respondToRequest(7975, 300) : 3 Jun 2015 16:12:52 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(7975, 200) : 3 Jun 2015 16:12:52 GMT, priority 10), adoptz(respondToRequest(7975, 300) : 3 Jun 2015 16:12:52 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(7975, 200) : 3 Jun 2015 16:12:52 GMT, priority 10)
},
{	adoptz(respondToRequest(7975, 300) : 3 Jun 2015 16:12:52 GMT, priority 10)
}


obligation to be adopted: acceptRequest(7975, 200) : 3 Jun 2015 16:12:52 GMT, priority 10
obligation to be adopted: respondToRequest(7975, 300) : 3 Jun 2015 16:12:52 GMT, priority 10
[Planbase]:{	NextStep(1, 1, 7975);
	SentProposal(7975, 3, open, 12)
}


[new scheduled]:[NextStep(1, 1, 7975); SentProposal(7975, 3, open, 12)]
[After]:{	NextStep(1, 1, 7975);
	SentProposal(7975, 3, open, 12)
}


[Planbase]:{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,0,7975,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(7975, 3, open, 12)
}


[new scheduled]:[SentProposal(7975, 3, open, 12)]
[After]:{	SentProposal(7975, 3, open, 12)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7975, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(0, 7975, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 7975, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(0, 7975, open)
}


[new scheduled]:[ReceivedProposal(0, 7975, open)]
[After]:{	ReceivedProposal(0, 7975, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:


[new scheduled]:[if B(not scoreAfterExchange(7975, Score)) then getScoreAfterExchange(7975); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7975, Answer), if B(not scoreAfterExchange(7975, Score)) then getScoreAfterExchange(7975); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7975, Answer), if G(acceptRequests(7975, V2)) then skip else if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(7975, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7975, closed(A)))
			then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(not scoreAfterExchange(7975, Score))
	then	{	getScoreAfterExchange(7975)
		};
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	if	B(not scoreAfterExchange(7975, Score))
	then	{	getScoreAfterExchange(7975)
		};
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(7975);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	getScoreAfterExchange(7975);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[new scheduled]:[if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10), getScoreAfterExchange(7975); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7975, Answer), getScoreAfterExchange(7975); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7975, Answer)]
[After]:{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(7975);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	getScoreAfterExchange(7975);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(7975, yes);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	GetScoreAfterExchange(7975, yes);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[new scheduled]:[adoptz(respondToRequest(7975, 50) : Infinite, priority 10), GetScoreAfterExchange(7975, yes); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7975, Answer), GetScoreAfterExchange(7975, yes); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7975, Answer)]
[After]:{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(7975, yes);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	GetScoreAfterExchange(7975, yes);
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


obligation to be adopted: respondToRequest(7975, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(7975, Score)) then getScoreAfterExchange(7975); B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7975, Answer), if G(acceptRequests(7975, V2)) then skip else if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10), B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7975, Answer), B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7975, Answer)]
[After]:{	if	B(not scoreAfterExchange(7975, Score))
	then	{	getScoreAfterExchange(7975)
		};
	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	if	G(acceptRequests(7975, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7975, closed(A)))
			then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[new scheduled]:[B(scoreAfterExchange(7975, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7975, Answer), if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(7975, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(7975, Answer)]
[After]:{	B(scoreAfterExchange(7975, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(7975, Answer), adoptz(respondToRequest(7975, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(7975, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(7975, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, Answer)
},
{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
}


obligation to be adopted: respondToRequest(7975, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
},
{	B(accept=accept);
	sendResponse(7975, accept)
},
{	B(accept=accept);
	sendResponse(7975, accept)
}


[new scheduled]:[if G(acceptRequests(7975, V2)) then skip else if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(7975, accept), B(accept=accept); sendResponse(7975, accept), B(accept=accept); sendResponse(7975, accept)]
[After]:{	if	G(acceptRequests(7975, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 7975, closed(A)))
			then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(7975, accept)
},
{	B(accept=accept);
	sendResponse(7975, accept)
},
{	B(accept=accept);
	sendResponse(7975, accept)
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7975, accept)
},
{	sendResponse(7975, accept)
},
{	sendResponse(7975, accept)
}


[new scheduled]:[if B(not receivedP(0, 7975, closed(A))) then adoptz(respondToRequest(7975, 50) : Infinite, priority 10), B(accept=accept); sendResponse(7975, accept), sendResponse(7975, accept), sendResponse(7975, accept)]
[After]:{	if	B(not receivedP(0, 7975, closed(A)))
	then	{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(7975, accept)
},
{	sendResponse(7975, accept)
},
{	sendResponse(7975, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	sendResponse(7975, accept)
},
{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
},
{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
}


[new scheduled]:[adoptz(respondToRequest(7975, 50) : Infinite, priority 10), sendResponse(7975, accept), @ctenv(sendResponse(7975, accept),L1,0); SentResponse(accept, 7975), @ctenv(sendResponse(7975, accept),L1,0); SentResponse(accept, 7975)]
[After]:{	adoptz(respondToRequest(7975, 50) : Infinite, priority 10)
},
{	sendResponse(7975, accept)
},
{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
},
{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

obligation to be adopted: respondToRequest(7975, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=7975, response=accepted, clock=13, time=2015-06-03 16:56:13.971]
[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
}


[new scheduled]:[@ctenv(sendResponse(7975, accept),L1,0); SentResponse(accept, 7975)]
[After]:{	@ctenv(sendResponse(7975, accept),L1,0);
	SentResponse(accept, 7975)
}


Event processed @ctenv(functionToList(message(response, 7975, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
},
{	@ctenv(functionToList(message(response, 7975, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}, @ctenv(functionToList(message(response, 7975, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
},
{	@ctenv(functionToList(message(response, 7975, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[CTAH] Array of Terms: [Lapapl.data.Term;@c17717e
[CTAH] The created APLList : [response,7975,accept]
[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7975)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 7975)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 7975)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
},
{	ReceivedResponse(accept, 7975)
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}, ReceivedResponse(accept, 7975)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
},
{	ReceivedResponse(accept, 7975)
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(1, 1, 7975); ReceivedResponse(noresponse, 7975)}]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(1, 1, 7975);
			ReceivedResponse(noresponse, 7975)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 7975)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1, 7975)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 7975)
}


Need to wait 2 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-03 16:56:14.489, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-06-03 16:56:14.489, clock=13]
object notification: Time [clock=14, time=2015-06-03 16:56:15.882]
object notification: Time [clock=14, time=2015-06-03 16:56:15.882]
org notification: Time [clock=14, time=2015-06-03 16:56:15.882]
object notification: Time [clock=14, time=2015-06-03 16:56:15.882]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] moveStepToGoal returns: [1,1]
Event processed UpdatePosition(1, 1, 13)
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 7975)
},
{	UpdatePosition(1, 1, 13)
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1, 7975), UpdatePosition(1, 1, 13), UpdateClock(14)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 7975)
},
{	UpdatePosition(1, 1, 13)
},
{	UpdateClock(14)
}


[Planbase]:{	UpdatePosition(1, 1, 13);
	NoNextStep(1, 1, 7975)
}


[new scheduled]:[UpdatePosition(1, 1, 13); NoNextStep(1, 1, 7975)]
[After]:{	UpdatePosition(1, 1, 13);
	NoNextStep(1, 1, 7975)
}


[Planbase]:{	NoNextStep(1, 1, 7975)
}


[new scheduled]:[NoNextStep(1, 1, 7975)]
[After]:{	NoNextStep(1, 1, 7975)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=3], time=2015-06-03 16:56:20.688, clock=14]
a10[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][1] [2][1] [2][2] [3][2] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:2,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [2,1,3,926]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=926, agent=a10, agent2=a40, clock=14, time=2015-06-03 16:56:23.855]
object notification: Obligation [subject=a40, obligation=[acceptRequest(926)], sanction=[reduce(a40, 200)], deadline=19, time=2015-06-03 16:56:23.863, clock=14]
object notification: Obligation [subject=a40, obligation=[respondToRequest(926)], sanction=[reduce(a40, 300)], deadline=19, time=2015-06-03 16:56:23.865, clock=14]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(not 926=no)
	then	{	NextStep(2, 1, 926);
			SentProposal(926, 3, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 926=no) then {NextStep(2, 1, 926); SentProposal(926, 3, open, Clock)} else NextStep(2, 1)]
[After]:{	B(clock(Clock));
	if	B(not 926=no)
	then	{	NextStep(2, 1, 926);
			SentProposal(926, 3, open, Clock)
		}
	else	{	NextStep(2, 1)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 926, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(926), 19, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(926), 19, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 0, 926, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(926), 19, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(926), 19, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 0, 926, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(926), 19, reduce(a40, 200)), adoptObligation(respondToRequest(926), 19, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 0, 926, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(926), 19, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(926), 19, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1b89ab89
[CTAH] The created APLList : [proposal,0,926,open]
[Planbase]:{	if	B(not 926=no)
	then	{	NextStep(2, 1, 926);
			SentProposal(926, 3, open, 14)
		}
	else	{	NextStep(2, 1)
		}
}


[new scheduled]:[if B(not 926=no) then {NextStep(2, 1, 926); SentProposal(926, 3, open, 14)} else NextStep(2, 1)]
[After]:{	if	B(not 926=no)
	then	{	NextStep(2, 1, 926);
			SentProposal(926, 3, open, 14)
		}
	else	{	NextStep(2, 1)
		}
}


[Planbase]:{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(926, 200) : 3 Jun 2015 16:13:04 GMT, priority 10)
},
{	adoptz(respondToRequest(926, 300) : 3 Jun 2015 16:13:04 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,0,926,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(926, 200) : 3 Jun 2015 16:13:04 GMT, priority 10), adoptz(respondToRequest(926, 300) : 3 Jun 2015 16:13:04 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(926, 200) : 3 Jun 2015 16:13:04 GMT, priority 10)
},
{	adoptz(respondToRequest(926, 300) : 3 Jun 2015 16:13:04 GMT, priority 10)
}


obligation to be adopted: acceptRequest(926, 200) : 3 Jun 2015 16:13:04 GMT, priority 10
obligation to be adopted: respondToRequest(926, 300) : 3 Jun 2015 16:13:04 GMT, priority 10
[Planbase]:{	NextStep(2, 1, 926);
	SentProposal(926, 3, open, 14)
}


[new scheduled]:[NextStep(2, 1, 926); SentProposal(926, 3, open, 14)]
[After]:{	NextStep(2, 1, 926);
	SentProposal(926, 3, open, 14)
}


[Planbase]:{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,0,926,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(926, 3, open, 14)
}


[new scheduled]:[SentProposal(926, 3, open, 14)]
[After]:{	SentProposal(926, 3, open, 14)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 926, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(0, 926, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 926, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(0, 926, open)
}


[new scheduled]:[ReceivedProposal(0, 926, open)]
[After]:{	ReceivedProposal(0, 926, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:


[new scheduled]:[if B(not scoreAfterExchange(926, Score)) then getScoreAfterExchange(926); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(926, Answer), if B(not scoreAfterExchange(926, Score)) then getScoreAfterExchange(926); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(926, Answer), if G(acceptRequests(926, V2)) then skip else if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(926, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 926, closed(A)))
			then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(not scoreAfterExchange(926, Score))
	then	{	getScoreAfterExchange(926)
		};
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	if	B(not scoreAfterExchange(926, Score))
	then	{	getScoreAfterExchange(926)
		};
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(926);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	getScoreAfterExchange(926);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[new scheduled]:[if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10), getScoreAfterExchange(926); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(926, Answer), getScoreAfterExchange(926); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(926, Answer)]
[After]:{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(926);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	getScoreAfterExchange(926);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(926, yes);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	GetScoreAfterExchange(926, yes);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[new scheduled]:[adoptz(respondToRequest(926, 50) : Infinite, priority 10), GetScoreAfterExchange(926, yes); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(926, Answer), GetScoreAfterExchange(926, yes); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(926, Answer)]
[After]:{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(926, yes);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	GetScoreAfterExchange(926, yes);
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


obligation to be adopted: respondToRequest(926, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(926, Score)) then getScoreAfterExchange(926); B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(926, Answer), if G(acceptRequests(926, V2)) then skip else if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10), B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(926, Answer), B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(926, Answer)]
[After]:{	if	B(not scoreAfterExchange(926, Score))
	then	{	getScoreAfterExchange(926)
		};
	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	if	G(acceptRequests(926, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 926, closed(A)))
			then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[new scheduled]:[B(scoreAfterExchange(926, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(926, Answer), if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(926, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(926, Answer)]
[After]:{	B(scoreAfterExchange(926, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(926, Answer), adoptz(respondToRequest(926, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(926, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(926, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(926, Answer)
},
{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
}


obligation to be adopted: respondToRequest(926, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
},
{	B(accept=accept);
	sendResponse(926, accept)
},
{	B(accept=accept);
	sendResponse(926, accept)
}


[new scheduled]:[if G(acceptRequests(926, V2)) then skip else if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(926, accept), B(accept=accept); sendResponse(926, accept), B(accept=accept); sendResponse(926, accept)]
[After]:{	if	G(acceptRequests(926, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 926, closed(A)))
			then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(926, accept)
},
{	B(accept=accept);
	sendResponse(926, accept)
},
{	B(accept=accept);
	sendResponse(926, accept)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(926, accept)
},
{	sendResponse(926, accept)
},
{	sendResponse(926, accept)
}


[new scheduled]:[if B(not receivedP(0, 926, closed(A))) then adoptz(respondToRequest(926, 50) : Infinite, priority 10), B(accept=accept); sendResponse(926, accept), sendResponse(926, accept), sendResponse(926, accept)]
[After]:{	if	B(not receivedP(0, 926, closed(A)))
	then	{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(926, accept)
},
{	sendResponse(926, accept)
},
{	sendResponse(926, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	sendResponse(926, accept)
},
{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
},
{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
}


[new scheduled]:[adoptz(respondToRequest(926, 50) : Infinite, priority 10), sendResponse(926, accept), @ctenv(sendResponse(926, accept),L1,0); SentResponse(accept, 926), @ctenv(sendResponse(926, accept),L1,0); SentResponse(accept, 926)]
[After]:{	adoptz(respondToRequest(926, 50) : Infinite, priority 10)
},
{	sendResponse(926, accept)
},
{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
},
{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

obligation to be adopted: respondToRequest(926, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=926, response=accepted, clock=14, time=2015-06-03 16:56:25.258]
Event processed @ctenv(functionToList(message(response, 926, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
},
{	@ctenv(functionToList(message(response, 926, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}, @ctenv(functionToList(message(response, 926, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
},
{	@ctenv(functionToList(message(response, 926, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
}


[new scheduled]:[@ctenv(sendResponse(926, accept),L1,0); SentResponse(accept, 926)]
[After]:{	@ctenv(sendResponse(926, accept),L1,0);
	SentResponse(accept, 926)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@72c33519
[CTAH] The created APLList : [response,926,accept]
[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 926)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}, if B(response=response) then ReceivedResponse(accept, 926)]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 926)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedResponse(accept, 926)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 926)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 926)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(2, 1, 926); ReceivedResponse(noresponse, 926)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(2, 1, 926);
			ReceivedResponse(noresponse, 926)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1, 926)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1, 926)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1, 926)
}


Need to wait 2 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-06-03 16:56:25.801, clock=14]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-06-03 16:56:25.801, clock=14]
org notification: Time [clock=15, time=2015-06-03 16:56:25.884]
object notification: Time [clock=15, time=2015-06-03 16:56:25.884]
object notification: Time [clock=15, time=2015-06-03 16:56:25.884]
object notification: Time [clock=15, time=2015-06-03 16:56:25.884]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[]
[After]:


a30[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] moveStepToGoal returns: [2,1]
Event processed UpdatePosition(2, 1, 14)
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1, 926)
},
{	UpdatePosition(2, 1, 14)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1, 926), UpdatePosition(2, 1, 14), UpdateClock(15)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1, 926)
},
{	UpdatePosition(2, 1, 14)
},
{	UpdateClock(15)
}


[Planbase]:{	UpdatePosition(2, 1, 14);
	NoNextStep(2, 1, 926)
}


[new scheduled]:[UpdatePosition(2, 1, 14); NoNextStep(2, 1, 926)]
[After]:{	UpdatePosition(2, 1, 14);
	NoNextStep(2, 1, 926)
}


[Planbase]:{	NoNextStep(2, 1, 926)
}


[new scheduled]:[NoNextStep(2, 1, 926)]
[After]:{	NoNextStep(2, 1, 926)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][2] [5][3] [6][3]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,3,no,no]
Event processed UpdateClock(13)
Event processed UpdateClock(14)
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(13)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, Clock)} else NextStep(5, 3), UpdateClock(13), UpdateClock(14), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(13)
},
{	UpdateClock(14)
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(5, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, 12)} else NextStep(5, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(5, 3)
		}
}


[Planbase]:{	NextStep(5, 3)
}


[new scheduled]:[NextStep(5, 3)]
[After]:{	NextStep(5, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-03 16:56:30.979, clock=15]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-03 16:56:30.979, clock=15]
object notification: Points [subject=a30, time=2015-06-03 16:56:31.0, clock=15, value=900, id=null]
a10[CTAH] paths: 1000
Need to wait 2 more seconds
a30[CTAH] moveStepToGoal returns: [5,3]
Event processed UpdatePosition(5, 3, 15)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	UpdatePosition(5, 3, 15)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 3, Clock); NoNextStep(5, 3), UpdatePosition(5, 3, 15), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	UpdatePosition(5, 3, 15)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(5, 3, 15);
	NoNextStep(5, 3)
}


[new scheduled]:[UpdatePosition(5, 3, 15); NoNextStep(5, 3)]
[After]:{	UpdatePosition(5, 3, 15);
	NoNextStep(5, 3)
}


[Planbase]:{	NoNextStep(5, 3)
}


[new scheduled]:[NoNextStep(5, 3)]
[After]:{	NoNextStep(5, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[6,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[6,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 6, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 6,3 color: neco
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][1] [3][1] [3][2] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,1,1,4963]
org notification: Proposal [id=4963, agent=a10, agent2=a20, clock=15, time=2015-06-03 16:56:34.612]
[Planbase]:{	B(clock(Clock));
	if	B(not 4963=no)
	then	{	NextStep(3, 1, 4963);
			SentProposal(4963, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 4963=no) then {NextStep(3, 1, 4963); SentProposal(4963, 1, open, Clock)} else NextStep(3, 1)]
[After]:{	B(clock(Clock));
	if	B(not 4963=no)
	then	{	NextStep(3, 1, 4963);
			SentProposal(4963, 1, open, Clock)
		}
	else	{	NextStep(3, 1)
		}
}


[Planbase]:{	if	B(not 4963=no)
	then	{	NextStep(3, 1, 4963);
			SentProposal(4963, 1, open, 15)
		}
	else	{	NextStep(3, 1)
		}
}


[new scheduled]:[if B(not 4963=no) then {NextStep(3, 1, 4963); SentProposal(4963, 1, open, 15)} else NextStep(3, 1)]
[After]:{	if	B(not 4963=no)
	then	{	NextStep(3, 1, 4963);
			SentProposal(4963, 1, open, 15)
		}
	else	{	NextStep(3, 1)
		}
}


[Planbase]:{	NextStep(3, 1, 4963);
	SentProposal(4963, 1, open, 15)
}


[new scheduled]:[NextStep(3, 1, 4963); SentProposal(4963, 1, open, 15)]
[After]:{	NextStep(3, 1, 4963);
	SentProposal(4963, 1, open, 15)
}


[Planbase]:{	SentProposal(4963, 1, open, 15)
}


[new scheduled]:[SentProposal(4963, 1, open, 15)]
[After]:{	SentProposal(4963, 1, open, 15)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(15>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


org notification: Time [clock=16, time=2015-06-03 16:56:35.887]
object notification: Time [clock=16, time=2015-06-03 16:56:35.887]
object notification: Time [clock=16, time=2015-06-03 16:56:35.887]
object notification: Time [clock=16, time=2015-06-03 16:56:35.887]
Event processed UpdateClock(16)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if B(15>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}, UpdateClock(16)]
[After]:{	if	B(15>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	UpdateClock(16)
}


Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=4963, response=accepted, clock=16, time=2015-06-03 16:56:36.678]
Event processed @ctenv(functionToList(message(response, 4963, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	@ctenv(functionToList(message(response, 4963, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}, @ctenv(functionToList(message(response, 4963, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	@ctenv(functionToList(message(response, 4963, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4f750e00
[CTAH] The created APLList : [response,4963,accept]
[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4963)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 4963)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4963)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	ReceivedResponse(accept, 4963)
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}, ReceivedResponse(accept, 4963)]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
},
{	ReceivedResponse(accept, 4963)
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(3, 1, 4963); ReceivedResponse(noresponse, 4963)}]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(3, 1, 4963);
			ReceivedResponse(noresponse, 4963)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 4963)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 1),L2,0); if B(L2=[actionresult([3,1])]) then {B(clock(Clock)); UpdatePosition(3, 1, Clock)}; NoNextStep(3, 1, 4963)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 1),L2,0);
	if	B(L2=[actionresult([3,1])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 1, Clock)
		};
	NoNextStep(3, 1, 4963)
}


Need to wait 2 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=1], time=2015-06-03 16:56:37.072, clock=16]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=1], time=2015-06-03 16:56:37.072, clock=16]
a10[CTAH] moveStepToGoal returns: [3,1]
Event processed UpdatePosition(3, 1, 16)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 4963)
},
{	UpdatePosition(3, 1, 16)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 1, Clock); NoNextStep(3, 1, 4963), UpdatePosition(3, 1, 16)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 1, Clock);
	NoNextStep(3, 1, 4963)
},
{	UpdatePosition(3, 1, 16)
}


[Planbase]:{	UpdatePosition(3, 1, 16);
	NoNextStep(3, 1, 4963)
}


[new scheduled]:[UpdatePosition(3, 1, 16); NoNextStep(3, 1, 4963)]
[After]:{	UpdatePosition(3, 1, 16);
	NoNextStep(3, 1, 4963)
}


[Planbase]:{	NoNextStep(3, 1, 4963)
}


[new scheduled]:[NoNextStep(3, 1, 4963)]
[After]:{	NoNextStep(3, 1, 4963)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
org notification: Time [clock=17, time=2015-06-03 16:56:45.889]
object notification: Time [clock=17, time=2015-06-03 16:56:45.889]
object notification: Time [clock=17, time=2015-06-03 16:56:45.889]
object notification: Time [clock=17, time=2015-06-03 16:56:45.889]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][1] [4][1] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,1,2,6144]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=6144, agent=a10, agent2=a30, clock=17, time=2015-06-03 16:56:52.792]
object notification: Obligation [subject=a30, obligation=[acceptRequest(6144)], sanction=[reduce(a30, 200)], deadline=22, time=2015-06-03 16:56:52.795, clock=17]
object notification: Obligation [subject=a30, obligation=[respondToRequest(6144)], sanction=[reduce(a30, 300)], deadline=22, time=2015-06-03 16:56:52.798, clock=17]
Event processed UpdateClock(17)
[Planbase]:{	B(clock(Clock));
	if	B(not 6144=no)
	then	{	NextStep(4, 1, 6144);
			SentProposal(6144, 2, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(17)
}


[new scheduled]:[B(clock(Clock)); if B(not 6144=no) then {NextStep(4, 1, 6144); SentProposal(6144, 2, open, Clock)} else NextStep(4, 1), UpdateClock(17)]
[After]:{	B(clock(Clock));
	if	B(not 6144=no)
	then	{	NextStep(4, 1, 6144);
			SentProposal(6144, 2, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(not 6144=no)
	then	{	NextStep(4, 1, 6144);
			SentProposal(6144, 2, open, 16)
		}
	else	{	NextStep(4, 1)
		}
}


[new scheduled]:[if B(not 6144=no) then {NextStep(4, 1, 6144); SentProposal(6144, 2, open, 16)} else NextStep(4, 1)]
[After]:{	if	B(not 6144=no)
	then	{	NextStep(4, 1, 6144);
			SentProposal(6144, 2, open, 16)
		}
	else	{	NextStep(4, 1)
		}
}


[Planbase]:{	NextStep(4, 1, 6144);
	SentProposal(6144, 2, open, 16)
}


[new scheduled]:[NextStep(4, 1, 6144); SentProposal(6144, 2, open, 16)]
[After]:{	NextStep(4, 1, 6144);
	SentProposal(6144, 2, open, 16)
}


[Planbase]:{	SentProposal(6144, 2, open, 16)
}


[new scheduled]:[SentProposal(6144, 2, open, 16)]
[After]:{	SentProposal(6144, 2, open, 16)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


org notification: Time [clock=18, time=2015-06-03 16:56:55.894]
object notification: Time [clock=18, time=2015-06-03 16:56:55.894]
object notification: Time [clock=18, time=2015-06-03 16:56:55.894]
object notification: Time [clock=18, time=2015-06-03 16:56:55.894]
Event processed UpdateClock(18)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	UpdateClock(18)
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}, UpdateClock(18)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	UpdateClock(18)
}


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [5][3] [6][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,3,3,4914]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=4914, agent=a30, agent2=a40, clock=18, time=2015-06-03 16:56:56.655]
object notification: Obligation [subject=a40, obligation=[acceptRequest(4914)], sanction=[reduce(a40, 200)], deadline=23, time=2015-06-03 16:56:56.657, clock=18]
object notification: Obligation [subject=a40, obligation=[respondToRequest(4914)], sanction=[reduce(a40, 300)], deadline=23, time=2015-06-03 16:56:56.659, clock=18]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(17)
Event processed @ctenv(functionToList(proposal(proposal, 0, 6144, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(6144), 22, reduce(a30, 200))
[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


Event processed adoptObligation(respondToRequest(6144), 22, reduce(a30, 300))
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(not 4914=no)
	then	{	NextStep(6, 3, 4914);
			SentProposal(4914, 3, open, Clock)
		}
	else	{	NextStep(6, 3)
		}
},
{	UpdateClock(16)
},
{	UpdateClock(17)
},
{	@ctenv(functionToList(proposal(proposal, 0, 6144, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6144), 22, reduce(a30, 200))
},
{	adoptObligation(respondToRequest(6144), 22, reduce(a30, 300))
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not 4914=no) then {NextStep(6, 3, 4914); SentProposal(4914, 3, open, Clock)} else NextStep(6, 3), UpdateClock(16), UpdateClock(17), @ctenv(functionToList(proposal(proposal, 0, 6144, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(6144), 22, reduce(a30, 200)), adoptObligation(respondToRequest(6144), 22, reduce(a30, 300)), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not 4914=no)
	then	{	NextStep(6, 3, 4914);
			SentProposal(4914, 3, open, Clock)
		}
	else	{	NextStep(6, 3)
		}
},
{	UpdateClock(16)
},
{	UpdateClock(17)
},
{	@ctenv(functionToList(proposal(proposal, 0, 6144, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6144), 22, reduce(a30, 200))
},
{	adoptObligation(respondToRequest(6144), 22, reduce(a30, 300))
},
{	UpdateClock(18)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@9059d34
[CTAH] The created APLList : [proposal,0,6144,open]
Event processed @ctenv(functionToList(proposal(proposal, 2, 4914, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(4914), 23, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(4914), 23, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 4914, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(4914), 23, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(4914), 23, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 2, 4914, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(4914), 23, reduce(a40, 200)), adoptObligation(respondToRequest(4914), 23, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 2, 4914, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(4914), 23, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(4914), 23, reduce(a40, 300))
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1211ec32
[CTAH] The created APLList : [proposal,2,4914,open]
[Planbase]:{	if	B(not 4914=no)
	then	{	NextStep(6, 3, 4914);
			SentProposal(4914, 3, open, 15)
		}
	else	{	NextStep(6, 3)
		}
},
{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6144, 200) : 3 Jun 2015 16:13:36 GMT, priority 10)
},
{	adoptz(respondToRequest(6144, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)
}


[new scheduled]:[if B(not 4914=no) then {NextStep(6, 3, 4914); SentProposal(4914, 3, open, 15)} else NextStep(6, 3), if B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(6144, 200) : 3 Jun 2015 16:13:36 GMT, priority 10), adoptz(respondToRequest(6144, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)]
[After]:{	if	B(not 4914=no)
	then	{	NextStep(6, 3, 4914);
			SentProposal(4914, 3, open, 15)
		}
	else	{	NextStep(6, 3)
		}
},
{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6144, 200) : 3 Jun 2015 16:13:36 GMT, priority 10)
},
{	adoptz(respondToRequest(6144, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)
}


obligation to be adopted: acceptRequest(6144, 200) : 3 Jun 2015 16:13:36 GMT, priority 10
obligation to be adopted: respondToRequest(6144, 300) : 3 Jun 2015 16:13:36 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(4914, 200) : 3 Jun 2015 16:13:36 GMT, priority 10)
},
{	adoptz(respondToRequest(4914, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(4914, 200) : 3 Jun 2015 16:13:36 GMT, priority 10), adoptz(respondToRequest(4914, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(4914, 200) : 3 Jun 2015 16:13:36 GMT, priority 10)
},
{	adoptz(respondToRequest(4914, 300) : 3 Jun 2015 16:13:36 GMT, priority 10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


obligation to be adopted: acceptRequest(4914, 200) : 3 Jun 2015 16:13:36 GMT, priority 10
obligation to be adopted: respondToRequest(4914, 300) : 3 Jun 2015 16:13:36 GMT, priority 10
[Planbase]:{	NextStep(6, 3, 4914);
	SentProposal(4914, 3, open, 15)
},
{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(6, 3, 4914); SentProposal(4914, 3, open, 15), if B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(6, 3, 4914);
	SentProposal(4914, 3, open, 15)
},
{	if	B([actionresult([proposal,0,6144,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,2,4914,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	SentProposal(4914, 3, open, 15)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 6144, open)
		}
}


[new scheduled]:[SentProposal(4914, 3, open, 15), if B(proposal=proposal) then ReceivedProposal(0, 6144, open)]
[After]:{	SentProposal(4914, 3, open, 15)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 6144, open)
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 4914, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(2, 4914, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 4914, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(0, 6144, open)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedProposal(0, 6144, open)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedProposal(0, 6144, open)
}


[Planbase]:{	ReceivedProposal(2, 4914, open)
}


[new scheduled]:[ReceivedProposal(2, 4914, open)]
[After]:{	ReceivedProposal(2, 4914, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
}


[new scheduled]:[if B(not scoreAfterExchange(6144, Score)) then getScoreAfterExchange(6144); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6144, Answer), if B(not scoreAfterExchange(6144, Score)) then getScoreAfterExchange(6144); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6144, Answer), if G(acceptRequests(6144, V2)) then skip else if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}]
[After]:{	if	G(acceptRequests(6144, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6144, closed(A)))
			then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	if	B(not scoreAfterExchange(6144, Score))
	then	{	getScoreAfterExchange(6144)
		};
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	if	B(not scoreAfterExchange(6144, Score))
	then	{	getScoreAfterExchange(6144)
		};
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[Planbase]:


[new scheduled]:[if B(not scoreAfterExchange(4914, Score)) then getScoreAfterExchange(4914); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(4914, Answer), if B(not scoreAfterExchange(4914, Score)) then getScoreAfterExchange(4914); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4914, Answer), if G(acceptRequests(4914, V2)) then skip else if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(4914, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 4914, closed(A)))
			then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(not scoreAfterExchange(4914, Score))
	then	{	getScoreAfterExchange(4914)
		};
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	if	B(not scoreAfterExchange(4914, Score))
	then	{	getScoreAfterExchange(4914)
		};
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	getScoreAfterExchange(6144);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	getScoreAfterExchange(6144);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[new scheduled]:[if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), if B(18>15+7) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, getScoreAfterExchange(6144); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6144, Answer), getScoreAfterExchange(6144); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6144, Answer)]
[After]:{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	getScoreAfterExchange(6144);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	getScoreAfterExchange(6144);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[Planbase]:{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(4914);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	getScoreAfterExchange(4914);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[new scheduled]:[if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10), getScoreAfterExchange(4914); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4914, Answer), getScoreAfterExchange(4914); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(4914, Answer)]
[After]:{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(4914);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	getScoreAfterExchange(4914);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(6144, yes);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	GetScoreAfterExchange(6144, yes);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(6144, 50) : Infinite, priority 10), GetScoreAfterExchange(6144, yes); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6144, Answer), GetScoreAfterExchange(6144, yes); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6144, Answer)]
[After]:{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(6144, yes);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	GetScoreAfterExchange(6144, yes);
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


obligation to be adopted: respondToRequest(6144, 50) : Infinite, priority 10
[Planbase]:{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(4914, yes);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	GetScoreAfterExchange(4914, yes);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[new scheduled]:[adoptz(respondToRequest(4914, 50) : Infinite, priority 10), GetScoreAfterExchange(4914, yes); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4914, Answer), GetScoreAfterExchange(4914, yes); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(4914, Answer)]
[After]:{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(4914, yes);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	GetScoreAfterExchange(4914, yes);
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(6144, Score)) then getScoreAfterExchange(6144); B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6144, Answer), if G(acceptRequests(6144, V2)) then skip else if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6144, Answer), B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6144, Answer)]
[After]:{	if	B(not scoreAfterExchange(6144, Score))
	then	{	getScoreAfterExchange(6144)
		};
	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	if	G(acceptRequests(6144, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6144, closed(A)))
			then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
				}
		}
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


obligation to be adopted: respondToRequest(4914, 50) : Infinite, priority 10
[Planbase]:{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(4914, Score)) then getScoreAfterExchange(4914); B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(4914, Answer), if G(acceptRequests(4914, V2)) then skip else if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10), B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4914, Answer), B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(4914, Answer)]
[After]:{	if	B(not scoreAfterExchange(4914, Score))
	then	{	getScoreAfterExchange(4914)
		};
	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	if	G(acceptRequests(4914, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 4914, closed(A)))
			then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[new scheduled]:[B(scoreAfterExchange(6144, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6144, Answer), if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), if B(18>15+7) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6144, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6144, Answer)]
[After]:{	B(scoreAfterExchange(6144, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
}


[Planbase]:{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[new scheduled]:[B(scoreAfterExchange(4914, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(4914, Answer), if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4914, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(4914, Answer)]
[After]:{	B(scoreAfterExchange(4914, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
}


[new scheduled]:[findNextStep(neco, 700), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6144, Answer), adoptz(respondToRequest(6144, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(6144, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(6144, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, Answer)
},
{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	findNextStep(neco, 700)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
}


obligation to be adopted: respondToRequest(6144, 50) : Infinite, priority 10
[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(4914, Answer), adoptz(respondToRequest(4914, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(4914, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(4914, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, Answer)
},
{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


obligation to be adopted: respondToRequest(4914, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(accept=accept);
	sendResponse(6144, accept)
},
{	B(accept=accept);
	sendResponse(6144, accept)
}


[new scheduled]:[if G(acceptRequests(6144, V2)) then skip else if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(6144, accept), B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, B(accept=accept); sendResponse(6144, accept), B(accept=accept); sendResponse(6144, accept)]
[After]:{	if	G(acceptRequests(6144, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6144, closed(A)))
			then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6144, accept)
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	B(accept=accept);
	sendResponse(6144, accept)
},
{	B(accept=accept);
	sendResponse(6144, accept)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
},
{	B(accept=accept);
	sendResponse(4914, accept)
},
{	B(accept=accept);
	sendResponse(4914, accept)
}


[new scheduled]:[if G(acceptRequests(4914, V2)) then skip else if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(4914, accept), B(accept=accept); sendResponse(4914, accept), B(accept=accept); sendResponse(4914, accept)]
[After]:{	if	G(acceptRequests(4914, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 4914, closed(A)))
			then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4914, accept)
},
{	B(accept=accept);
	sendResponse(4914, accept)
},
{	B(accept=accept);
	sendResponse(4914, accept)
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6144, accept)
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	sendResponse(6144, accept)
},
{	sendResponse(6144, accept)
}


[new scheduled]:[if B(not receivedP(0, 6144, closed(A))) then adoptz(respondToRequest(6144, 50) : Infinite, priority 10), B(accept=accept); sendResponse(6144, accept), if B(18>15+7) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, sendResponse(6144, accept), sendResponse(6144, accept)]
[After]:{	if	B(not receivedP(0, 6144, closed(A)))
	then	{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6144, accept)
},
{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	sendResponse(6144, accept)
},
{	sendResponse(6144, accept)
}


[Planbase]:{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(4914, accept)
},
{	sendResponse(4914, accept)
},
{	sendResponse(4914, accept)
}


[new scheduled]:[if B(not receivedP(2, 4914, closed(A))) then adoptz(respondToRequest(4914, 50) : Infinite, priority 10), B(accept=accept); sendResponse(4914, accept), sendResponse(4914, accept), sendResponse(4914, accept)]
[After]:{	if	B(not receivedP(2, 4914, closed(A)))
	then	{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(4914, accept)
},
{	sendResponse(4914, accept)
},
{	sendResponse(4914, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	sendResponse(6144, accept)
},
{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
},
{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(respondToRequest(6144, 50) : Infinite, priority 10), sendResponse(6144, accept), @ctenv(sendResponse(6144, accept),L1,0); SentResponse(accept, 6144), @ctenv(sendResponse(6144, accept),L1,0); SentResponse(accept, 6144)]
[After]:{	adoptz(respondToRequest(6144, 50) : Infinite, priority 10)
},
{	sendResponse(6144, accept)
},
{	findNextStep(neco, 700)
},
{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
},
{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 0.

obligation to be adopted: respondToRequest(6144, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=6144, response=accepted, clock=18, time=2015-06-03 16:56:58.034]
Event processed @ctenv(functionToList(message(response, 6144, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	sendResponse(4914, accept)
},
{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
},
{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
}


[new scheduled]:[adoptz(respondToRequest(4914, 50) : Infinite, priority 10), sendResponse(4914, accept), @ctenv(sendResponse(4914, accept),L1,0); SentResponse(accept, 4914), @ctenv(sendResponse(4914, accept),L1,0); SentResponse(accept, 4914)]
[After]:{	adoptz(respondToRequest(4914, 50) : Infinite, priority 10)
},
{	sendResponse(4914, accept)
},
{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
},
{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	@ctenv(functionToList(message(response, 6144, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}, @ctenv(functionToList(message(response, 6144, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	@ctenv(functionToList(message(response, 6144, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

obligation to be adopted: respondToRequest(4914, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=4914, response=accepted, clock=18, time=2015-06-03 16:56:58.108]
[CTAH] Array of Terms: [Lapapl.data.Term;@412e63a3
[CTAH] The created APLList : [response,6144,accept]
[Planbase]:{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
}


[new scheduled]:[@ctenv(sendResponse(6144, accept),L1,0); SentResponse(accept, 6144), B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}]
[After]:{	@ctenv(sendResponse(6144, accept),L1,0);
	SentResponse(accept, 6144)
},
{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
}


[Planbase]:{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
}


[new scheduled]:[@ctenv(sendResponse(4914, accept),L1,0); SentResponse(accept, 4914)]
[After]:{	@ctenv(sendResponse(4914, accept),L1,0);
	SentResponse(accept, 4914)
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}, if B(response=response) then ReceivedResponse(accept, 6144)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6144)
		}
}


Event processed @ctenv(functionToList(message(response, 4914, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	@ctenv(functionToList(message(response, 4914, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, @ctenv(functionToList(message(response, 4914, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	@ctenv(functionToList(message(response, 4914, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@509d488b
[CTAH] The created APLList : [response,4914,accept]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedResponse(accept, 6144)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 6144)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 6144)
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4914)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 4914)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4914)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	ReceivedResponse(accept, 4914)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>15+Wait) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}, ReceivedResponse(accept, 4914)]
[After]:{	B(timetowait(Wait));
	if	B(18>15+Wait)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
},
{	ReceivedResponse(accept, 4914)
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(4, 1, 6144); ReceivedResponse(noresponse, 6144)}]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(4, 1, 6144);
			ReceivedResponse(noresponse, 6144)
		}
}


[Planbase]:{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
}


[new scheduled]:[if B(18>15+7) then {NoNextStep(6, 3, 4914); ReceivedResponse(noresponse, 4914)}]
[After]:{	if	B(18>15+7)
	then	{	NoNextStep(6, 3, 4914);
			ReceivedResponse(noresponse, 4914)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1, 6144)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 1),L2,0); if B(L2=[actionresult([4,1])]) then {B(clock(Clock)); UpdatePosition(4, 1, Clock)}; NoNextStep(4, 1, 6144)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1, 6144)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 3),L2,0);
	if	B(L2=[actionresult([6,3])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 3, Clock)
		};
	NoNextStep(6, 3, 4914)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 3),L2,0); if B(L2=[actionresult([6,3])]) then {B(clock(Clock)); UpdatePosition(6, 3, Clock)}; NoNextStep(6, 3, 4914)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 3),L2,0);
	if	B(L2=[actionresult([6,3])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 3, Clock)
		};
	NoNextStep(6, 3, 4914)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-03 16:56:58.993, clock=18]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=1], time=2015-06-03 16:56:58.993, clock=18]
Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=3], time=2015-06-03 16:56:59.017, clock=18]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=3], time=2015-06-03 16:56:59.017, clock=18]
a10[CTAH] moveStepToGoal returns: [4,1]
Event processed UpdatePosition(4, 1, 18)
a30[CTAH] moveStepToGoal returns: [6,3]
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1, 6144)
},
{	UpdatePosition(4, 1, 18)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 1, Clock); NoNextStep(4, 1, 6144), UpdatePosition(4, 1, 18)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1, 6144)
},
{	UpdatePosition(4, 1, 18)
}


Event processed UpdatePosition(6, 3, 18)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 3, Clock);
	NoNextStep(6, 3, 4914)
},
{	UpdatePosition(6, 3, 18)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 3, Clock); NoNextStep(6, 3, 4914), UpdatePosition(6, 3, 18)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 3, Clock);
	NoNextStep(6, 3, 4914)
},
{	UpdatePosition(6, 3, 18)
}


[Planbase]:{	UpdatePosition(4, 1, 18);
	NoNextStep(4, 1, 6144)
}


[new scheduled]:[UpdatePosition(4, 1, 18); NoNextStep(4, 1, 6144)]
[After]:{	UpdatePosition(4, 1, 18);
	NoNextStep(4, 1, 6144)
}


[Planbase]:{	UpdatePosition(6, 3, 18);
	NoNextStep(6, 3, 4914)
}


[new scheduled]:[UpdatePosition(6, 3, 18); NoNextStep(6, 3, 4914)]
[After]:{	UpdatePosition(6, 3, 18);
	NoNextStep(6, 3, 4914)
}


[Planbase]:{	NoNextStep(4, 1, 6144)
}


[new scheduled]:[NoNextStep(4, 1, 6144)]
[After]:{	NoNextStep(4, 1, 6144)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
org notification: Time [clock=19, time=2015-06-03 16:57:05.897]
object notification: Time [clock=19, time=2015-06-03 16:57:05.897]
object notification: Time [clock=19, time=2015-06-03 16:57:05.897]
object notification: Time [clock=19, time=2015-06-03 16:57:05.897]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] paths: 1000
Need to wait 2 more seconds
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][1] [4][2] [5][2]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,2,3,6380]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=6380, agent=a10, agent2=a40, clock=19, time=2015-06-03 16:57:09.839]
object notification: Obligation [subject=a40, obligation=[acceptRequest(6380)], sanction=[reduce(a40, 200)], deadline=24, time=2015-06-03 16:57:09.843, clock=19]
object notification: Obligation [subject=a40, obligation=[respondToRequest(6380)], sanction=[reduce(a40, 300)], deadline=24, time=2015-06-03 16:57:09.846, clock=19]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
[Planbase]:{	B(clock(Clock));
	if	B(not 6380=no)
	then	{	NextStep(4, 2, 6380);
			SentProposal(6380, 3, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(19)
}


[new scheduled]:[B(clock(Clock)); if B(not 6380=no) then {NextStep(4, 2, 6380); SentProposal(6380, 3, open, Clock)} else NextStep(4, 2), UpdateClock(19)]
[After]:{	B(clock(Clock));
	if	B(not 6380=no)
	then	{	NextStep(4, 2, 6380);
			SentProposal(6380, 3, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	UpdateClock(19)
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 6380, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(6380), 24, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(6380), 24, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 0, 6380, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6380), 24, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(6380), 24, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 0, 6380, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(6380), 24, reduce(a40, 200)), adoptObligation(respondToRequest(6380), 24, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 0, 6380, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6380), 24, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(6380), 24, reduce(a40, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@246a4e38
[CTAH] The created APLList : [proposal,0,6380,open]
[Planbase]:{	if	B(not 6380=no)
	then	{	NextStep(4, 2, 6380);
			SentProposal(6380, 3, open, 18)
		}
	else	{	NextStep(4, 2)
		}
}


[new scheduled]:[if B(not 6380=no) then {NextStep(4, 2, 6380); SentProposal(6380, 3, open, 18)} else NextStep(4, 2)]
[After]:{	if	B(not 6380=no)
	then	{	NextStep(4, 2, 6380);
			SentProposal(6380, 3, open, 18)
		}
	else	{	NextStep(4, 2)
		}
}


[Planbase]:{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6380, 200) : 3 Jun 2015 16:13:49 GMT, priority 10)
},
{	adoptz(respondToRequest(6380, 300) : 3 Jun 2015 16:13:49 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(6380, 200) : 3 Jun 2015 16:13:49 GMT, priority 10), adoptz(respondToRequest(6380, 300) : 3 Jun 2015 16:13:49 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6380, 200) : 3 Jun 2015 16:13:49 GMT, priority 10)
},
{	adoptz(respondToRequest(6380, 300) : 3 Jun 2015 16:13:49 GMT, priority 10)
}


obligation to be adopted: acceptRequest(6380, 200) : 3 Jun 2015 16:13:49 GMT, priority 10
obligation to be adopted: respondToRequest(6380, 300) : 3 Jun 2015 16:13:49 GMT, priority 10
[Planbase]:{	NextStep(4, 2, 6380);
	SentProposal(6380, 3, open, 18)
}


[new scheduled]:[NextStep(4, 2, 6380); SentProposal(6380, 3, open, 18)]
[After]:{	NextStep(4, 2, 6380);
	SentProposal(6380, 3, open, 18)
}


[Planbase]:{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,0,6380,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(6380, 3, open, 18)
}


[new scheduled]:[SentProposal(6380, 3, open, 18)]
[After]:{	SentProposal(6380, 3, open, 18)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 6380, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(0, 6380, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 6380, open)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(0, 6380, open)
}


[new scheduled]:[ReceivedProposal(0, 6380, open)]
[After]:{	ReceivedProposal(0, 6380, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>18+Wait) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:


[new scheduled]:[if B(not scoreAfterExchange(6380, Score)) then getScoreAfterExchange(6380); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6380, Answer), if B(not scoreAfterExchange(6380, Score)) then getScoreAfterExchange(6380); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6380, Answer), if G(acceptRequests(6380, V2)) then skip else if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(6380, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6380, closed(A)))
			then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(not scoreAfterExchange(6380, Score))
	then	{	getScoreAfterExchange(6380)
		};
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	if	B(not scoreAfterExchange(6380, Score))
	then	{	getScoreAfterExchange(6380)
		};
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[Planbase]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[if B(19>18+7) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(6380);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	getScoreAfterExchange(6380);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[new scheduled]:[if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10), getScoreAfterExchange(6380); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6380, Answer), getScoreAfterExchange(6380); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6380, Answer)]
[After]:{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(6380);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	getScoreAfterExchange(6380);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(6380, yes);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	GetScoreAfterExchange(6380, yes);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[new scheduled]:[adoptz(respondToRequest(6380, 50) : Infinite, priority 10), GetScoreAfterExchange(6380, yes); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6380, Answer), GetScoreAfterExchange(6380, yes); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6380, Answer)]
[After]:{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(6380, yes);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	GetScoreAfterExchange(6380, yes);
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


obligation to be adopted: respondToRequest(6380, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>18+Wait) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(6380, Score)) then getScoreAfterExchange(6380); B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6380, Answer), if G(acceptRequests(6380, V2)) then skip else if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10), B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6380, Answer), B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6380, Answer)]
[After]:{	if	B(not scoreAfterExchange(6380, Score))
	then	{	getScoreAfterExchange(6380)
		};
	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	if	G(acceptRequests(6380, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6380, closed(A)))
			then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[Planbase]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[if B(19>18+7) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[new scheduled]:[B(scoreAfterExchange(6380, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6380, Answer), if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6380, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6380, Answer)]
[After]:{	B(scoreAfterExchange(6380, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6380, Answer), adoptz(respondToRequest(6380, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(6380, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(6380, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, Answer)
},
{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
}


obligation to be adopted: respondToRequest(6380, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>18+Wait) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
},
{	B(accept=accept);
	sendResponse(6380, accept)
},
{	B(accept=accept);
	sendResponse(6380, accept)
}


[new scheduled]:[if G(acceptRequests(6380, V2)) then skip else if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(6380, accept), B(accept=accept); sendResponse(6380, accept), B(accept=accept); sendResponse(6380, accept)]
[After]:{	if	G(acceptRequests(6380, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(0, 6380, closed(A)))
			then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6380, accept)
},
{	B(accept=accept);
	sendResponse(6380, accept)
},
{	B(accept=accept);
	sendResponse(6380, accept)
}


[Planbase]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[if B(19>18+7) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6380, accept)
},
{	sendResponse(6380, accept)
},
{	sendResponse(6380, accept)
}


[new scheduled]:[if B(not receivedP(0, 6380, closed(A))) then adoptz(respondToRequest(6380, 50) : Infinite, priority 10), B(accept=accept); sendResponse(6380, accept), sendResponse(6380, accept), sendResponse(6380, accept)]
[After]:{	if	B(not receivedP(0, 6380, closed(A)))
	then	{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6380, accept)
},
{	sendResponse(6380, accept)
},
{	sendResponse(6380, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	sendResponse(6380, accept)
},
{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
},
{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
}


[new scheduled]:[adoptz(respondToRequest(6380, 50) : Infinite, priority 10), sendResponse(6380, accept), @ctenv(sendResponse(6380, accept),L1,0); SentResponse(accept, 6380), @ctenv(sendResponse(6380, accept),L1,0); SentResponse(accept, 6380)]
[After]:{	adoptz(respondToRequest(6380, 50) : Infinite, priority 10)
},
{	sendResponse(6380, accept)
},
{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
},
{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

obligation to be adopted: respondToRequest(6380, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=6380, response=accepted, clock=19, time=2015-06-03 16:57:10.85]
Event processed @ctenv(functionToList(message(response, 6380, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
},
{	@ctenv(functionToList(message(response, 6380, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>18+Wait) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}, @ctenv(functionToList(message(response, 6380, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
},
{	@ctenv(functionToList(message(response, 6380, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
}


[new scheduled]:[@ctenv(sendResponse(6380, accept),L1,0); SentResponse(accept, 6380)]
[After]:{	@ctenv(sendResponse(6380, accept),L1,0);
	SentResponse(accept, 6380)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@358853e9
[CTAH] The created APLList : [response,6380,accept]
[Planbase]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6380)
		}
}


[new scheduled]:[if B(19>18+7) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}, if B(response=response) then ReceivedResponse(accept, 6380)]
[After]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6380)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedResponse(accept, 6380)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 6380)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 6380)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>18+Wait) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	B(timetowait(Wait));
	if	B(19>18+Wait)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[new scheduled]:[if B(19>18+7) then {NoNextStep(4, 2, 6380); ReceivedResponse(noresponse, 6380)}]
[After]:{	if	B(19>18+7)
	then	{	NoNextStep(4, 2, 6380);
			ReceivedResponse(noresponse, 6380)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 6380)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2, 6380)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 6380)
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-03 16:57:11.251, clock=19]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-03 16:57:11.251, clock=19]
a10[CTAH] moveStepToGoal returns: [4,2]
Event processed UpdatePosition(4, 2, 19)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2, 6380)
},
{	UpdatePosition(4, 2, 19)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 2, Clock); NoNextStep(4, 2, 6380), UpdatePosition(4, 2, 19)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2, 6380)
},
{	UpdatePosition(4, 2, 19)
}


[Planbase]:{	UpdatePosition(4, 2, 19);
	NoNextStep(4, 2, 6380)
}


[new scheduled]:[UpdatePosition(4, 2, 19); NoNextStep(4, 2, 6380)]
[After]:{	UpdatePosition(4, 2, 19);
	NoNextStep(4, 2, 6380)
}


[Planbase]:{	NoNextStep(4, 2, 6380)
}


[new scheduled]:[NoNextStep(4, 2, 6380)]
[After]:{	NoNextStep(4, 2, 6380)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 5,2 color: neco
org notification: Time [clock=20, time=2015-06-03 16:57:15.899]
object notification: Time [clock=20, time=2015-06-03 16:57:15.899]
object notification: Time [clock=20, time=2015-06-03 16:57:15.899]
object notification: Time [clock=20, time=2015-06-03 16:57:15.899]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] paths: 1000
Need to wait 3 more seconds
object notification: Time [clock=21, time=2015-06-03 16:57:25.901]
org notification: Time [clock=21, time=2015-06-03 16:57:25.901]
object notification: Time [clock=21, time=2015-06-03 16:57:25.901]
object notification: Time [clock=21, time=2015-06-03 16:57:25.901]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] path: 0
a10[CTAH] path: Path: [4][2] [5][2]

a10[CTAH] moveStepToGoalTest returns I have chip: [5,2,no,no]
Event processed UpdateClock(20)
Event processed UpdateClock(21)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(20)
},
{	UpdateClock(21)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, Clock)} else NextStep(5, 2), UpdateClock(20), UpdateClock(21)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(20)
},
{	UpdateClock(21)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 19)
		}
	else	{	NextStep(5, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, 19)} else NextStep(5, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 19)
		}
	else	{	NextStep(5, 2)
		}
}


[Planbase]:{	NextStep(5, 2)
}


[new scheduled]:[NextStep(5, 2)]
[After]:{	NextStep(5, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


Need to wait 3 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:57:26.355, clock=21]
org notification: Position [subject=a10, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:57:26.355, clock=21]
object notification: Points [subject=a10, time=2015-06-03 16:57:26.369, clock=21, value=900, id=null]
a10[CTAH] moveStepToGoal returns: [5,2]
Event processed UpdatePosition(5, 2, 21)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 21)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 2, Clock); NoNextStep(5, 2), UpdatePosition(5, 2, 21), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 21)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(5, 2, 21);
	NoNextStep(5, 2)
}


[new scheduled]:[UpdatePosition(5, 2, 21); NoNextStep(5, 2)]
[After]:{	UpdatePosition(5, 2, 21);
	NoNextStep(5, 2)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-06-03 16:57:35.903]
object notification: Time [clock=22, time=2015-06-03 16:57:35.903]
object notification: Time [clock=22, time=2015-06-03 16:57:35.903]
org notification: Time [clock=22, time=2015-06-03 16:57:35.903]
object notification: Points [subject=a40, time=2015-06-03 16:57:35.93, clock=22, value=900, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdatePoints(900)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
},
{	UpdatePoints(900)
}


[new scheduled]:[UpdateClock(22), UpdatePoints(900)]
[After]:{	UpdateClock(22)
},
{	UpdatePoints(900)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1bce0605
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@77f952c3
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@3be74ddf
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:5,C:2).
Chips: { chips  'blue':0 'white':6 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:6,C:3).
Chips: { chips  'blue':6 'white':0 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:5,C:4).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':5 }.
Score: 900.
Team: -1.

[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[CTAH] Array of Terms: [Lapapl.data.Term;@44a34b38
[CTAH] The created APLList : [game_ended]
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1d806174
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@779209f8
[CTAH] The created APLList : [game_ended]
[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=23, time=2015-06-03 16:57:45.906]
object notification: Time [clock=23, time=2015-06-03 16:57:45.906]
object notification: Time [clock=23, time=2015-06-03 16:57:45.906]
object notification: Time [clock=23, time=2015-06-03 16:57:45.906]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-03 16:57:55.909]
object notification: Time [clock=24, time=2015-06-03 16:57:55.909]
org notification: Time [clock=24, time=2015-06-03 16:57:55.909]
object notification: Time [clock=24, time=2015-06-03 16:57:55.909]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=25, time=2015-06-03 16:58:05.911]
object notification: Time [clock=25, time=2015-06-03 16:58:05.911]
object notification: Time [clock=25, time=2015-06-03 16:58:05.911]
object notification: Time [clock=25, time=2015-06-03 16:58:05.911]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


