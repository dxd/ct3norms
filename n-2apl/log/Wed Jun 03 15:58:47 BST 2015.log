2015-06-03 15:58:49,311 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~15.58-gigaspaces-service-192.168.0.40-63265.log
-------------------------last log tuples start--------------------------------
Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-06-03 15:54:33.165, clock=0]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 300)], clock=2, time=2015-06-03 15:54:33.328]
Time [clock=17, time=2015-06-03 15:57:01.846]
Prohibition [subject=a30, prohibition=[color(brown, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-03 15:54:39.826]
Goal [id=null, cell=Cell [x=3, y=4], agent=null, time=2015-06-03 15:54:33.212, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:54:33.146, clock=0]
Proposal [id=321, agent=a40, agent2=a20, clock=12, time=2015-06-03 15:56:18.797]
Time [clock=11, time=2015-06-03 15:56:01.832]
Group [name=g, ra=a10, clock=0, time=2015-06-03 15:54:33.294]
Position [subject=a10, id=null, cell=Cell [x=2, y=3], time=2015-06-03 15:56:46.492, clock=15]
Obligation [subject=a10, obligation=[acceptRequest(7834)], sanction=[reduce(a10, 200)], deadline=15, time=2015-06-03 15:55:52.356, clock=10]
Proposal [id=5747, agent=a10, agent2=a20, clock=12, time=2015-06-03 15:56:15.661]
Position [subject=a10, id=null, cell=Cell [x=3, y=3], time=2015-06-03 15:55:55.122, clock=10]
Time [clock=9, time=2015-06-03 15:55:41.828]
Position [subject=a10, id=null, cell=Cell [x=3, y=3], time=2015-06-03 15:55:58.885, clock=10]
Obligation [subject=a40, obligation=[color(blue, a40)], sanction=[reduce(a40, 100)], deadline=17, time=2015-06-03 15:54:39.327, clock=2]
Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 15:54:33.127, clock=0]
Time [clock=16, time=2015-06-03 15:56:51.843]
Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 15:54:39.058, clock=2]
Time [clock=18, time=2015-06-03 15:57:11.848]
Obligation [subject=a20, obligation=[respondToRequest(5747)], sanction=[reduce(a20, 300)], deadline=17, time=2015-06-03 15:56:15.666, clock=12]
Time [clock=20, time=2015-06-03 15:57:31.854]
Proposal [id=5494, agent=a20, agent2=a30, clock=10, time=2015-06-03 15:56:01.096]
Proposal [id=7834, agent=a40, agent2=a10, clock=10, time=2015-06-03 15:55:52.34]
Time [clock=5, time=2015-06-03 15:55:01.814]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-03 15:54:33.338]
Proposal [id=9762, agent=a30, agent2=a10, clock=10, time=2015-06-03 15:55:56.814]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-03 15:54:33.358]
Response [id=8282, response=accepted, clock=10, time=2015-06-03 15:56:00.96]
Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 15:54:33.155, clock=0]
Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-03 15:56:03.992, clock=11]
Time [clock=15, time=2015-06-03 15:56:41.842]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=2, time=2015-06-03 15:54:33.354]
Response [id=9762, response=accepted, clock=11, time=2015-06-03 15:56:03.942]
Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-06-03 15:56:46.627, clock=15]
Position [subject=a20, id=null, cell=Cell [x=3, y=4], time=2015-06-03 15:56:26.49, clock=13]
Position [subject=a20, id=null, cell=Cell [x=4, y=4], time=2015-06-03 15:56:10.53, clock=11]
Time [clock=4, time=2015-06-03 15:54:51.812]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-03 15:54:33.362]
Position [subject=a20, id=null, cell=Cell [x=2, y=4], time=2015-06-03 15:56:50.225, clock=15]
Position [subject=a30, id=null, cell=Cell [x=4, y=4], time=2015-06-03 15:55:52.883, clock=10]
Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-06-03 15:56:04.392, clock=11]
Proposal [id=2829, agent=a20, agent2=a10, clock=11, time=2015-06-03 15:56:09.292]
Tile [id=null, cell=Cell [x=0, y=6], subject=blue, time=2015-06-03 15:54:32.972, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-03 15:54:33.094, clock=0]
Time [clock=14, time=2015-06-03 15:56:31.839]
SetGoal [id=null, agent=a20, cell=Cell [x=2, y=4], goal=Cell [x=3, y=4], sanction=100, clock=2, time=2015-06-03 15:54:37.906]
Color [id=null, color=brown, agent=a20, type=yes, sanction=100, time=2015-06-03 15:54:38.858, clock=2]
Prohibition [subject=a40, prohibition=[color(brown, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-03 15:54:39.99]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=5], goal=Cell [x=3, y=4], sanction=100, clock=2, time=2015-06-03 15:54:38.25]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=2, time=2015-06-03 15:54:33.317]
Response [id=5494, response=accepted, clock=11, time=2015-06-03 15:56:02.094]
Time [clock=3, time=2015-06-03 15:54:41.808]
Prohibition [subject=a20, prohibition=[color(white, a20)], sanction=[reduce(a20, 100)], clock=2, time=2015-06-03 15:54:39.694]
Time [clock=12, time=2015-06-03 15:56:11.834]
Color [id=null, color=brown, agent=a30, type=no, sanction=100, time=2015-06-03 15:54:39.823, clock=2]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=4], goal=Cell [x=3, y=4], sanction=100, clock=2, time=2015-06-03 15:54:38.094]
Proposal [id=8282, agent=a20, agent2=a30, clock=10, time=2015-06-03 15:56:00.019]
SetGoal [id=null, agent=a10, cell=Cell [x=3, y=3], goal=Cell [x=3, y=4], sanction=100, clock=2, time=2015-06-03 15:54:37.742]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=2, time=2015-06-03 15:54:33.331]
Time [clock=8, time=2015-06-03 15:55:31.825]
Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-03 15:54:39.477]
Obligation [subject=a10, obligation=[respondToRequest(2829)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 15:56:09.312, clock=11]
Color [id=null, color=brown, agent=a40, type=no, sanction=100, time=2015-06-03 15:54:39.987, clock=2]
Obligation [subject=a20, obligation=[respondToRequest(321)], sanction=[reduce(a20, 300)], deadline=17, time=2015-06-03 15:56:18.803, clock=12]
Response [id=5494, response=accepted, clock=11, time=2015-06-03 15:56:02.016]
Time [clock=21, time=2015-06-03 15:57:41.857]
Obligation [subject=a10, obligation=[respondToRequest(9762)], sanction=[reduce(a10, 300)], deadline=15, time=2015-06-03 15:55:56.82, clock=10]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=2, time=2015-06-03 15:54:33.335]
Color [id=null, color=blue, agent=a40, type=yes, sanction=100, time=2015-06-03 15:54:39.323, clock=2]
Time [clock=13, time=2015-06-03 15:56:21.836]
Response [id=7834, response=accepted, clock=11, time=2015-06-03 15:56:03.447]
Obligation [subject=a20, obligation=[acceptRequest(321)], sanction=[reduce(a20, 200)], deadline=17, time=2015-06-03 15:56:18.8, clock=12]
Response [id=8282, response=accepted, clock=10, time=2015-06-03 15:56:00.979]
Time [clock=2, time=2015-06-03 15:54:31.805]
Response [id=2829, response=accepted, clock=12, time=2015-06-03 15:56:16.714]
Response [id=321, response=accepted, clock=15, time=2015-06-03 15:56:46.157]
Time [clock=1, time=2015-06-03 15:54:21.79]
Obligation [subject=a30, obligation=[makeMove(4, 4, a30)], sanction=[reduce(a30, 300)], deadline=25, time=2015-06-03 15:55:52.905, clock=10]
Time [clock=7, time=2015-06-03 15:55:21.821]
Obligation [subject=a10, obligation=[respondToRequest(7834)], sanction=[reduce(a10, 300)], deadline=15, time=2015-06-03 15:55:52.359, clock=10]
Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:54:33.168, clock=0]
Obligation [subject=a20, obligation=[color(brown, a20)], sanction=[reduce(a20, 100)], deadline=17, time=2015-06-03 15:54:38.863, clock=2]
Time [clock=19, time=2015-06-03 15:57:21.852]
Response [id=2829, response=accepted, clock=12, time=2015-06-03 15:56:16.827]
Time [clock=6, time=2015-06-03 15:55:11.818]
Response [id=9762, response=accepted, clock=11, time=2015-06-03 15:56:03.931]
Obligation [subject=a40, obligation=[at(3, 5, a40)], sanction=[reduce(a40, 700)], deadline=22, time=2015-06-03 15:54:38.253, clock=2]
Response [id=2829, response=accepted, clock=12, time=2015-06-03 15:56:16.724]
Obligation [subject=a30, obligation=[respondToRequest(5494)], sanction=[reduce(a30, 300)], deadline=15, time=2015-06-03 15:56:01.103, clock=10]
Time [clock=10, time=2015-06-03 15:55:51.831]
Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:54:33.049, clock=0]
Response [id=5494, response=accepted, clock=11, time=2015-06-03 15:56:02.006]
Obligation [subject=a20, obligation=[makeMove(4, 4, a20)], sanction=[reduce(a20, 300)], deadline=26, time=2015-06-03 15:56:10.537, clock=11]
Response [id=7834, response=accepted, clock=11, time=2015-06-03 15:56:03.275]
Response [id=8282, response=accepted, clock=10, time=2015-06-03 15:56:01.063]
Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:54:32.992, clock=0]
Obligation [subject=a10, obligation=[color(brown, a10)], sanction=[reduce(a10, 100)], deadline=17, time=2015-06-03 15:54:38.583, clock=2]
Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-03 15:54:33.107, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:54:33.111, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 15:54:33.115, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-03 15:54:33.13, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:54:33.123, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-06-03 15:54:33.019, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 15:54:33.119, clock=0]
Tile [id=null, cell=Cell [x=6, y=3], subject=white, time=2015-06-03 15:54:33.158, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-06-03 15:54:33.139, clock=0]
Response [id=5747, response=accepted, clock=15, time=2015-06-03 15:56:45.65]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-03 15:54:33.055, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-06-03 15:54:33.142, clock=0]
Obligation [subject=a10, obligation=[surround(3, 4)], sanction=[reduce(g, 700)], deadline=26, time=2015-06-03 15:54:33.31, clock=2]
Response [id=7834, response=accepted, clock=11, time=2015-06-03 15:56:03.289]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:54:33.012, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-03 15:54:33.023, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-03 15:54:32.956, clock=0]
Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 15:54:39.683, clock=2]
Color [id=null, color=brown, agent=a10, type=yes, sanction=100, time=2015-06-03 15:54:38.574, clock=2]
Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-06-03 15:54:33.162, clock=0]
Obligation [subject=a30, obligation=[respondToRequest(8282)], sanction=[reduce(a30, 300)], deadline=15, time=2015-06-03 15:56:00.027, clock=10]
Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=17, time=2015-06-03 15:54:39.061, clock=2]
Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-03 15:54:33.066, clock=0]
Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-06-03 15:54:39.474, clock=2]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-03 15:54:33.134, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 15:54:32.987, clock=0]
Obligation [subject=a40, obligation=[makeMove(3, 3, a40)], sanction=[reduce(a40, 300)], deadline=26, time=2015-06-03 15:56:03.995, clock=11]
Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:54:33.088, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-03 15:54:32.977, clock=0]
Obligation [subject=a10, obligation=[at(3, 3, a10)], sanction=[reduce(a10, 700)], deadline=22, time=2015-06-03 15:54:37.753, clock=2]
Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 15:54:33.083, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-03 15:54:33.073, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-03 15:54:32.917, clock=0]
Obligation [subject=a30, obligation=[acceptRequest(8282)], sanction=[reduce(a30, 200)], deadline=15, time=2015-06-03 15:56:00.025, clock=10]
Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 15:54:33.06, clock=0]
Obligation [subject=a10, obligation=[acceptRequest(2829)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 15:56:09.309, clock=11]
Tile [id=null, cell=Cell [x=2, y=6], subject=blue, time=2015-06-03 15:54:33.039, clock=0]
Obligation [subject=a10, obligation=[acceptRequest(9762)], sanction=[reduce(a10, 200)], deadline=15, time=2015-06-03 15:55:56.817, clock=10]
Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:54:32.947, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:54:32.961, clock=0]
Obligation [subject=a30, obligation=[acceptRequest(5494)], sanction=[reduce(a30, 200)], deadline=15, time=2015-06-03 15:56:01.1, clock=10]
Obligation [subject=a30, obligation=[at(4, 4, a30)], sanction=[reduce(a30, 700)], deadline=22, time=2015-06-03 15:54:38.099, clock=2]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-06-03 15:54:33.152, clock=0]
Obligation [subject=a20, obligation=[acceptRequest(5747)], sanction=[reduce(a20, 200)], deadline=17, time=2015-06-03 15:56:15.664, clock=12]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 15:54:33.029, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:54:32.997, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:54:33.008, clock=0]
Obligation [subject=a10, obligation=[makeMove(3, 3, a10)], sanction=[reduce(a10, 300)], deadline=25, time=2015-06-03 15:55:55.151, clock=10]
Obligation [subject=a20, obligation=[at(2, 4, a20)], sanction=[reduce(a20, 700)], deadline=22, time=2015-06-03 15:54:37.91, clock=2]
Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:54:33.044, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 15:54:32.982, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 15:54:32.949, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-03 15:54:33.034, clock=0]
Points [subject=a10, time=2015-06-03 15:55:58.892, clock=10, value=700, id=null]
Points [subject=a20, time=2015-06-03 15:56:50.245, clock=15, value=900, id=null]
Points [subject=a10, time=2015-06-03 15:56:46.503, clock=15, value=600, id=null]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:54:33.103, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:54:32.966, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 15:54:33.079, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:54:33.001, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:54:33.004, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=1, time=2015-06-03 15:59:01.076]
object notification: Time [clock=1, time=2015-06-03 15:59:01.076]
object notification: Time [clock=1, time=2015-06-03 15:59:01.076]
object notification: Time [clock=1, time=2015-06-03 15:59:01.076]
#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2ec449c6
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@58d63b5b
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6f92322e
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 15:59:04.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 15:59:04.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 15:59:04.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 15:59:04.313, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:59:04.353, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:59:04.353, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:59:04.353, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 15:59:04.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 15:59:04.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 15:59:04.356, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 15:59:04.353, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 15:59:04.359, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 15:59:04.359, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 15:59:04.359, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-03 15:59:04.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:59:04.364, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 15:59:04.359, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:59:04.364, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:59:04.364, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=yellow, time=2015-06-03 15:59:04.364, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:59:04.372, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:59:04.372, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:59:04.372, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 15:59:04.374, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 15:59:04.372, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 15:59:04.374, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 15:59:04.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 15:59:04.378, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 15:59:04.374, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-03 15:59:04.381, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-03 15:59:04.381, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 15:59:04.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 15:59:04.374, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 15:59:04.378, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 15:59:04.384, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-03 15:59:04.381, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-03 15:59:04.381, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 15:59:04.384, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 15:59:04.384, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:59:04.388, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 15:59:04.384, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:59:04.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:59:04.388, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-03 15:59:04.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:59:04.394, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:59:04.394, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:59:04.394, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-03 15:59:04.394, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:59:04.4, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:59:04.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:59:04.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 15:59:04.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:59:04.405, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:59:04.405, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:59:04.405, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=white, time=2015-06-03 15:59:04.405, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:59:04.409, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:59:04.409, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:59:04.409, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 15:59:04.409, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:59:04.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:59:04.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:59:04.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 15:59:04.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 15:59:04.419, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 15:59:04.419, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 15:59:04.419, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 15:59:04.419, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 15:59:04.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 15:59:04.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 15:59:04.426, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-03 15:59:04.426, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 15:59:04.43, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 15:59:04.43, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 15:59:04.43, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-03 15:59:04.43, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 15:59:04.436, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 15:59:04.436, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 15:59:04.436, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 15:59:04.436, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-06-03 15:59:04.443, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-06-03 15:59:04.443, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-06-03 15:59:04.443, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-06-03 15:59:04.443, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:59:04.448, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:59:04.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:59:04.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-03 15:59:04.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:59:04.456, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:59:04.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:59:04.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 15:59:04.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 15:59:04.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 15:59:04.461, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 15:59:04.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 15:59:04.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 15:59:04.468, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 15:59:04.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 15:59:04.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-03 15:59:04.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 15:59:04.473, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 15:59:04.473, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 15:59:04.473, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 15:59:04.473, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 15:59:04.481, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 15:59:04.481, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 15:59:04.481, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-03 15:59:04.481, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 15:59:04.489, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 15:59:04.489, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 15:59:04.489, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-06-03 15:59:04.489, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 15:59:04.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 15:59:04.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 15:59:04.494, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-03 15:59:04.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:59:04.525, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:59:04.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:59:04.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-03 15:59:04.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-03 15:59:04.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-03 15:59:04.533, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-03 15:59:04.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-06-03 15:59:04.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:59:04.545, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:59:04.545, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:59:04.545, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 15:59:04.545, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 15:59:04.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 15:59:04.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 15:59:04.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-06-03 15:59:04.55, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:59:04.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:59:04.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:59:04.555, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-03 15:59:04.555, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 15:59:04.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 15:59:04.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 15:59:04.56, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-06-03 15:59:04.56, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 15:59:04.564, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 15:59:04.564, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 15:59:04.564, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:59:04.568, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:59:04.568, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 15:59:04.564, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:59:04.568, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-03 15:59:04.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-03 15:59:04.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-03 15:59:04.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 15:59:04.576, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 15:59:04.576, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 15:59:04.576, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 15:59:04.568, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 15:59:04.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 15:59:04.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 15:59:04.581, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-03 15:59:04.572, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 15:59:04.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 15:59:04.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 15:59:04.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 15:59:04.589, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 15:59:04.589, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 15:59:04.589, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 15:59:04.576, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:59:04.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:59:04.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:59:04.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=yellow, time=2015-06-03 15:59:04.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-03 15:59:04.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=yellow, time=2015-06-03 15:59:04.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=yellow, time=2015-06-03 15:59:04.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=yellow, time=2015-06-03 15:59:04.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=yellow, time=2015-06-03 15:59:04.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 15:59:04.602, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 15:59:04.585, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 15:59:04.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=yellow, time=2015-06-03 15:59:04.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 15:59:04.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 15:59:04.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 15:59:04.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 15:59:04.606, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-06-03 15:59:04.589, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 15:59:04.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 15:59:04.61, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 15:59:04.61, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=brown, time=2015-06-03 15:59:04.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:59:04.613, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:59:04.613, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:59:04.613, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=yellow, time=2015-06-03 15:59:04.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=yellow, time=2015-06-03 15:59:04.598, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-06-03 15:59:04.602, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-06-03 15:59:04.606, clock=0]
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(blue, 0, 1)
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=white, time=2015-06-03 15:59:04.61, clock=0]
Event processed UpdateTile(white, 0, 2)
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-06-03 15:59:04.613, clock=0]
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
org notification: Goal [id=null, cell=Cell [x=5, y=1], agent=null, time=2015-06-03 15:59:04.67, clock=0]
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(white, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 0, 3)
org notification: Group [name=g, ra=a10, clock=0, time=2015-06-03 15:59:04.798]
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(yellow, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 15:59:04.859]
Event processed UpdateTile(blue, 2, 5)
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 15:59:04.877]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 15:59:04.872]
object notification: Obligation [subject=a10, obligation=[surround(5, 1)], sanction=[reduce(g, 700)], deadline=25, time=2015-06-03 15:59:04.856, clock=1]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 15:59:04.912]
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(blue, 1, 1)
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 15:59:04.874]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 15:59:04.915]
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(yellow, 1, 3)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 1, 4)
Event processed UpdateTile(white, 1, 6)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(white, 1, 6)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(brown, 2, 1)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(brown, 3, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 4, 6)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(brown, 3, 5)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 3, 6)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 4, 1)
Event processed UpdateTile(white, 4, 3)
#########################Game Initialized
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
AGENT Thread-12: current phase name: Norm Phase
we have 0 goals
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(brown, 4, 2)
Event processed UpdateTile(white, 4, 4)
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(white, 4, 6)
Event processed UpdateTile(yellow, 6, 1)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(white, 4, 6)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 6, 2)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(white, 6, 5)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(brown, 5, 4)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 300))
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(brown, 5, 5)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(yellow, 6, 1)
Event processed UpdateTile(yellow, 6, 2)
Event processed UpdateTile(brown, 6, 0)
Event processed UpdateTile(yellow, 6, 1)
Event processed UpdateTile(yellow, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(white, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(white, 6, 5)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 300))
Event processed UpdateTile(yellow, 6, 6)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 300))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptObligation(surround(5, 1), 25, reduce(g, 700))
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(white, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 1, 6), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(brown, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(white, 4, 3), UpdateTile(white, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(white, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(yellow, 6, 1), UpdateTile(yellow, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(white, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a40), reduce(a40, 300)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(5, 1), 25, reduce(g, 700))
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(white, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 1, 6), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(brown, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(white, 4, 3), UpdateTile(white, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(white, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(yellow, 6, 1), UpdateTile(yellow, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(white, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a10), reduce(a10, 300)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(5, 1), 25, reduce(g, 700))]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(5, 1), 25, reduce(g, 700))
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(white, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(yellow, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(yellow, 1, 3), UpdateTile(white, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(white, 1, 6), UpdateTile(white, 2, 0), UpdateTile(brown, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(brown, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(brown, 3, 5), UpdateTile(yellow, 3, 6), UpdateTile(white, 4, 0), UpdateTile(yellow, 4, 1), UpdateTile(brown, 4, 2), UpdateTile(white, 4, 3), UpdateTile(white, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(white, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(white, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(brown, 6, 0), UpdateTile(yellow, 6, 1), UpdateTile(yellow, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(white, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a30), reduce(a30, 300)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(yellow, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(yellow, 1, 3)
},
{	UpdateTile(white, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(white, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(brown, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(brown, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(brown, 3, 5)
},
{	UpdateTile(yellow, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(yellow, 4, 1)
},
{	UpdateTile(brown, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(white, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(brown, 6, 0)
},
{	UpdateTile(yellow, 6, 1)
},
{	UpdateTile(yellow, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(white, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(5, 1, 700) : 3 Jun 2015 15:15:46 GMT, priority 10)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(5, 1, 700) : 3 Jun 2015 15:15:46 GMT, priority 10)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(5, 1, 700) : 3 Jun 2015 15:15:46 GMT, priority 10)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(5, 1, 700) : 3 Jun 2015 15:15:46 GMT, priority 10
[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[CTAH] Agentposition: [3,6]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 6, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(5, 1); sendSouth(a10, 5, 1, 100); sendWest(a20, 5, 1, 100); sendEast(a30, 5, 1, 100); sendNorth(a40, 5, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(5, 1);
	sendSouth(a10, 5, 1, 100);
	sendWest(a20, 5, 1, 100);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	getPos
}


[CTAH] Agentposition: [2,4]
[Planbase]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(2, 4, C)]
[After]:{	B(clock(C));
	GetAgentPos(2, 4, C)
}


[Planbase]:{	GetAgentPos(3, 6, 1)
}


[new scheduled]:[GetAgentPos(3, 6, 1)]
[After]:{	GetAgentPos(3, 6, 1)
}


[Planbase]:{	sendSouth(a10, 5, 1, 100);
	sendWest(a20, 5, 1, 100);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 5, 1, 100); sendWest(a20, 5, 1, 100); sendEast(a30, 5, 1, 100); sendNorth(a40, 5, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 5, 1, 100);
	sendWest(a20, 5, 1, 100);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [6,3]
[Planbase]:{	GetAgentPos(2, 4, 1)
}


[new scheduled]:[GetAgentPos(2, 4, 1)]
[After]:{	GetAgentPos(2, 4, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a10, 5, 0, 5, 1, 100),L,0);
	sendWest(a20, 5, 1, 100);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(6, 3, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 5, 0, 5, 1, 100),L,0); sendWest(a20, 5, 1, 100); sendEast(a30, 5, 1, 100); sendNorth(a40, 5, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(6, 3, C)]
[After]:{	@ctenv(setGoal(a10, 5, 0, 5, 1, 100),L,0);
	sendWest(a20, 5, 1, 100);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(6, 3, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=5, y=0], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:09.94]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=5, y=0], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:09.94]
object notification: Obligation [subject=a10, obligation=[at(5, 0, a10)], sanction=[reduce(a10, 700)], deadline=21, time=2015-06-03 15:59:09.952, clock=1]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(5, 0, a10), 21, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 4, 1, 5, 1, 100),L,0);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	GetAgentPos(6, 3, 1)
},
{	adoptObligation(at(5, 0, a10), 21, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 4, 1, 5, 1, 100),L,0); sendEast(a30, 5, 1, 100); sendNorth(a40, 5, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), GetAgentPos(6, 3, 1), adoptObligation(at(5, 0, a10), 21, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 4, 1, 5, 1, 100),L,0);
	sendEast(a30, 5, 1, 100);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	GetAgentPos(6, 3, 1)
},
{	adoptObligation(at(5, 0, a10), 21, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=4, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.07]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=4, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.07]
[Planbase]:{	@ctenv(setGoal(a30, 6, 1, 5, 1, 100),L,0);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(5, 0, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 6, 1, 5, 1, 100),L,0); sendNorth(a40, 5, 1, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), adoptz(at(5, 0, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 6, 1, 5, 1, 100),L,0);
	sendNorth(a40, 5, 1, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(5, 0, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=6, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.157]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=6, y=1], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.157]
obligation to be adopted: at(5, 0, 700) : 3 Jun 2015 15:15:50 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(6, 1, a30)], sanction=[reduce(a30, 700)], deadline=21, time=2015-06-03 15:59:10.161, clock=1]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(6, 1, a30), 21, reduce(a30, 700))
[Planbase]:{	@ctenv(setGoal(a40, 5, 2, 5, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 5, 2, 5, 1, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 5, 2, 5, 1, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=5, y=2], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.323]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=5, y=2], goal=Cell [x=5, y=1], sanction=100, clock=1, time=2015-06-03 15:59:10.323]
object notification: Obligation [subject=a40, obligation=[at(5, 2, a40)], sanction=[reduce(a40, 700)], deadline=21, time=2015-06-03 15:59:10.328, clock=1]
[Planbase]:{	adoptObligation(at(6, 1, a30), 21, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(6, 1, a30), 21, reduce(a30, 700))]
[After]:{	adoptObligation(at(6, 1, a30), 21, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(5, 2, a40), 21, reduce(a40, 700))
[Planbase]:{	adoptz(at(6, 1, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


[new scheduled]:[adoptz(at(6, 1, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)]
[After]:{	adoptz(at(6, 1, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


obligation to be adopted: at(6, 1, 700) : 3 Jun 2015 15:15:50 GMT, priority 10
[Planbase]:{	adoptObligation(at(5, 2, a40), 21, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(5, 2, a40), 21, reduce(a40, 700))]
[After]:{	adoptObligation(at(5, 2, a40), 21, reduce(a40, 700))
}


[Planbase]:{	color(blue, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(blue, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	color(blue, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(5, 2, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


[new scheduled]:[adoptz(at(5, 2, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)]
[After]:{	adoptz(at(5, 2, 700) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


obligation to be adopted: at(5, 2, 700) : 3 Jun 2015 15:15:50 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, blue, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=yes, sanction=100, time=2015-06-03 15:59:10.777, clock=1]
org notification: Color [id=null, color=blue, agent=a10, type=yes, sanction=100, time=2015-06-03 15:59:10.777, clock=1]
object notification: Obligation [subject=a10, obligation=[color(blue, a10)], sanction=[reduce(a10, 100)], deadline=16, time=2015-06-03 15:59:10.786, clock=1]
Event processed adoptObligation(color(blue, a10), 16, reduce(a10, 100))
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(blue, a10), 16, reduce(a10, 100))
}


[new scheduled]:[color(yellow, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), adoptObligation(color(blue, a10), 16, reduce(a10, 100))]
[After]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(color(blue, a10), 16, reduce(a10, 100))
}


[Planbase]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(blue, 100) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, yellow, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), adoptz(useColor(blue, 100) : 3 Jun 2015 15:15:50 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptz(useColor(blue, 100) : 3 Jun 2015 15:15:50 GMT, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 15:59:11.064, clock=1]
org notification: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 15:59:11.064, clock=1]
obligation to be adopted: useColor(blue, 100) : 3 Jun 2015 15:15:50 GMT, priority 10
object notification: Time [clock=2, time=2015-06-03 15:59:11.118]
object notification: Time [clock=2, time=2015-06-03 15:59:11.118]
object notification: Time [clock=2, time=2015-06-03 15:59:11.118]
org notification: Time [clock=2, time=2015-06-03 15:59:11.118]
[Planbase]:{	color(yellow, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(yellow, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(2)
Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	@ctenv(setColor(a30, yellow, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(yellow, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), UpdateClock(2)]
[After]:{	@ctenv(setColor(a30, yellow, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	UpdateClock(2)
}


agent writes: Color [id=null, color=yellow, agent=a30, type=yes, sanction=100, time=2015-06-03 15:59:11.578, clock=2]
org notification: Color [id=null, color=yellow, agent=a30, type=yes, sanction=100, time=2015-06-03 15:59:11.578, clock=2]
object notification: Obligation [subject=a30, obligation=[color(yellow, a30)], sanction=[reduce(a30, 100)], deadline=17, time=2015-06-03 15:59:11.582, clock=2]
Event processed adoptObligation(color(yellow, a30), 17, reduce(a30, 100))
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptObligation(color(yellow, a30), 17, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(yellow, a30), 17, reduce(a30, 100))]
[After]:{	adoptObligation(color(yellow, a30), 17, reduce(a30, 100))
}


[Planbase]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a40, yes, 100); color(white, a10, no, 100); color(yellow, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	color(white, a40, yes, 100);
	color(white, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 15:15:51 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(yellow, 100) : 3 Jun 2015 15:15:51 GMT, priority 10)]
[After]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 15:15:51 GMT, priority 10)
}


obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 15:15:51 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 100),L,0); color(white, a10, no, 100); color(yellow, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(white, a10, no, 100);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 15:59:11.829, clock=2]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-06-03 15:59:11.829, clock=2]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=17, time=2015-06-03 15:59:11.833, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, no, 100),L,0); color(yellow, a20, no, 100); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, no, 100),L,0);
	color(yellow, a20, no, 100);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 15:59:11.939, clock=2]
org notification: Color [id=null, color=white, agent=a10, type=no, sanction=100, time=2015-06-03 15:59:11.939, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(white, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-03 15:59:11.942]
Event processed adoptObligation(color(white, a40), 17, reduce(a40, 100))
[Planbase]:{	adoptObligation(color(white, a40), 17, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(white, a40), 17, reduce(a40, 100))]
[After]:{	adoptObligation(color(white, a40), 17, reduce(a40, 100))
}


Event processed adoptProhibition(color(white, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, yellow, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, yellow, no, 100),L,0); color(yellow, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), adoptProhibition(color(white, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, yellow, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(white, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=yellow, agent=a20, type=no, sanction=100, time=2015-06-03 15:59:12.133, clock=2]
org notification: Color [id=null, color=yellow, agent=a20, type=no, sanction=100, time=2015-06-03 15:59:12.133, clock=2]
[Planbase]:{	adoptz(useColor(white, 100) : 3 Jun 2015 15:15:52 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 3 Jun 2015 15:15:52 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 3 Jun 2015 15:15:52 GMT, priority 10)
}


obligation to be adopted: useColor(white, 100) : 3 Jun 2015 15:15:52 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(5, 1, 700) : Infinite, priority 10), AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 15:59:12.241, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 15:59:12.241, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-03 15:59:12.244]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(5, 1, 700) : Infinite, priority 10), aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(5, 1, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(yellow, a30), reduce(a30, 100))
agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-06-03 15:59:12.412, clock=2]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-06-03 15:59:12.412, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-03 15:59:12.416]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(yellow, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-06-03 15:59:21.121]
object notification: Time [clock=3, time=2015-06-03 15:59:21.121]
object notification: Time [clock=3, time=2015-06-03 15:59:21.121]
org notification: Time [clock=3, time=2015-06-03 15:59:21.121]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-03 15:59:31.124]
object notification: Time [clock=4, time=2015-06-03 15:59:31.124]
org notification: Time [clock=4, time=2015-06-03 15:59:31.124]
object notification: Time [clock=4, time=2015-06-03 15:59:31.124]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-06-03 15:59:41.126]
org notification: Time [clock=5, time=2015-06-03 15:59:41.126]
object notification: Time [clock=5, time=2015-06-03 15:59:41.126]
object notification: Time [clock=5, time=2015-06-03 15:59:41.126]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=6, time=2015-06-03 15:59:51.129]
object notification: Time [clock=6, time=2015-06-03 15:59:51.129]
object notification: Time [clock=6, time=2015-06-03 15:59:51.129]
org notification: Time [clock=6, time=2015-06-03 15:59:51.129]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-03 16:00:01.132]
object notification: Time [clock=7, time=2015-06-03 16:00:01.132]
object notification: Time [clock=7, time=2015-06-03 16:00:01.132]
org notification: Time [clock=7, time=2015-06-03 16:00:01.132]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 16:00:11.134]
org notification: Time [clock=8, time=2015-06-03 16:00:11.134]
object notification: Time [clock=8, time=2015-06-03 16:00:11.134]
object notification: Time [clock=8, time=2015-06-03 16:00:11.134]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[Planbase]:


[new scheduled]:[]
[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@50709dfa
[CTAH] The created APLList : [phasechange]
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5997bce2
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@592d9d9a
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	Updated
},
{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	Updated
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[6,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[6,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	Updated
},
{	B([A,B]=[6,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] going goal: 5,0 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] going goal: 6,1 color: neco
a40[CTAH] going goal: 5,2 color: neco
org notification: Time [clock=9, time=2015-06-03 16:00:21.138]
object notification: Time [clock=9, time=2015-06-03 16:00:21.138]
object notification: Time [clock=9, time=2015-06-03 16:00:21.138]
object notification: Time [clock=9, time=2015-06-03 16:00:21.138]
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][6] [3][5] [3][4] [3][3] [4][3] [4][2] [4][1] [4][0] [5][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:5)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,5,1,1764]
Event processed UpdateClock(9)
org notification: Proposal [id=1764, agent=a10, agent2=a20, clock=9, time=2015-06-03 16:00:24.619]
[Planbase]:{	B(clock(Clock));
	if	B(not 1764=no)
	then	{	NextStep(3, 5, 1764);
			SentProposal(1764, 1, open, Clock)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[B(clock(Clock)); if B(not 1764=no) then {NextStep(3, 5, 1764); SentProposal(1764, 1, open, Clock)} else NextStep(3, 5), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(9)]
[After]:{	B(clock(Clock));
	if	B(not 1764=no)
	then	{	NextStep(3, 5, 1764);
			SentProposal(1764, 1, open, Clock)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(9)
}


[Planbase]:{	if	B(not 1764=no)
	then	{	NextStep(3, 5, 1764);
			SentProposal(1764, 1, open, 8)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(not 1764=no) then {NextStep(3, 5, 1764); SentProposal(1764, 1, open, 8)} else NextStep(3, 5), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not 1764=no)
	then	{	NextStep(3, 5, 1764);
			SentProposal(1764, 1, open, 8)
		}
	else	{	NextStep(3, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	NextStep(3, 5, 1764);
	SentProposal(1764, 1, open, 8)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 5, 1764); SentProposal(1764, 1, open, 8), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	NextStep(3, 5, 1764);
	SentProposal(1764, 1, open, 8)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	SentProposal(1764, 1, open, 8)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[SentProposal(1764, 1, open, 8), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	SentProposal(1764, 1, open, 8)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=1764, response=accepted, clock=9, time=2015-06-03 16:00:26.865]
[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 1764, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1764, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), @ctenv(functionToList(message(response, 1764, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1764, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3bd708a4
[CTAH] The created APLList : [response,1764,accept]
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1764)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B(response=response) then ReceivedResponse(accept, 1764)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1764)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 1764)
}


[new scheduled]:[B(timetowait(Wait)); if B(9>8+Wait) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 1764)]
[After]:{	B(timetowait(Wait));
	if	B(9>8+Wait)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 1764)
}


[Planbase]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(9>8+7) then {NoNextStep(3, 5, 1764); ReceivedResponse(noresponse, 1764)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(9>8+7)
	then	{	NoNextStep(3, 5, 1764);
			ReceivedResponse(noresponse, 1764)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 5),L2,0);
	if	B(L2=[actionresult([3,5])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 5, Clock)
		};
	NoNextStep(3, 5, 1764)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 5),L2,0); if B(L2=[actionresult([3,5])]) then {B(clock(Clock)); UpdatePosition(3, 5, Clock)}; NoNextStep(3, 5, 1764), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 5),L2,0);
	if	B(L2=[actionresult([3,5])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 5, Clock)
		};
	NoNextStep(3, 5, 1764)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=5], time=2015-06-03 16:00:27.349, clock=9]
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=5], time=2015-06-03 16:00:27.349, clock=9]
Event processed UpdatePosition(3, 5, 9)
object notification: Obligation [subject=a10, obligation=[makeMove(3, 5, a10)], sanction=[reduce(a10, 300)], deadline=24, time=2015-06-03 16:00:27.384, clock=9]
[Planbase]:{	NoNextStep(3, 5, 1764)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdatePosition(3, 5, 9)
}


[new scheduled]:[NoNextStep(3, 5, 1764), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdatePosition(3, 5, 9)]
[After]:{	NoNextStep(3, 5, 1764)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdatePosition(3, 5, 9)
}


Event processed adoptObligation(makeMove(3, 5, a10), 24, reduce(a10, 300))
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptObligation(makeMove(3, 5, a10), 24, reduce(a10, 300))
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), adoptObligation(makeMove(3, 5, a10), 24, reduce(a10, 300))]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptObligation(makeMove(3, 5, a10), 24, reduce(a10, 300))
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptz(makeMove(3, 5, 300) : 3 Jun 2015 15:17:07 GMT, priority 10)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), adoptz(makeMove(3, 5, 300) : 3 Jun 2015 15:17:07 GMT, priority 10)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	adoptz(makeMove(3, 5, 300) : 3 Jun 2015 15:17:07 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 5, 300) : 3 Jun 2015 15:17:07 GMT, priority 10
[Planbase]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[5,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] going goal: 5,0 color: neco
object notification: Time [clock=10, time=2015-06-03 16:00:31.153]
org notification: Time [clock=10, time=2015-06-03 16:00:31.153]
object notification: Time [clock=10, time=2015-06-03 16:00:31.153]
object notification: Time [clock=10, time=2015-06-03 16:00:31.153]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=6051, agent=a20, agent2=a40, clock=10, time=2015-06-03 16:00:32.974]
object notification: Obligation [subject=a40, obligation=[acceptRequest(6051)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:32.979, clock=10]
object notification: Obligation [subject=a40, obligation=[respondToRequest(6051)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:32.981, clock=10]
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [3][5] [4][5] [4][4] [4][3] [4][2] [4][1] [4][0] [5][0]

a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:4,C:5)
a10[CTAH] moveStepToGoalTest sent proposal for: [4,5,3,8873]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=8873, agent=a10, agent2=a40, clock=10, time=2015-06-03 16:00:33.988]
object notification: Obligation [subject=a40, obligation=[acceptRequest(8873)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:33.993, clock=10]
object notification: Obligation [subject=a40, obligation=[respondToRequest(8873)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:33.995, clock=10]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not 8873=no)
	then	{	NextStep(4, 5, 8873);
			SentProposal(8873, 3, open, Clock)
		}
	else	{	NextStep(4, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not 8873=no) then {NextStep(4, 5, 8873); SentProposal(8873, 3, open, Clock)} else NextStep(4, 5), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not 8873=no)
	then	{	NextStep(4, 5, 8873);
			SentProposal(8873, 3, open, Clock)
		}
	else	{	NextStep(4, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not 8873=no)
	then	{	NextStep(4, 5, 8873);
			SentProposal(8873, 3, open, 9)
		}
	else	{	NextStep(4, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(not 8873=no) then {NextStep(4, 5, 8873); SentProposal(8873, 3, open, 9)} else NextStep(4, 5), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not 8873=no)
	then	{	NextStep(4, 5, 8873);
			SentProposal(8873, 3, open, 9)
		}
	else	{	NextStep(4, 5)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	NextStep(4, 5, 8873);
	SentProposal(8873, 3, open, 9)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[NextStep(4, 5, 8873); SentProposal(8873, 3, open, 9), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	NextStep(4, 5, 8873);
	SentProposal(8873, 3, open, 9)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	SentProposal(8873, 3, open, 9)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[SentProposal(8873, 3, open, 9), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	SentProposal(8873, 3, open, 9)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=8965, agent=a20, agent2=a40, clock=10, time=2015-06-03 16:00:36.43]
object notification: Obligation [subject=a40, obligation=[acceptRequest(8965)], sanction=[reduce(a40, 200)], deadline=15, time=2015-06-03 16:00:36.439, clock=10]
object notification: Obligation [subject=a40, obligation=[respondToRequest(8965)], sanction=[reduce(a40, 300)], deadline=15, time=2015-06-03 16:00:36.441, clock=10]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][3] [6][2] [5][2]

a40[CTAH] moveStepToGoalTest returns I have chip: [6,2,no,no]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Event processed UpdateClock(9)
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(proposal(proposal, 1, 6051, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(6051), 15, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(6051), 15, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 0, 8873, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(8873), 15, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(8873), 15, reduce(a40, 300))
Event processed @ctenv(functionToList(proposal(proposal, 1, 8965, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(8965), 15, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(8965), 15, reduce(a40, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(6, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(6, 2)
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 1, 6051, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6051), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(6051), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 8873, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8873), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(8873), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 1, 8965, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8965), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(8965), 15, reduce(a40, 300))
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(6, 2, no); SentProposal(no, no, open, Clock)} else NextStep(6, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(9), UpdateClock(10), @ctenv(functionToList(proposal(proposal, 1, 6051, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(6051), 15, reduce(a40, 200)), adoptObligation(respondToRequest(6051), 15, reduce(a40, 300)), @ctenv(functionToList(proposal(proposal, 0, 8873, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(8873), 15, reduce(a40, 200)), adoptObligation(respondToRequest(8873), 15, reduce(a40, 300)), @ctenv(functionToList(proposal(proposal, 1, 8965, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(8965), 15, reduce(a40, 200)), adoptObligation(respondToRequest(8965), 15, reduce(a40, 300))]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(6, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(6, 2)
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(proposal(proposal, 1, 6051, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(6051), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(6051), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 0, 8873, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8873), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(8873), 15, reduce(a40, 300))
},
{	@ctenv(functionToList(proposal(proposal, 1, 8965, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(8965), 15, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(8965), 15, reduce(a40, 300))
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1657d07f
[CTAH] The created APLList : [proposal,1,6051,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@19fd5548
[CTAH] The created APLList : [proposal,0,8873,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@4b3c741b
[CTAH] The created APLList : [proposal,1,8965,open]
[Planbase]:{	if	B(not no=no)
	then	{	NextStep(6, 2, no);
			SentProposal(no, no, open, 8)
		}
	else	{	NextStep(6, 2)
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6051, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(6051, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8873, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(8873, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8965, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(8965, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
}


[new scheduled]:[if B(not no=no) then {NextStep(6, 2, no); SentProposal(no, no, open, 8)} else NextStep(6, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(6051, 200) : 3 Jun 2015 15:17:20 GMT, priority 10), adoptz(respondToRequest(6051, 300) : 3 Jun 2015 15:17:20 GMT, priority 10), if B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(8873, 200) : 3 Jun 2015 15:17:20 GMT, priority 10), adoptz(respondToRequest(8873, 300) : 3 Jun 2015 15:17:20 GMT, priority 10), if B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(8965, 200) : 3 Jun 2015 15:17:20 GMT, priority 10), adoptz(respondToRequest(8965, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)]
[After]:{	if	B(not no=no)
	then	{	NextStep(6, 2, no);
			SentProposal(no, no, open, 8)
		}
	else	{	NextStep(6, 2)
		}
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(6051, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(6051, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8873, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(8873, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(8965, 200) : 3 Jun 2015 15:17:20 GMT, priority 10)
},
{	adoptz(respondToRequest(8965, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
}


obligation to be adopted: acceptRequest(6051, 200) : 3 Jun 2015 15:17:20 GMT, priority 10
obligation to be adopted: respondToRequest(6051, 300) : 3 Jun 2015 15:17:20 GMT, priority 10
obligation to be adopted: acceptRequest(8873, 200) : 3 Jun 2015 15:17:20 GMT, priority 10
obligation to be adopted: respondToRequest(8873, 300) : 3 Jun 2015 15:17:20 GMT, priority 10
obligation to be adopted: acceptRequest(8965, 200) : 3 Jun 2015 15:17:20 GMT, priority 10
obligation to be adopted: respondToRequest(8965, 300) : 3 Jun 2015 15:17:20 GMT, priority 10
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	NextStep(6, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(6, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(6, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,6051,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,0,8873,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,1,8965,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 6051, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8873, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8965, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(1, 6051, open), if B(proposal=proposal) then ReceivedProposal(0, 8873, open), if B(proposal=proposal) then ReceivedProposal(1, 8965, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 6051, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8873, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8965, open)
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 6051, open)
},
{	ReceivedProposal(0, 8873, open)
},
{	ReceivedProposal(1, 8965, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 2),L2,0); if B(L2=[actionresult([6,2])]) then {B(clock(Clock)); UpdatePosition(6, 2, Clock)}; NoNextStep(6, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(1, 6051, open), ReceivedProposal(0, 8873, open), ReceivedProposal(1, 8965, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(1, 6051, open)
},
{	ReceivedProposal(0, 8873, open)
},
{	ReceivedProposal(1, 8965, open)
}


a40[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-06-03 16:00:40.782, clock=10]
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-06-03 16:00:40.782, clock=10]
object notification: Obligation [subject=a40, obligation=[makeMove(6, 2, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-03 16:00:40.808, clock=10]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Event processed UpdatePosition(6, 2, 10)
Event processed adoptObligation(makeMove(6, 2, a40), 25, reduce(a40, 300))
[Planbase]:{	NoNextStep(6, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(6, 2, 10)
},
{	adoptObligation(makeMove(6, 2, a40), 25, reduce(a40, 300))
}


[new scheduled]:[if B(not scoreAfterExchange(6051, Score)) then getScoreAfterExchange(6051); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6051, Answer), if B(not scoreAfterExchange(8873, Score)) then getScoreAfterExchange(8873); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8873, Answer), if B(not scoreAfterExchange(8965, Score)) then getScoreAfterExchange(8965); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8965, Answer), if B(not scoreAfterExchange(6051, Score)) then getScoreAfterExchange(6051); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6051, Answer), if B(not scoreAfterExchange(8873, Score)) then getScoreAfterExchange(8873); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8873, Answer), if B(not scoreAfterExchange(8965, Score)) then getScoreAfterExchange(8965); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8965, Answer), if G(acceptRequests(6051, V2)) then skip else if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), NoNextStep(6, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(6, 2, 10), adoptObligation(makeMove(6, 2, a40), 25, reduce(a40, 300))]
[After]:{	if	G(acceptRequests(6051, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 6051, closed(A)))
			then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
				}
		}
},
{	NoNextStep(6, 2)
},
{	if	B(not scoreAfterExchange(6051, Score))
	then	{	getScoreAfterExchange(6051)
		};
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	if	B(not scoreAfterExchange(8873, Score))
	then	{	getScoreAfterExchange(8873)
		};
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	if	B(not scoreAfterExchange(8965, Score))
	then	{	getScoreAfterExchange(8965)
		};
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(not scoreAfterExchange(6051, Score))
	then	{	getScoreAfterExchange(6051)
		};
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	if	B(not scoreAfterExchange(8873, Score))
	then	{	getScoreAfterExchange(8873)
		};
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	if	B(not scoreAfterExchange(8965, Score))
	then	{	getScoreAfterExchange(8965)
		};
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(6, 2, 10)
},
{	adoptObligation(makeMove(6, 2, a40), 25, reduce(a40, 300))
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(6051);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	getScoreAfterExchange(8873);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	getScoreAfterExchange(8965);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	getScoreAfterExchange(6051);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	getScoreAfterExchange(8873);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	getScoreAfterExchange(8965);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(6, 2, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), getScoreAfterExchange(6051); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6051, Answer), getScoreAfterExchange(8873); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8873, Answer), getScoreAfterExchange(8965); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8965, Answer), getScoreAfterExchange(6051); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6051, Answer), getScoreAfterExchange(8873); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8873, Answer), getScoreAfterExchange(8965); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8965, Answer), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), adoptz(makeMove(6, 2, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)]
[After]:{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(6051);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	getScoreAfterExchange(8873);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	getScoreAfterExchange(8965);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	getScoreAfterExchange(6051);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	getScoreAfterExchange(8873);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	getScoreAfterExchange(8965);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(6, 2, 300) : 3 Jun 2015 15:17:20 GMT, priority 10)
}


obligation to be adopted: makeMove(6, 2, 300) : 3 Jun 2015 15:17:20 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(6051, yes);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	GetScoreAfterExchange(8873, yes);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	GetScoreAfterExchange(8965, yes);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	GetScoreAfterExchange(6051, yes);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	GetScoreAfterExchange(8873, yes);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	GetScoreAfterExchange(8965, yes);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(6051, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, GetScoreAfterExchange(6051, yes); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6051, Answer), GetScoreAfterExchange(8873, yes); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8873, Answer), GetScoreAfterExchange(8965, yes); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8965, Answer), GetScoreAfterExchange(6051, yes); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6051, Answer), GetScoreAfterExchange(8873, yes); B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8873, Answer), GetScoreAfterExchange(8965, yes); B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8965, Answer), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(6051, yes);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	GetScoreAfterExchange(8873, yes);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	GetScoreAfterExchange(8965, yes);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	GetScoreAfterExchange(6051, yes);
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	GetScoreAfterExchange(8873, yes);
	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	GetScoreAfterExchange(8965, yes);
	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


obligation to be adopted: respondToRequest(6051, 50) : Infinite, priority 10
object notification: Time [clock=11, time=2015-06-03 16:00:41.169]
object notification: Time [clock=11, time=2015-06-03 16:00:41.169]
org notification: Time [clock=11, time=2015-06-03 16:00:41.169]
object notification: Time [clock=11, time=2015-06-03 16:00:41.169]
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(6051, Score)) then getScoreAfterExchange(6051); B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6051, Answer), if G(acceptRequests(6051, V2)) then skip else if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), B([A,B]=[5,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6051, Answer), B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8873, Answer), B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8965, Answer), B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6051, Answer), B(scoreAfterExchange(8873, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8873, Answer), B(scoreAfterExchange(8965, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8965, Answer), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not scoreAfterExchange(6051, Score))
	then	{	getScoreAfterExchange(6051)
		};
	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	if	G(acceptRequests(6051, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 6051, closed(A)))
			then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
				}
		}
},
{	B([A,B]=[5,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(scoreAfterExchange(8873, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(scoreAfterExchange(8965, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(11)
[Planbase]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(timetowait(Wait)); if B(10>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(11)]
[After]:{	B(timetowait(Wait));
	if	B(10>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
[Planbase]:{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(scoreAfterExchange(6051, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6051, Answer), if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(6051, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8873, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8965, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(6051, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8873, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(8965, Answer), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(11)]
[After]:{	B(scoreAfterExchange(6051, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(10>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(10>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(6051, Answer), adoptz(respondToRequest(6051, 50) : Infinite, priority 10), if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(6051, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8873, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8965, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(6051, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(8873, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(8965, accept), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, Answer)
},
{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 5, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8873, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


obligation to be adopted: respondToRequest(6051, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(accept=accept);
	sendResponse(8873, accept)
},
{	B(accept=accept);
	sendResponse(8965, accept)
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(accept=accept);
	sendResponse(8873, accept)
},
{	B(accept=accept);
	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequests(6051, V2)) then skip else if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(6051, accept), @ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(6051, accept), B(accept=accept); sendResponse(8873, accept), B(accept=accept); sendResponse(8965, accept), B(accept=accept); sendResponse(6051, accept), B(accept=accept); sendResponse(8873, accept), B(accept=accept); sendResponse(8965, accept), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(acceptRequests(6051, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 6051, closed(A)))
			then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(6051, accept)
},
{	@ctenv(moveStepToGoalTest(neco, any, 5, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(accept=accept);
	sendResponse(8873, accept)
},
{	B(accept=accept);
	sendResponse(8965, accept)
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(accept=accept);
	sendResponse(8873, accept)
},
{	B(accept=accept);
	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] going goal: 5,2 color: neco
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [4][2] [5][2] [5][1] [6][1]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,2,3,3788]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=3788, agent=a30, agent2=a40, clock=11, time=2015-06-03 16:00:43.714]
object notification: Obligation [subject=a40, obligation=[acceptRequest(3788)], sanction=[reduce(a40, 200)], deadline=16, time=2015-06-03 16:00:43.724, clock=11]
object notification: Obligation [subject=a40, obligation=[respondToRequest(3788)], sanction=[reduce(a40, 300)], deadline=16, time=2015-06-03 16:00:43.727, clock=11]
Event processed UpdateClock(9)
Event processed UpdateClock(10)
Event processed UpdateClock(11)
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[Planbase]:{	B(clock(Clock));
	if	B(not 3788=no)
	then	{	NextStep(5, 2, 3788);
			SentProposal(3788, 3, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(10)
},
{	UpdateClock(11)
}


[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 3788=no) then {NextStep(5, 2, 3788); SentProposal(3788, 3, open, Clock)} else NextStep(5, 2), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(9), UpdateClock(10), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not 3788=no)
	then	{	NextStep(5, 2, 3788);
			SentProposal(3788, 3, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(10)
},
{	UpdateClock(11)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(not 3788=no)
	then	{	NextStep(5, 2, 3788);
			SentProposal(3788, 3, open, 8)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(not 3788=no) then {NextStep(5, 2, 3788); SentProposal(3788, 3, open, 8)} else NextStep(5, 2), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(not 3788=no)
	then	{	NextStep(5, 2, 3788);
			SentProposal(3788, 3, open, 8)
		}
	else	{	NextStep(5, 2)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	NextStep(5, 2, 3788);
	SentProposal(3788, 3, open, 8)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[NextStep(5, 2, 3788); SentProposal(3788, 3, open, 8), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	NextStep(5, 2, 3788);
	SentProposal(3788, 3, open, 8)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	SentProposal(3788, 3, open, 8)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[SentProposal(3788, 3, open, 8), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	SentProposal(3788, 3, open, 8)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=3244, agent=a20, agent2=a10, clock=11, time=2015-06-03 16:00:46.577]
object notification: Obligation [subject=a10, obligation=[acceptRequest(3244)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:00:46.589, clock=11]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3244)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:00:46.592, clock=11]
[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 3244, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(3244), 16, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(3244), 16, reduce(a10, 300))
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 3244, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3244), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(3244), 16, reduce(a10, 300))
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), @ctenv(functionToList(proposal(proposal, 1, 3244, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(3244), 16, reduce(a10, 200)), adoptObligation(respondToRequest(3244), 16, reduce(a10, 300))]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 3244, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3244), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(3244), 16, reduce(a10, 300))
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5ed09f17
[CTAH] The created APLList : [proposal,1,3244,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3244, 200) : 3 Jun 2015 15:17:26 GMT, priority 10)
},
{	adoptz(respondToRequest(3244, 300) : 3 Jun 2015 15:17:26 GMT, priority 10)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(3244, 200) : 3 Jun 2015 15:17:26 GMT, priority 10), adoptz(respondToRequest(3244, 300) : 3 Jun 2015 15:17:26 GMT, priority 10)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3244, 200) : 3 Jun 2015 15:17:26 GMT, priority 10)
},
{	adoptz(respondToRequest(3244, 300) : 3 Jun 2015 15:17:26 GMT, priority 10)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: acceptRequest(3244, 200) : 3 Jun 2015 15:17:26 GMT, priority 10
obligation to be adopted: respondToRequest(3244, 300) : 3 Jun 2015 15:17:26 GMT, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,3244,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3244, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B(proposal=proposal) then ReceivedProposal(1, 3244, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3244, open)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1836, agent=a20, agent2=a10, clock=11, time=2015-06-03 16:00:47.147]
object notification: Obligation [subject=a10, obligation=[acceptRequest(1836)], sanction=[reduce(a10, 200)], deadline=16, time=2015-06-03 16:00:47.153, clock=11]
object notification: Obligation [subject=a10, obligation=[respondToRequest(1836)], sanction=[reduce(a10, 300)], deadline=16, time=2015-06-03 16:00:47.156, clock=11]
Event processed @ctenv(functionToList(proposal(proposal, 1, 1836, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(1836), 16, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(1836), 16, reduce(a10, 300))
[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedProposal(1, 3244, open)
},
{	@ctenv(functionToList(proposal(proposal, 1, 1836, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(1836), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(1836), 16, reduce(a10, 300))
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedProposal(1, 3244, open), @ctenv(functionToList(proposal(proposal, 1, 1836, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(1836), 16, reduce(a10, 200)), adoptObligation(respondToRequest(1836), 16, reduce(a10, 300))]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedProposal(1, 3244, open)
},
{	@ctenv(functionToList(proposal(proposal, 1, 1836, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(1836), 16, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(1836), 16, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@580290ee
[CTAH] The created APLList : [proposal,1,1836,open]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(1836, 200) : 3 Jun 2015 15:17:27 GMT, priority 10)
},
{	adoptz(respondToRequest(1836, 300) : 3 Jun 2015 15:17:27 GMT, priority 10)
}


[new scheduled]:[if B(not scoreAfterExchange(3244, Score)) then getScoreAfterExchange(3244); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3244, Answer), if B(not scoreAfterExchange(3244, Score)) then getScoreAfterExchange(3244); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3244, Answer), if G(acceptRequests(3244, V2)) then skip else if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(1836, 200) : 3 Jun 2015 15:17:27 GMT, priority 10), adoptz(respondToRequest(1836, 300) : 3 Jun 2015 15:17:27 GMT, priority 10)]
[After]:{	if	G(acceptRequests(3244, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 3244, closed(A)))
			then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(not scoreAfterExchange(3244, Score))
	then	{	getScoreAfterExchange(3244)
		};
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(not scoreAfterExchange(3244, Score))
	then	{	getScoreAfterExchange(3244)
		};
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(1836, 200) : 3 Jun 2015 15:17:27 GMT, priority 10)
},
{	adoptz(respondToRequest(1836, 300) : 3 Jun 2015 15:17:27 GMT, priority 10)
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: acceptRequest(1836, 200) : 3 Jun 2015 15:17:27 GMT, priority 10
obligation to be adopted: respondToRequest(1836, 300) : 3 Jun 2015 15:17:27 GMT, priority 10
[Planbase]:{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(3244);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	getScoreAfterExchange(3244);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), getScoreAfterExchange(3244); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3244, Answer), getScoreAfterExchange(3244); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3244, Answer), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(3244);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	getScoreAfterExchange(3244);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B([actionresult([proposal,1,1836,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	GetScoreAfterExchange(3244, yes);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	GetScoreAfterExchange(3244, yes);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1836, open)
		}
}


[new scheduled]:[adoptz(respondToRequest(3244, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, GetScoreAfterExchange(3244, yes); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3244, Answer), GetScoreAfterExchange(3244, yes); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3244, Answer), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B(proposal=proposal) then ReceivedProposal(1, 1836, open)]
[After]:{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	GetScoreAfterExchange(3244, yes);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	GetScoreAfterExchange(3244, yes);
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1836, open)
		}
}


obligation to be adopted: respondToRequest(3244, 50) : Infinite, priority 10
[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedProposal(1, 1836, open)
}


[new scheduled]:[if B(not scoreAfterExchange(3244, Score)) then getScoreAfterExchange(3244); B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3244, Answer), if G(acceptRequests(3244, V2)) then skip else if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3244, Answer), B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3244, Answer), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedProposal(1, 1836, open)]
[After]:{	if	B(not scoreAfterExchange(3244, Score))
	then	{	getScoreAfterExchange(3244)
		};
	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	G(acceptRequests(3244, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 3244, closed(A)))
			then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedProposal(1, 1836, open)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(1836, Score)) then getScoreAfterExchange(1836); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(1836, Answer), if B(not scoreAfterExchange(1836, Score)) then getScoreAfterExchange(1836); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1836, Answer), findNextStep(neco, 700), B(scoreAfterExchange(3244, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3244, Answer), if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3244, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3244, Answer), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(scoreAfterExchange(3244, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	if	B(not scoreAfterExchange(1836, Score))
	then	{	getScoreAfterExchange(1836)
		};
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(not scoreAfterExchange(1836, Score))
	then	{	getScoreAfterExchange(1836)
		};
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	getScoreAfterExchange(1836);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	getScoreAfterExchange(1836);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3244, Answer), adoptz(respondToRequest(3244, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, getScoreAfterExchange(1836); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1836, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3244, accept), getScoreAfterExchange(1836); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(1836, Answer), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(3244, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, Answer)
},
{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	getScoreAfterExchange(1836);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	getScoreAfterExchange(1836);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


obligation to be adopted: respondToRequest(3244, 50) : Infinite, priority 10
[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	GetScoreAfterExchange(1836, yes);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	GetScoreAfterExchange(1836, yes);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequests(3244, V2)) then skip else if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(3244, accept), if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, GetScoreAfterExchange(1836, yes); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1836, Answer), B(accept=accept); sendResponse(3244, accept), GetScoreAfterExchange(1836, yes); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(1836, Answer), B(accept=accept); sendResponse(3244, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	G(acceptRequests(3244, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 3244, closed(A)))
			then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3244, accept)
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	GetScoreAfterExchange(1836, yes);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	GetScoreAfterExchange(1836, yes);
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	sendResponse(3244, accept)
},
{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 3244, closed(A))) then adoptz(respondToRequest(3244, 50) : Infinite, priority 10), B(accept=accept); sendResponse(3244, accept), B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1836, Answer), sendResponse(3244, accept), B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(1836, Answer), sendResponse(3244, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not receivedP(1, 3244, closed(A)))
	then	{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(3244, accept)
},
{	findNextStep(neco, 700)
},
{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	sendResponse(3244, accept)
},
{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	sendResponse(3244, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	sendResponse(3244, accept)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(3244, 50) : Infinite, priority 10), sendResponse(3244, accept), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1836, Answer), @ctenv(sendResponse(3244, accept),L1,0); SentResponse(accept, 3244), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(1836, Answer), @ctenv(sendResponse(3244, accept),L1,0); SentResponse(accept, 3244), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	adoptz(respondToRequest(3244, 50) : Infinite, priority 10)
},
{	sendResponse(3244, accept)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.336]
org notification: Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.353]
obligation to be adopted: respondToRequest(3244, 50) : Infinite, priority 10
[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if G(acceptRequests(1836, V2)) then skip else if B(not receivedP(1, 1836, closed(A))) then adoptz(respondToRequest(1836, 50) : Infinite, priority 10), @ctenv(sendResponse(3244, accept),L1,0); SentResponse(accept, 3244), if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1836, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(1836, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	G(acceptRequests(1836, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1836, closed(A)))
			then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
				}
		}
},
{	@ctenv(sendResponse(3244, accept),L1,0);
	SentResponse(accept, 3244)
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=3244, response=accepted, clock=11, time=2015-06-03 16:00:48.545]
[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 1836, closed(A)))
	then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(1836, accept)
},
{	B(accept=accept);
	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(not receivedP(1, 1836, closed(A))) then adoptz(respondToRequest(1836, 50) : Infinite, priority 10), B(accept=accept); sendResponse(1836, accept), B(accept=accept); sendResponse(1836, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not receivedP(1, 1836, closed(A)))
	then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	B(accept=accept);
	sendResponse(1836, accept)
},
{	B(accept=accept);
	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	sendResponse(1836, accept)
},
{	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(1836, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, sendResponse(1836, accept), sendResponse(1836, accept), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
},
{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	sendResponse(1836, accept)
},
{	sendResponse(1836, accept)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


obligation to be adopted: respondToRequest(1836, 50) : Infinite, priority 10
[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	@ctenv(sendResponse(1836, accept),L1,0);
	SentResponse(accept, 1836)
},
{	@ctenv(sendResponse(1836, accept),L1,0);
	SentResponse(accept, 1836)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(not scoreAfterExchange(1836, Score)) then getScoreAfterExchange(1836); B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(1836, Answer), if G(acceptRequests(1836, V2)) then skip else if B(not receivedP(1, 1836, closed(A))) then adoptz(respondToRequest(1836, 50) : Infinite, priority 10), if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, @ctenv(sendResponse(1836, accept),L1,0); SentResponse(accept, 1836), @ctenv(sendResponse(1836, accept),L1,0); SentResponse(accept, 1836), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(not scoreAfterExchange(1836, Score))
	then	{	getScoreAfterExchange(1836)
		};
	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	G(acceptRequests(1836, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1836, closed(A)))
			then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	@ctenv(sendResponse(1836, accept),L1,0);
	SentResponse(accept, 1836)
},
{	@ctenv(sendResponse(1836, accept),L1,0);
	SentResponse(accept, 1836)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=1836, response=accepted, clock=11, time=2015-06-03 16:00:48.928]
org notification: Response [id=1836, response=accepted, clock=11, time=2015-06-03 16:00:48.942]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(not receivedP(1, 1836, closed(A)))
	then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), B(scoreAfterExchange(1836, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(1836, Answer), if B(not receivedP(1, 1836, closed(A))) then adoptz(respondToRequest(1836, 50) : Infinite, priority 10), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(scoreAfterExchange(1836, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1836, Answer)
},
{	if	B(not receivedP(1, 1836, closed(A)))
	then	{	adoptz(respondToRequest(1836, 50) : Infinite, priority 10)
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


object notification: Time [clock=12, time=2015-06-03 16:00:51.175]
org notification: Time [clock=12, time=2015-06-03 16:00:51.175]
object notification: Time [clock=12, time=2015-06-03 16:00:51.175]
object notification: Time [clock=12, time=2015-06-03 16:00:51.175]
[Planbase]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Event processed UpdateClock(12)
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), UpdateClock(12)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	UpdateClock(12)
}


Event processed UpdateClock(12)
[Planbase]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[if B(11>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(12)]
[After]:{	if	B(11>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(11>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(11>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=3], time=2015-06-03 16:00:51.88, clock=12]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][2] [5][2]

a40[CTAH] moveStepToGoalTest returns I have chip: [5,2,no,no]
Event processed @ctenv(functionToList(proposal(proposal, 2, 3788, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(3788), 16, reduce(a40, 200))
Event processed adoptObligation(respondToRequest(3788), 16, reduce(a40, 300))
Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	sendResponse(6051, accept)
},
{	sendResponse(8873, accept)
},
{	sendResponse(8965, accept)
},
{	sendResponse(6051, accept)
},
{	sendResponse(8873, accept)
},
{	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 3788, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3788), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(3788), 16, reduce(a40, 300))
},
{	UpdateClock(12)
}


[new scheduled]:[if B(not receivedP(1, 6051, closed(A))) then adoptz(respondToRequest(6051, 50) : Infinite, priority 10), B(accept=accept); sendResponse(6051, accept), B(clock(Clock)); if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, Clock)} else NextStep(5, 2), sendResponse(6051, accept), sendResponse(8873, accept), sendResponse(8965, accept), sendResponse(6051, accept), sendResponse(8873, accept), sendResponse(8965, accept), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(proposal(proposal, 2, 3788, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(3788), 16, reduce(a40, 200)), adoptObligation(respondToRequest(3788), 16, reduce(a40, 300)), UpdateClock(12)]
[After]:{	if	B(not receivedP(1, 6051, closed(A)))
	then	{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(6051, accept)
},
{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	sendResponse(6051, accept)
},
{	sendResponse(8873, accept)
},
{	sendResponse(8965, accept)
},
{	sendResponse(6051, accept)
},
{	sendResponse(8873, accept)
},
{	sendResponse(8965, accept)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 3788, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(3788), 16, reduce(a40, 200))
},
{	adoptObligation(respondToRequest(3788), 16, reduce(a40, 300))
},
{	UpdateClock(12)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@37d98da4
[CTAH] The created APLList : [proposal,2,3788,open]
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	sendResponse(6051, accept)
},
{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(5, 2)
		}
},
{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	@ctenv(sendResponse(8873, accept),L1,0);
	SentResponse(accept, 8873)
},
{	@ctenv(sendResponse(8965, accept),L1,0);
	SentResponse(accept, 8965)
},
{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	@ctenv(sendResponse(8873, accept),L1,0);
	SentResponse(accept, 8873)
},
{	@ctenv(sendResponse(8965, accept),L1,0);
	SentResponse(accept, 8965)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3788, 200) : 3 Jun 2015 15:17:34 GMT, priority 10)
},
{	adoptz(respondToRequest(3788, 300) : 3 Jun 2015 15:17:34 GMT, priority 10)
}


[new scheduled]:[adoptz(respondToRequest(6051, 50) : Infinite, priority 10), sendResponse(6051, accept), if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, 11)} else NextStep(5, 2), @ctenv(sendResponse(6051, accept),L1,0); SentResponse(accept, 6051), @ctenv(sendResponse(8873, accept),L1,0); SentResponse(accept, 8873), @ctenv(sendResponse(8965, accept),L1,0); SentResponse(accept, 8965), @ctenv(sendResponse(6051, accept),L1,0); SentResponse(accept, 6051), @ctenv(sendResponse(8873, accept),L1,0); SentResponse(accept, 8873), @ctenv(sendResponse(8965, accept),L1,0); SentResponse(accept, 8965), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(3788, 200) : 3 Jun 2015 15:17:34 GMT, priority 10), adoptz(respondToRequest(3788, 300) : 3 Jun 2015 15:17:34 GMT, priority 10)]
[After]:{	adoptz(respondToRequest(6051, 50) : Infinite, priority 10)
},
{	sendResponse(6051, accept)
},
{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(5, 2)
		}
},
{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	@ctenv(sendResponse(8873, accept),L1,0);
	SentResponse(accept, 8873)
},
{	@ctenv(sendResponse(8965, accept),L1,0);
	SentResponse(accept, 8965)
},
{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	@ctenv(sendResponse(8873, accept),L1,0);
	SentResponse(accept, 8873)
},
{	@ctenv(sendResponse(8965, accept),L1,0);
	SentResponse(accept, 8965)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(3788, 200) : 3 Jun 2015 15:17:34 GMT, priority 10)
},
{	adoptz(respondToRequest(3788, 300) : 3 Jun 2015 15:17:34 GMT, priority 10)
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=8873, response=accepted, clock=12, time=2015-06-03 16:00:54.885]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

org notification: Response [id=6051, response=accepted, clock=12, time=2015-06-03 16:00:54.904]
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 0.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

obligation to be adopted: respondToRequest(6051, 50) : Infinite, priority 10
obligation to be adopted: acceptRequest(3788, 200) : 3 Jun 2015 15:17:34 GMT, priority 10
obligation to be adopted: respondToRequest(3788, 300) : 3 Jun 2015 15:17:34 GMT, priority 10
org notification: Response [id=8873, response=accepted, clock=12, time=2015-06-03 16:00:54.927]
org notification: Response [id=8965, response=accepted, clock=12, time=2015-06-03 16:00:54.947]
[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 8873, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(response, 8873, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	NextStep(5, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(6051, accept),L1,0); SentResponse(accept, 6051), NextStep(5, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(sendResponse(6051, accept),L1,0);
	SentResponse(accept, 6051)
},
{	NextStep(5, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,3788,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8873, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 8873, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), @ctenv(functionToList(message(response, 8873, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(message(response, 8873, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 8873, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 8873, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 1.

org notification: Response [id=6051, response=accepted, clock=12, time=2015-06-03 16:00:55.116]
[CTAH] Array of Terms: [Lapapl.data.Term;@f72c5b8
[CTAH] The created APLList : [response,8873,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@257cfd97
[CTAH] The created APLList : [response,8873,accept]
[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3788, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(proposal=proposal) then ReceivedProposal(2, 3788, open)]
[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8873)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8873)
		}
}


[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3788, open)
		}
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), if B(response=response) then ReceivedResponse(accept, 8873), if B(response=response) then ReceivedResponse(accept, 8873)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8873)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 8873)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 3788, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedProposal(2, 3788, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedProposal(2, 3788, open)
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873), ReceivedResponse(accept, 8873)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	ReceivedResponse(accept, 8873)
}


a40[CTAH] moveStepToGoal returns: no
[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:55.306, clock=12]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:55.306, clock=12]
Event processed UpdatePosition(5, 2, 12)
[Planbase]:{	NoNextStep(5, 2)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(5, 2, 12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(not scoreAfterExchange(3788, Score)) then getScoreAfterExchange(3788); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3788, Answer), if B(not scoreAfterExchange(3788, Score)) then getScoreAfterExchange(3788); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3788, Answer), if G(acceptRequests(3788, V2)) then skip else if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), NoNextStep(5, 2), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(5, 2, 12)]
[new scheduled]:[B(timetowait(Wait)); if B(12>9+Wait) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	G(acceptRequests(3788, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3788, closed(A)))
			then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
				}
		}
},
{	NoNextStep(5, 2)
},
{	if	B(not scoreAfterExchange(3788, Score))
	then	{	getScoreAfterExchange(3788)
		};
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(not scoreAfterExchange(3788, Score))
	then	{	getScoreAfterExchange(3788)
		};
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(5, 2, 12)
}


[After]:{	B(timetowait(Wait));
	if	B(12>9+Wait)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(3788);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	getScoreAfterExchange(3788);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), getScoreAfterExchange(3788); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3788, Answer), getScoreAfterExchange(3788); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3788, Answer), if B(tile(white, 3, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(3788);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	getScoreAfterExchange(3788);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(tile(white, 3, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(12>9+7) then {NoNextStep(4, 5, 8873); ReceivedResponse(noresponse, 8873)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(12>9+7)
	then	{	NoNextStep(4, 5, 8873);
			ReceivedResponse(noresponse, 8873)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(3788, yes);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	GetScoreAfterExchange(3788, yes);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[new scheduled]:[adoptz(respondToRequest(3788, 50) : Infinite, priority 10), GetScoreAfterExchange(3788, yes); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3788, Answer), GetScoreAfterExchange(3788, yes); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3788, Answer), if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(3788, yes);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	GetScoreAfterExchange(3788, yes);
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 100)
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: respondToRequest(3788, 50) : Infinite, priority 10
[Planbase]:{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	findNextStep(white, 100)
}


[new scheduled]:[if B(not scoreAfterExchange(3788, Score)) then getScoreAfterExchange(3788); B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3788, Answer), if G(acceptRequests(3788, V2)) then skip else if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3788, Answer), B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3788, Answer), findNextStep(white, 100)]
[After]:{	if	B(not scoreAfterExchange(3788, Score))
	then	{	getScoreAfterExchange(3788)
		};
	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	G(acceptRequests(3788, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3788, closed(A)))
			then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	findNextStep(white, 100)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 5),L2,0);
	if	B(L2=[actionresult([4,5])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 5, Clock)
		};
	NoNextStep(4, 5, 8873)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 5),L2,0); if B(L2=[actionresult([4,5])]) then {B(clock(Clock)); UpdatePosition(4, 5, Clock)}; NoNextStep(4, 5, 8873), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 5),L2,0);
	if	B(L2=[actionresult([4,5])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 5, Clock)
		};
	NoNextStep(4, 5, 8873)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=5], time=2015-06-03 16:00:55.692, clock=12]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=5], time=2015-06-03 16:00:55.692, clock=12]
Event processed UpdatePosition(4, 5, 12)
[Planbase]:{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(white, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B(scoreAfterExchange(3788, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3788, Answer), if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3788, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(3788, Answer), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(white, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>100) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B(scoreAfterExchange(3788, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(white, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	NoNextStep(4, 5, 8873)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePosition(4, 5, 12)
}


[new scheduled]:[NoNextStep(4, 5, 8873), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873), UpdatePosition(4, 5, 12)]
[After]:{	NoNextStep(4, 5, 8873)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePosition(4, 5, 12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	if	B(tile(white, X, Y))
	then	{	B([A,B]=[X,Y])
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(3788, Answer), adoptz(respondToRequest(3788, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3788, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(3788, accept), if B(tile(white, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>100) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, Answer)
},
{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	if	B(tile(white, X, Y))
	then	{	B([A,B]=[X,Y])
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: respondToRequest(3788, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	B([A,B]=[0,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(acceptRequests(3788, V2)) then skip else if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(3788, accept), B(accept=accept); sendResponse(3788, accept), B(accept=accept); sendResponse(3788, accept), B([A,B]=[0,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>100) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(acceptRequests(3788, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3788, closed(A)))
			then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3788, accept)
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	B([A,B]=[0,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	sendResponse(3788, accept)
},
{	sendResponse(3788, accept)
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 0, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(not receivedP(2, 3788, closed(A))) then adoptz(respondToRequest(3788, 50) : Infinite, priority 10), B(accept=accept); sendResponse(3788, accept), sendResponse(3788, accept), sendResponse(3788, accept), if B(prohibition(useColor(Color2, V3))) then if B(V3>100) then @ctenv(moveStepToGoalTest(Color2, no, 0, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(not receivedP(2, 3788, closed(A)))
	then	{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(3788, accept)
},
{	sendResponse(3788, accept)
},
{	sendResponse(3788, accept)
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>100)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 0, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[B([A,B]=[5,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	sendResponse(3788, accept)
},
{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	if	B(100>100)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 0, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[adoptz(respondToRequest(3788, 50) : Infinite, priority 10), sendResponse(3788, accept), @ctenv(sendResponse(3788, accept),L1,0); SentResponse(accept, 3788), @ctenv(sendResponse(3788, accept),L1,0); SentResponse(accept, 3788), if B(100>100) then @ctenv(moveStepToGoalTest(blue, no, 0, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	adoptz(respondToRequest(3788, 50) : Infinite, priority 10)
},
{	sendResponse(3788, accept)
},
{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	if	B(100>100)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 0, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

obligation to be adopted: respondToRequest(3788, 50) : Infinite, priority 10
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.153]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.163]
Event processed @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(3788, accept),L1,0); SentResponse(accept, 3788), @ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(sendResponse(3788, accept),L1,0);
	SentResponse(accept, 3788)
},
{	@ctenv(moveStepToGoalTest(white, any, 0, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


a40[CTAH] going goal: 0,0 color: white
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3788, response=accepted, clock=12, time=2015-06-03 16:00:56.275]
[CTAH] Array of Terms: [Lapapl.data.Term;@74e3bc5e
[CTAH] Array of Terms: [Lapapl.data.Term;@1363fb46
[CTAH] The created APLList : [response,3788,accept]
[CTAH] The created APLList : [response,3788,accept]
Event processed @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>8+Wait) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(response=response) then ReceivedResponse(accept, 3788), if B(response=response) then ReceivedResponse(accept, 3788), @ctenv(functionToList(message(response, 3788, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(12>8+Wait)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
},
{	@ctenv(functionToList(message(response, 3788, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


a10[CTAH] going goal: 5,0 color: neco
[CTAH] Array of Terms: [Lapapl.data.Term;@6099d424
[CTAH] The created APLList : [response,3788,accept]
[Planbase]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
}


[new scheduled]:[if B(12>8+7) then {NoNextStep(5, 2, 3788); ReceivedResponse(noresponse, 3788)}, if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788), if B(response=response) then ReceivedResponse(accept, 3788)]
[After]:{	if	B(12>8+7)
	then	{	NoNextStep(5, 2, 3788);
			ReceivedResponse(noresponse, 3788)
		}
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3788)
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2, 3788), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


Need to wait 4 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:56.714, clock=12]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 16:00:56.714, clock=12]
object notification: Obligation [subject=a30, obligation=[makeMove(5, 2, a30)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 16:00:56.728, clock=12]
object notification: Points [subject=a30, time=2015-06-03 16:00:56.744, clock=12, value=900, id=null]
a30[CTAH] moveStepToGoal returns: [5,2]
Event processed UpdatePosition(5, 2, 12)
Event processed adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	UpdatePosition(5, 2, 12)
},
{	adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 2, Clock); NoNextStep(5, 2, 3788), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788), UpdatePosition(5, 2, 12), adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300)), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	UpdatePosition(5, 2, 12)
},
{	adoptObligation(makeMove(5, 2, a30), 27, reduce(a30, 300))
},
{	UpdatePoints(900)
}


org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=3], time=2015-06-03 16:01:00.811, clock=12]
[Planbase]:{	UpdatePosition(5, 2, 12);
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	adoptz(makeMove(5, 2, 300) : 3 Jun 2015 15:17:40 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(5, 2, 12); NoNextStep(5, 2, 3788), if B(tile(yellow, 2, 4)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788), adoptz(makeMove(5, 2, 300) : 3 Jun 2015 15:17:40 GMT, priority 10)]
[After]:{	UpdatePosition(5, 2, 12);
	NoNextStep(5, 2, 3788)
},
{	if	B(tile(yellow, 2, 4))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	adoptz(makeMove(5, 2, 300) : 3 Jun 2015 15:17:40 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 2, 300) : 3 Jun 2015 15:17:40 GMT, priority 10
[Planbase]:{	NoNextStep(5, 2, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[NoNextStep(5, 2, 3788), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	NoNextStep(5, 2, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[Planbase]:{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


object notification: Time [clock=13, time=2015-06-03 16:01:01.181]
org notification: Time [clock=13, time=2015-06-03 16:01:01.181]
object notification: Time [clock=13, time=2015-06-03 16:01:01.181]
object notification: Time [clock=13, time=2015-06-03 16:01:01.181]
Event processed UpdateClock(13)
[Planbase]:{	B([A,B]=[6,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	UpdateClock(13)
}


[new scheduled]:[B([A,B]=[6,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788), UpdateClock(13)]
[After]:{	B([A,B]=[6,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 6, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 6, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, ReceivedResponse(accept, 3788), ReceivedResponse(accept, 3788)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 6, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	ReceivedResponse(accept, 3788)
},
{	ReceivedResponse(accept, 3788)
}


a30[CTAH] going goal: 6,1 color: neco
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [4][5] [4][4] [4][3] [5][3] [5][2] [5][1] [5][0]

a10[CTAH] moveStepToGoalTest returns I have chip: [4,4,no,no]
Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 4)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 4, no); SentProposal(no, no, open, Clock)} else NextStep(4, 4), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 4)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(4, 4)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 4, no); SentProposal(no, no, open, 12)} else NextStep(4, 4), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(4, 4)
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	NextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[NextStep(4, 4), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	NextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 4),L2,0);
	if	B(L2=[actionresult([4,4])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 4, Clock)
		};
	NoNextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 4),L2,0); if B(L2=[actionresult([4,4])]) then {B(clock(Clock)); UpdatePosition(4, 4, Clock)}; NoNextStep(4, 4), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 4),L2,0);
	if	B(L2=[actionresult([4,4])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 4, Clock)
		};
	NoNextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=4], time=2015-06-03 16:01:07.884, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=4], time=2015-06-03 16:01:07.884, clock=13]
Event processed UpdatePosition(4, 4, 13)
object notification: Points [subject=a10, time=2015-06-03 16:01:07.938, clock=13, value=900, id=null]
[Planbase]:{	NoNextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePosition(4, 4, 13)
}


[new scheduled]:[NoNextStep(4, 4), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873), UpdatePosition(4, 4, 13)]
[After]:{	NoNextStep(4, 4)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePosition(4, 4, 13)
}


Event processed UpdatePoints(900)
[Planbase]:{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePoints(900)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873), UpdatePoints(900)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
},
{	UpdatePoints(900)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[B([A,B]=[5,0]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	B([A,B]=[5,0]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 0, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 5, 0, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(blue, 6, 3)) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else if B(prohibition(useColor(blue, V2))) then if B(V2>100) then dropgoal(useColor(blue, 100) : Infinite, priority 10) else findNextStep(blue, 100), ReceivedResponse(accept, 8873)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 0, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(blue, 6, 3))
	then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(blue, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(blue, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(blue, 100)
				}
		}
},
{	ReceivedResponse(accept, 8873)
}


a10[CTAH] going goal: 5,0 color: neco
object notification: Time [clock=14, time=2015-06-03 16:01:11.188]
object notification: Time [clock=14, time=2015-06-03 16:01:11.188]
org notification: Time [clock=14, time=2015-06-03 16:01:11.188]
object notification: Time [clock=14, time=2015-06-03 16:01:11.188]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=3], time=2015-06-03 16:01:11.77, clock=14]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=2], time=2015-06-03 16:01:13.196, clock=14]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=1], time=2015-06-03 16:01:18.087, clock=14]
object notification: Time [clock=15, time=2015-06-03 16:01:21.35]
org notification: Time [clock=15, time=2015-06-03 16:01:21.35]
object notification: Time [clock=15, time=2015-06-03 16:01:21.35]
object notification: Time [clock=15, time=2015-06-03 16:01:21.35]
object notification: Time [clock=16, time=2015-06-03 16:01:31.52]
org notification: Time [clock=16, time=2015-06-03 16:01:31.52]
object notification: Time [clock=16, time=2015-06-03 16:01:31.52]
object notification: Time [clock=16, time=2015-06-03 16:01:31.52]
object notification: Time [clock=17, time=2015-06-03 16:01:42.059]
org notification: Time [clock=17, time=2015-06-03 16:01:42.059]
object notification: Time [clock=17, time=2015-06-03 16:01:42.059]
object notification: Time [clock=17, time=2015-06-03 16:01:42.059]
object notification: Points [subject=a10, time=2015-06-03 16:01:42.527, clock=17, value=800, id=null]
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
(((((((((((((((((Game ended)))))))))))
Game ended 
(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:5,C:2).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:4,C:4).
Chips: { chips  'blue':0 'white':3 'brown':0 'yellow':1 }.
Score: 800.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:5,C:2).
Chips: { chips  'blue':9 'white':0 'brown':0 'yellow':1 }.
Score: 900.
Team: -1.

object notification: Time [clock=18, time=2015-06-03 16:01:52.537]
org notification: Time [clock=18, time=2015-06-03 16:01:52.537]
object notification: Time [clock=18, time=2015-06-03 16:01:52.537]
object notification: Time [clock=18, time=2015-06-03 16:01:52.537]
object notification: Points [subject=a40, time=2015-06-03 16:01:53.03, clock=18, value=900, id=null]
object notification: Time [clock=19, time=2015-06-03 16:02:02.543]
org notification: Time [clock=19, time=2015-06-03 16:02:02.543]
object notification: Time [clock=19, time=2015-06-03 16:02:02.543]
object notification: Time [clock=19, time=2015-06-03 16:02:02.543]
a40[CTAH] paths: 1000
a40[CTAH] going goal: 0,0 color: white
org notification: Time [clock=20, time=2015-06-03 16:02:12.547]
object notification: Time [clock=20, time=2015-06-03 16:02:12.547]
object notification: Time [clock=20, time=2015-06-03 16:02:12.547]
object notification: Time [clock=20, time=2015-06-03 16:02:12.547]
