2015-06-04 14:13:31,731 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-04~14.13-gigaspaces-service-192.168.0.40-69224.log
-------------------------last log tuples start--------------------------------
SetGoal [id=null, agent=a10, cell=Cell [x=4, y=2], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:25.685]
Obligation [subject=a30, obligation=[at(5, 3, a30)], sanction=[reduce(a30, 700)], deadline=14, time=2015-06-04 14:12:25.822, clock=0]
SetGoal [id=null, agent=a20, cell=Cell [x=3, y=3], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:25.757]
SetGoal [id=null, agent=a40, cell=Cell [x=4, y=5], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:26.312]
SetGoal [id=null, agent=a40, cell=Cell [x=4, y=4], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:25.9]
Obligation [subject=a10, obligation=[at(4, 2, a10)], sanction=[reduce(a10, 700)], deadline=14, time=2015-06-04 14:12:25.692, clock=0]
Obligation [subject=a10, obligation=[surround(4, 3)], sanction=[reduce(g, 700)], deadline=18, time=2015-06-04 14:12:25.129, clock=0]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=0, time=2015-06-04 14:12:25.121]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=0, time=2015-06-04 14:12:25.065]
Group [name=g, ra=a10, type=ra, clock=0, time=2015-06-04 14:12:25.061]
SetGoal [id=null, agent=a20, cell=Cell [x=3, y=4], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:26.19]
Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 14:12:15.345, clock=0]
SetGoal [id=null, agent=a30, cell=Cell [x=5, y=4], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:26.256]
SetGoal [id=null, agent=a30, cell=Cell [x=5, y=3], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:25.82]
SetGoal [id=null, agent=a10, cell=Cell [x=4, y=3], goal=Cell [x=4, y=3], sanction=100, clock=0, time=2015-06-04 14:12:26.102]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 14:12:15.387, clock=0]
Goal [id=null, cell=Cell [x=4, y=4], agent=null, time=2015-06-04 14:12:15.245, clock=0]
Group [name=g, ra=a10, type=ra, clock=0, time=2015-06-04 14:12:25.046]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=0, time=2015-06-04 14:12:25.079]
Obligation [subject=a40, obligation=[at(4, 5, a40)], sanction=[reduce(a40, 700)], deadline=14, time=2015-06-04 14:12:26.315, clock=0]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=0, time=2015-06-04 14:12:25.081]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=0, time=2015-06-04 14:12:25.107]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=0, time=2015-06-04 14:12:25.083]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-04 14:12:15.353, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-04 14:12:15.4, clock=0]
Time [clock=7, time=2015-06-04 14:13:05.075]
Time [clock=10, time=2015-06-04 14:13:15.174]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=0, time=2015-06-04 14:12:25.116]
Time [clock=8, time=2015-06-04 14:13:05.17]
Goal [id=null, cell=Cell [x=4, y=3], agent=null, time=2015-06-04 14:12:15.499, clock=0]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=0, time=2015-06-04 14:12:25.086]
Time [clock=5, time=2015-06-04 14:12:55.072]
Obligation [subject=a30, obligation=[at(5, 4, a30)], sanction=[reduce(a30, 700)], deadline=14, time=2015-06-04 14:12:26.26, clock=0]
Time [clock=3, time=2015-06-04 14:12:45.07]
Obligation [subject=a40, obligation=[at(4, 4, a40)], sanction=[reduce(a40, 700)], deadline=14, time=2015-06-04 14:12:25.903, clock=0]
Time [clock=9, time=2015-06-04 14:13:15.077]
Time [clock=1, time=2015-06-04 14:12:35.065]
Obligation [subject=a20, obligation=[at(3, 3, a20)], sanction=[reduce(a20, 700)], deadline=14, time=2015-06-04 14:12:25.76, clock=0]
Obligation [subject=a20, obligation=[at(3, 4, a20)], sanction=[reduce(a20, 700)], deadline=14, time=2015-06-04 14:12:26.193, clock=0]
Time [clock=4, time=2015-06-04 14:12:45.16]
Time [clock=6, time=2015-06-04 14:12:55.169]
Obligation [subject=a10, obligation=[surround(4, 4)], sanction=[reduce(g, 700)], deadline=18, time=2015-06-04 14:12:25.125, clock=0]
Time [clock=2, time=2015-06-04 14:12:35.158]
Obligation [subject=a10, obligation=[at(4, 3, a10)], sanction=[reduce(a10, 700)], deadline=14, time=2015-06-04 14:12:26.106, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-04 14:12:15.366, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-04 14:12:15.397, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=yellow, time=2015-06-04 14:12:15.128, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 14:12:15.338, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-04 14:12:15.117, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 14:12:15.141, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-04 14:12:15.359, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=yellow, time=2015-06-04 14:12:15.107, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 14:12:15.327, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 14:12:15.377, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 14:12:15.114, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 14:12:15.063, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 14:12:15.349, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 14:12:15.121, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 14:12:15.262, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-04 14:12:15.291, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 14:12:15.412, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 14:12:15.335, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-04 14:12:15.391, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-04 14:12:15.296, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-04 14:12:15.374, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 14:12:15.213, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 14:12:15.215, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-04 14:12:15.322, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 14:12:15.197, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 14:12:15.185, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 14:12:15.192, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-04 14:12:15.182, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-06-04 14:12:15.208, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-04 14:12:15.189, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 14:12:15.205, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-04 14:12:15.175, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 14:12:15.13, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 14:12:15.205, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 14:12:15.2, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 14:12:15.129, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-04 14:12:15.16, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 14:12:15.271, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 14:12:15.146, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-04 14:12:15.26, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=blue, time=2015-06-04 14:12:15.143, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-04 14:12:15.164, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-04 14:12:15.124, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 14:12:15.109, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-06-04 14:12:15.172, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-04 14:12:15.126, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 14:12:15.17, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 14:12:15.112, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-04 14:12:15.33, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 14:12:15.115, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-04 14:12:15.342, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 14:12:15.057, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-04 14:12:15.382, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-04 14:12:15.167, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 14:12:15.098, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 14:12:15.393, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=yellow, time=2015-06-04 14:12:15.371, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 14:12:15.217, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 14:12:15.099, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 14:12:15.188, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 14:12:15.41, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-04 14:12:15.211, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-06-04 14:12:15.284, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-04 14:12:15.16, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 14:12:15.194, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 14:12:15.303, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-06-04 14:12:15.204, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-06-04 14:12:15.178, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@42aaf2ef
[CTAH] Array of Terms: [Lapapl.data.Term;@65334b1a
[CTAH] The created APLList : [game_initialized]
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Setup Phase
setPhases in ClientGameStatus, the current phase is Setup Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 14:13:50.765, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 14:13:50.765, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 14:13:50.765, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 14:13:50.82, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 14:13:50.82, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-04 14:13:50.82, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 14:13:50.823, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 14:13:50.823, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-06-04 14:13:50.823, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 14:13:50.831, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 14:13:50.831, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 14:13:50.845, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 14:13:50.845, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 14:13:50.831, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=blue, time=2015-06-04 14:13:50.845, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 14:13:50.848, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 14:13:50.848, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-04 14:13:50.848, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-04 14:13:50.855, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-04 14:13:50.855, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-04 14:13:50.855, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 14:13:50.863, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 14:13:50.863, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 14:13:50.863, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-04 14:13:50.869, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-04 14:13:50.869, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-06-04 14:13:50.869, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 14:13:50.873, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 14:13:50.873, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-04 14:13:50.873, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 14:13:50.877, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 14:13:50.877, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-06-04 14:13:50.877, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 14:13:50.883, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 14:13:50.883, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-06-04 14:13:50.883, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 14:13:50.887, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 14:13:50.887, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 14:13:50.887, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 14:13:50.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 14:13:50.892, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 14:13:50.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-04 14:13:50.896, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-04 14:13:50.896, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=white, time=2015-06-04 14:13:50.896, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-04 14:13:50.901, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-04 14:13:50.901, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-04 14:13:50.901, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-04 14:13:50.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-04 14:13:50.905, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-06-04 14:13:50.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 14:13:50.909, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 14:13:50.909, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-04 14:13:50.909, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 14:13:50.913, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 14:13:50.913, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-06-04 14:13:50.913, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 14:13:50.928, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 14:13:50.928, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-06-04 14:13:50.928, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 14:13:50.94, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 14:13:50.94, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-04 14:13:50.94, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 14:13:50.946, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 14:13:50.946, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-06-04 14:13:50.946, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 14:13:50.952, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 14:13:50.952, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-06-04 14:13:50.952, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 14:13:50.958, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 14:13:50.958, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 14:13:50.958, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-04 14:13:50.964, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-04 14:13:50.964, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-04 14:13:50.964, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 14:13:50.972, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 14:13:50.972, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-04 14:13:50.972, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 14:13:50.975, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 14:13:50.975, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-04 14:13:50.975, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 14:13:50.979, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 14:13:50.979, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=yellow, time=2015-06-04 14:13:50.979, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 14:13:50.983, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 14:13:50.983, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 14:13:50.983, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=blue, time=2015-06-04 14:13:50.986, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=blue, time=2015-06-04 14:13:50.986, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=blue, time=2015-06-04 14:13:50.986, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 14:13:50.989, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 14:13:50.989, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-04 14:13:50.989, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 14:13:50.993, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 14:13:50.993, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 14:13:50.993, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 14:13:50.996, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 14:13:50.996, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 14:13:51.0, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 14:13:50.996, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 14:13:51.0, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 14:13:51.003, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 14:13:51.003, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-04 14:13:51.0, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 14:13:51.006, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 14:13:51.006, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 14:13:51.003, clock=0]
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(yellow, 0, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-04 14:13:51.006, clock=0]
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(blue, 0, 3)
Event processed UpdateTile(blue, 0, 4)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(yellow, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(yellow, 1, 5)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(yellow, 0, 1)
Event processed UpdateTile(white, 2, 2)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(blue, 0, 3)
org notification: Goal [id=null, cell=Cell [x=2, y=4], agent=null, time=2015-06-04 14:13:51.076, clock=0]
Event processed UpdateTile(blue, 0, 4)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(yellow, 1, 2)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(yellow, 1, 5)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(white, 2, 2)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(brown, 4, 1)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(yellow, 3, 3)
Event processed UpdateTile(blue, 4, 5)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(brown, 4, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(brown, 5, 4)
#########################Game Initialized
AGENT Thread-10: current phase name: Setup Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-12: current phase name: Setup Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(yellow, 4, 3)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(blue, 4, 5)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(yellow, 5, 2)
[Planbase]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(blue, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(yellow, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(blue, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
}


[new scheduled]:[GetPhase(setupphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 0), UpdateTile(yellow, 0, 1), UpdateTile(white, 0, 2), UpdateTile(blue, 0, 3), UpdateTile(blue, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(yellow, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(yellow, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(white, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(yellow, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(yellow, 4, 0), UpdateTile(brown, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(blue, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(brown, 5, 5)]
[After]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(blue, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(yellow, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(blue, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
}


Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(brown, 5, 5)
[Planbase]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(blue, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(yellow, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(blue, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
}


[new scheduled]:[GetPhase(setupphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(brown, 0, 0), UpdateTile(yellow, 0, 1), UpdateTile(white, 0, 2), UpdateTile(blue, 0, 3), UpdateTile(blue, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(yellow, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(yellow, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(white, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(yellow, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(yellow, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(yellow, 4, 0), UpdateTile(brown, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(yellow, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(blue, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(brown, 5, 5)]
[After]:{	GetPhase(setupphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(blue, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(yellow, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(yellow, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(white, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(yellow, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(yellow, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(blue, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(brown, 5, 5)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[CTAH] Agentposition: [2,0]
[Planbase]:{	B(clock(C));
	GetAgentPos(2, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(2, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(2, 0, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [4,4]
[Planbase]:{	GetAgentPos(2, 0, 0)
}


[new scheduled]:[GetAgentPos(2, 0, 0)]
[After]:{	GetAgentPos(2, 0, 0)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(4, 4, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(4, 4, C)]
[After]:{	B(clock(C));
	GetAgentPos(4, 4, C)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	GetAgentPos(4, 4, 0)
}


[new scheduled]:[GetAgentPos(4, 4, 0)]
[After]:{	GetAgentPos(4, 4, 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Group [name=g, ra=a10, type=ra, clock=0, time=2015-06-04 14:14:00.756]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=0, time=2015-06-04 14:14:00.768]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=0, time=2015-06-04 14:14:00.788]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=0, time=2015-06-04 14:14:00.784]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=0, time=2015-06-04 14:14:00.813]
object notification: Obligation [subject=a10, obligation=[surround(2, 4)], sanction=[reduce(g, 700)], deadline=18, time=2015-06-04 14:14:00.861, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptObligation(surround(2, 4), 18, reduce(g, 700))
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
[Planbase]:{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(2, 4), 18, reduce(g, 700))
}


[new scheduled]:[adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(2, 4), 18, reduce(g, 700))]
[After]:{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(2, 4), 18, reduce(g, 700))
}


[Planbase]:{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(2, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(2, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


[Planbase]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(2, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10
[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(2, 4); sendSouth(a10, 2, 4, 100); sendWest(a20, 2, 4, 100); sendEast(a30, 2, 4, 100); sendNorth(a40, 2, 4, 100); dropgoal(surround(2, 4, 700) : Infinite, priority 10), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[Planbase]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[After]:{	Surround(2, 4);
	sendSouth(a10, 2, 4, 100);
	sendWest(a20, 2, 4, 100);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	sendSouth(a10, 2, 4, 100);
	sendWest(a20, 2, 4, 100);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[sendSouth(a10, 2, 4, 100); sendWest(a20, 2, 4, 100); sendEast(a30, 2, 4, 100); sendNorth(a40, 2, 4, 100); dropgoal(surround(2, 4, 700) : Infinite, priority 10)]
[After]:{	sendSouth(a10, 2, 4, 100);
	sendWest(a20, 2, 4, 100);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 2, 3, 2, 4, 100),L,0);
	sendWest(a20, 2, 4, 100);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 2, 3, 2, 4, 100),L,0); sendWest(a20, 2, 4, 100); sendEast(a30, 2, 4, 100); sendNorth(a40, 2, 4, 100); dropgoal(surround(2, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 2, 3, 2, 4, 100),L,0);
	sendWest(a20, 2, 4, 100);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=3], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.343]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=2, y=3], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.343]
object notification: Obligation [subject=a10, obligation=[at(2, 3, a10)], sanction=[reduce(a10, 700)], deadline=14, time=2015-06-04 14:14:01.35, clock=0]
Event processed adoptObligation(at(2, 3, a10), 14, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 1, 4, 2, 4, 100),L,0);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 3, a10), 14, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 1, 4, 2, 4, 100),L,0); sendEast(a30, 2, 4, 100); sendNorth(a40, 2, 4, 100); dropgoal(surround(2, 4, 700) : Infinite, priority 10), adoptObligation(at(2, 3, a10), 14, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 1, 4, 2, 4, 100),L,0);
	sendEast(a30, 2, 4, 100);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
},
{	adoptObligation(at(2, 3, a10), 14, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=4], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.39]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=1, y=4], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.39]
[Planbase]:{	@ctenv(setGoal(a30, 3, 4, 2, 4, 100),L,0);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 3, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 3, 4, 2, 4, 100),L,0); sendNorth(a40, 2, 4, 100); dropgoal(surround(2, 4, 700) : Infinite, priority 10), adoptz(at(2, 3, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 3, 4, 2, 4, 100),L,0);
	sendNorth(a40, 2, 4, 100);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
},
{	adoptz(at(2, 3, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=4], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.448]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=3, y=4], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.448]
obligation to be adopted: at(2, 3, 700) : 4 Jun 2015 13:30:41 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(3, 4, a30)], sanction=[reduce(a30, 700)], deadline=14, time=2015-06-04 14:14:01.452, clock=0]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(3, 4, a30), 14, reduce(a30, 700))
[Planbase]:{	@ctenv(setGoal(a40, 2, 5, 2, 4, 100),L,0);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 2, 5, 2, 4, 100),L,0); dropgoal(surround(2, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 2, 5, 2, 4, 100),L,0);
	dropgoal(surround(2, 4, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=5], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.6]
[Planbase]:{	adoptObligation(at(3, 4, a30), 14, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a30), 14, reduce(a30, 700))]
[After]:{	adoptObligation(at(3, 4, a30), 14, reduce(a30, 700))
}


org notification: SetGoal [id=null, agent=a40, cell=Cell [x=2, y=5], goal=Cell [x=2, y=4], sanction=100, clock=0, time=2015-06-04 14:14:01.6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(3, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10)
}


obligation to be adopted: at(3, 4, 700) : 4 Jun 2015 13:30:41 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=1, time=2015-06-04 14:14:10.767]
object notification: Time [clock=1, time=2015-06-04 14:14:10.767]
org notification: Time [clock=1, time=2015-06-04 14:14:10.767]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(1)
Event processed UpdateClock(1)
[Planbase]:{	UpdateClock(1)
}


[new scheduled]:[UpdateClock(1)]
[After]:{	UpdateClock(1)
}


[Planbase]:{	UpdateClock(1)
}


[new scheduled]:[UpdateClock(1)]
[After]:{	UpdateClock(1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=2, time=2015-06-04 14:14:20.771]
object notification: Time [clock=2, time=2015-06-04 14:14:20.771]
org notification: Time [clock=2, time=2015-06-04 14:14:20.771]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-06-04 14:14:30.773]
object notification: Time [clock=3, time=2015-06-04 14:14:30.773]
org notification: Time [clock=3, time=2015-06-04 14:14:30.773]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-04 14:14:40.776]
object notification: Time [clock=4, time=2015-06-04 14:14:40.776]
org notification: Time [clock=4, time=2015-06-04 14:14:40.776]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-06-04 14:14:50.779]
org notification: Time [clock=5, time=2015-06-04 14:14:50.779]
object notification: Time [clock=5, time=2015-06-04 14:14:50.779]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=6, time=2015-06-04 14:15:00.782]
org notification: Time [clock=6, time=2015-06-04 14:15:00.782]
object notification: Time [clock=6, time=2015-06-04 14:15:00.782]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-04 14:15:10.785]
object notification: Time [clock=7, time=2015-06-04 14:15:10.785]
org notification: Time [clock=7, time=2015-06-04 14:15:10.785]
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[Planbase]:{	UpdateClock(7)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[After]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	UpdateClock(7)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@11f69937
[CTAH] The created APLList : [phasechange]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 3,4 color: neco
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@598d67b1
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 2,3 color: neco
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=2], time=2015-06-04 14:15:14.464, clock=7]
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][2] [1][2] [2][2] [2][3]

a10[CTAH] moveStepToGoalTest returns I have chip: [1,2,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, Clock)} else NextStep(1, 2)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 2, no); SentProposal(no, no, open, 7)} else NextStep(1, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 2, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	NextStep(1, 2)
}


[new scheduled]:[NextStep(1, 2)]
[After]:{	NextStep(1, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2)
}


a10[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=2], time=2015-06-04 14:15:16.246, clock=7]
object notification: Obligation [subject=a10, obligation=[makeMove(1, 2, a10)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-04 14:15:16.27, clock=7]
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=2], time=2015-06-04 14:15:16.246, clock=7]
[Planbase]:{	NoNextStep(1, 2)
}


[new scheduled]:[NoNextStep(1, 2)]
[After]:{	NoNextStep(1, 2)
}


Event processed adoptObligation(makeMove(1, 2, a10), 17, reduce(a10, 300))
Event processed UpdatePosition(1, 2, 7)
[Planbase]:{	adoptObligation(makeMove(1, 2, a10), 17, reduce(a10, 300))
},
{	UpdatePosition(1, 2, 7)
}


[new scheduled]:[findNextStep(neco, 700), adoptObligation(makeMove(1, 2, a10), 17, reduce(a10, 300)), UpdatePosition(1, 2, 7)]
[After]:{	findNextStep(neco, 700)
},
{	adoptObligation(makeMove(1, 2, a10), 17, reduce(a10, 300))
},
{	UpdatePosition(1, 2, 7)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(1, 2, 300) : 4 Jun 2015 13:31:56 GMT, priority 10)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, adoptz(makeMove(1, 2, 300) : 4 Jun 2015 13:31:56 GMT, priority 10)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	adoptz(makeMove(1, 2, 300) : 4 Jun 2015 13:31:56 GMT, priority 10)
}


obligation to be adopted: makeMove(1, 2, 300) : 4 Jun 2015 13:31:56 GMT, priority 10
[Planbase]:{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[2,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 2,3 color: neco
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][2] [1][3] [2][3]

a10[CTAH] moveStepToGoalTest returns I have chip: [1,3,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(1, 3, no); SentProposal(no, no, open, Clock)} else NextStep(1, 3)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(1, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(1, 3, no); SentProposal(no, no, open, 7)} else NextStep(1, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(1, 3, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(1, 3)
		}
}


[Planbase]:{	NextStep(1, 3)
}


[new scheduled]:[NextStep(1, 3)]
[After]:{	NextStep(1, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 3),L2,0); if B(L2=[actionresult([1,3])]) then {B(clock(Clock)); UpdatePosition(1, 3, Clock)}; NoNextStep(1, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3)
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=3], time=2015-06-04 14:15:18.37, clock=7]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=3], time=2015-06-04 14:15:18.37, clock=7]
Event processed UpdatePosition(1, 3, 7)
object notification: Points [subject=a10, time=2015-06-04 14:15:18.399, clock=7, value=700, id=null]
[Planbase]:{	NoNextStep(1, 3)
},
{	UpdatePosition(1, 3, 7)
}


[new scheduled]:[NoNextStep(1, 3), UpdatePosition(1, 3, 7)]
[After]:{	NoNextStep(1, 3)
},
{	UpdatePosition(1, 3, 7)
}


Event processed UpdatePoints(700)
[Planbase]:{	UpdatePoints(700)
}


[new scheduled]:[findNextStep(neco, 700), UpdatePoints(700)]
[After]:{	findNextStep(neco, 700)
},
{	UpdatePoints(700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[2,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[2,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a10[CTAH] going goal: 2,3 color: neco
org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=2], time=2015-06-04 14:15:19.654, clock=7]
a30[CTAH] path: 0
a30[CTAH] path: Path: [4][4] [3][4]

a30[CTAH] moveStepToGoalTest returns I have chip: [3,4,no,no]
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(3, 4, no); SentProposal(no, no, open, Clock)} else NextStep(3, 4)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(3, 4)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(3, 4)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(3, 4, no); SentProposal(no, no, open, 7)} else NextStep(3, 4)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(3, 4)
		}
}


[Planbase]:{	NextStep(3, 4)
}


[new scheduled]:[NextStep(3, 4)]
[After]:{	NextStep(3, 4)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 4),L2,0); if B(L2=[actionresult([3,4])]) then {B(clock(Clock)); UpdatePosition(3, 4, Clock)}; NoNextStep(3, 4)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4)
}


Need to wait 3 more seconds
org notification: Time [clock=8, time=2015-06-04 14:15:20.787]
object notification: Time [clock=8, time=2015-06-04 14:15:20.787]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=4], time=2015-06-04 14:15:20.714, clock=7]
object notification: Time [clock=8, time=2015-06-04 14:15:20.787]
object notification: Obligation [subject=a30, obligation=[makeMove(3, 4, a30)], sanction=[reduce(a30, 300)], deadline=18, time=2015-06-04 14:15:20.805, clock=8]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=4], time=2015-06-04 14:15:20.714, clock=7]
a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][3] [2][3]

a10[CTAH] moveStepToGoalTest returns I have chip: [2,3,no,no]
Event processed UpdateClock(8)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(8)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 3, no); SentProposal(no, no, open, Clock)} else NextStep(2, 3), UpdateClock(8)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	UpdateClock(8)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(2, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 3, no); SentProposal(no, no, open, 7)} else NextStep(2, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 3, no);
			SentProposal(no, no, open, 7)
		}
	else	{	NextStep(2, 3)
		}
}


[Planbase]:{	NextStep(2, 3)
}


[new scheduled]:[NextStep(2, 3)]
[After]:{	NextStep(2, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 3),L2,0); if B(L2=[actionresult([2,3])]) then {B(clock(Clock)); UpdatePosition(2, 3, Clock)}; NoNextStep(2, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3)
}


a10[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=3], time=2015-06-04 14:15:21.566, clock=8]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=3], time=2015-06-04 14:15:21.566, clock=8]
Event processed UpdatePosition(2, 3, 8)
[Planbase]:{	NoNextStep(2, 3)
},
{	UpdatePosition(2, 3, 8)
}


[new scheduled]:[NoNextStep(2, 3), UpdatePosition(2, 3, 8)]
[After]:{	NoNextStep(2, 3)
},
{	UpdatePosition(2, 3, 8)
}


[Planbase]:


[new scheduled]:[]
[After]:


a30[CTAH] moveStepToGoal returns: [3,4]
Event processed UpdateClock(8)
Event processed adoptObligation(makeMove(3, 4, a30), 18, reduce(a30, 300))
Event processed UpdatePosition(3, 4, 7)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4)
},
{	UpdateClock(8)
},
{	adoptObligation(makeMove(3, 4, a30), 18, reduce(a30, 300))
},
{	UpdatePosition(3, 4, 7)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 4, Clock); NoNextStep(3, 4), UpdateClock(8), adoptObligation(makeMove(3, 4, a30), 18, reduce(a30, 300)), UpdatePosition(3, 4, 7)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 4, Clock);
	NoNextStep(3, 4)
},
{	UpdateClock(8)
},
{	adoptObligation(makeMove(3, 4, a30), 18, reduce(a30, 300))
},
{	UpdatePosition(3, 4, 7)
}


[Planbase]:{	UpdatePosition(3, 4, 7);
	NoNextStep(3, 4)
},
{	adoptz(makeMove(3, 4, 300) : 4 Jun 2015 13:32:03 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(3, 4, 7); NoNextStep(3, 4), adoptz(makeMove(3, 4, 300) : 4 Jun 2015 13:32:03 GMT, priority 10)]
[After]:{	UpdatePosition(3, 4, 7);
	NoNextStep(3, 4)
},
{	adoptz(makeMove(3, 4, 300) : 4 Jun 2015 13:32:03 GMT, priority 10)
}


obligation to be adopted: makeMove(3, 4, 300) : 4 Jun 2015 13:32:03 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=2], time=2015-06-04 14:15:28.002, clock=8]
org notification: Time [clock=9, time=2015-06-04 14:15:30.79]
object notification: Time [clock=9, time=2015-06-04 14:15:30.79]
object notification: Time [clock=9, time=2015-06-04 14:15:30.79]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-06-04 14:15:31.032, clock=9]
org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=2], time=2015-06-04 14:15:37.867, clock=9]
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-06-04 14:15:40.271, clock=9]
org notification: Time [clock=10, time=2015-06-04 14:15:40.793]
object notification: Time [clock=10, time=2015-06-04 14:15:40.793]
object notification: Time [clock=10, time=2015-06-04 14:15:40.793]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=5], time=2015-06-04 14:15:48.048, clock=10]
org notification: Time [clock=11, time=2015-06-04 14:15:50.796]
object notification: Time [clock=11, time=2015-06-04 14:15:50.796]
object notification: Time [clock=11, time=2015-06-04 14:15:50.796]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=3], time=2015-06-04 14:15:55.053, clock=11]
object notification: Time [clock=12, time=2015-06-04 14:16:00.799]
object notification: Time [clock=12, time=2015-06-04 14:16:00.799]
org notification: Time [clock=12, time=2015-06-04 14:16:00.799]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=4], time=2015-06-04 14:16:06.034, clock=12]
object notification: Time [clock=13, time=2015-06-04 14:16:10.801]
org notification: Time [clock=13, time=2015-06-04 14:16:10.801]
object notification: Time [clock=13, time=2015-06-04 14:16:10.801]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a40, id=null, cell=Cell [x=2, y=5], time=2015-06-04 14:16:11.649, clock=13]
org notification: Time [clock=14, time=2015-06-04 14:16:20.803]
object notification: Time [clock=14, time=2015-06-04 14:16:20.803]
object notification: Time [clock=14, time=2015-06-04 14:16:20.803]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=15, time=2015-06-04 14:16:30.805]
object notification: Time [clock=15, time=2015-06-04 14:16:30.805]
object notification: Time [clock=15, time=2015-06-04 14:16:30.805]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=16, time=2015-06-04 14:16:40.807]
object notification: Time [clock=16, time=2015-06-04 14:16:40.807]
org notification: Time [clock=16, time=2015-06-04 14:16:40.807]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=17, time=2015-06-04 14:16:50.81]
org notification: Time [clock=17, time=2015-06-04 14:16:50.81]
object notification: Time [clock=17, time=2015-06-04 14:16:50.81]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=18, time=2015-06-04 14:17:00.813]
object notification: Time [clock=18, time=2015-06-04 14:17:00.813]
object notification: Time [clock=18, time=2015-06-04 14:17:00.813]
object notification: Points [subject=a10, time=2015-06-04 14:17:00.831, clock=18, value=400, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


Event processed UpdateClock(18)
Event processed UpdatePoints(400)
[Planbase]:{	UpdateClock(18)
},
{	UpdatePoints(400)
}


[new scheduled]:[UpdateClock(18), UpdatePoints(400)]
[After]:{	UpdateClock(18)
},
{	UpdatePoints(400)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=19, time=2015-06-04 14:17:10.817]
object notification: Time [clock=19, time=2015-06-04 14:17:10.817]
org notification: Time [clock=19, time=2015-06-04 14:17:10.817]
object notification: Points [subject=a30, time=2015-06-04 14:17:10.825, clock=19, value=700, id=null]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdatePoints(700)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:{	UpdateClock(19)
},
{	UpdatePoints(700)
}


[new scheduled]:[UpdateClock(19), UpdatePoints(700)]
[After]:{	UpdateClock(19)
},
{	UpdatePoints(700)
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@a6ad2fb
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@2b0191b8
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=20, time=2015-06-04 14:17:20.819]
org notification: Time [clock=20, time=2015-06-04 14:17:20.819]
object notification: Time [clock=20, time=2015-06-04 14:17:20.819]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:3,C:4).
Chips: { chips  'blue':2 'white':4 'brown':0 'yellow':1 }.
Score: 700.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:2,C:3).
Chips: { chips  'blue':1 'white':3 'brown':2 'yellow':3 }.
Score: 400.
Team: -1.

Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@377f6717
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@1e89ecdc
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=21, time=2015-06-04 14:17:30.821]
object notification: Time [clock=21, time=2015-06-04 14:17:30.821]
org notification: Time [clock=21, time=2015-06-04 14:17:30.821]
[Planbase]:


[Planbase]:


[new scheduled]:[]
[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-06-04 14:17:40.824]
org notification: Time [clock=22, time=2015-06-04 14:17:40.824]
object notification: Time [clock=22, time=2015-06-04 14:17:40.824]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=23, time=2015-06-04 14:17:50.826]
object notification: Time [clock=23, time=2015-06-04 14:17:50.826]
org notification: Time [clock=23, time=2015-06-04 14:17:50.826]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-04 14:18:00.829]
object notification: Time [clock=24, time=2015-06-04 14:18:00.829]
org notification: Time [clock=24, time=2015-06-04 14:18:00.829]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=25, time=2015-06-04 14:18:10.832]
org notification: Time [clock=25, time=2015-06-04 14:18:10.832]
object notification: Time [clock=25, time=2015-06-04 14:18:10.832]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-06-04 14:18:20.836]
org notification: Time [clock=26, time=2015-06-04 14:18:20.836]
object notification: Time [clock=26, time=2015-06-04 14:18:20.836]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=27, time=2015-06-04 14:18:30.838]
object notification: Time [clock=27, time=2015-06-04 14:18:30.838]
object notification: Time [clock=27, time=2015-06-04 14:18:30.838]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=28, time=2015-06-04 14:18:40.842]
org notification: Time [clock=28, time=2015-06-04 14:18:40.842]
object notification: Time [clock=28, time=2015-06-04 14:18:40.842]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=29, time=2015-06-04 14:18:50.845]
org notification: Time [clock=29, time=2015-06-04 14:18:50.845]
object notification: Time [clock=29, time=2015-06-04 14:18:50.845]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-04 14:19:00.848]
object notification: Time [clock=30, time=2015-06-04 14:19:00.848]
org notification: Time [clock=30, time=2015-06-04 14:19:00.848]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=31, time=2015-06-04 14:19:10.851]
object notification: Time [clock=31, time=2015-06-04 14:19:10.851]
org notification: Time [clock=31, time=2015-06-04 14:19:10.851]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


